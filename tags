!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	nanopores/tools/balls.py	/^    A = Box([-1, -1], [1, 1]) | Box([0.5, -1.2], [1.2, -0.5])$/;"	v
A	scripts/random_walk_aHem/plot_aHem.py	/^A=0$/;"	v
Across	scripts/numerics/selectivity1D.py	/^Across = r0**2 * dolfin.pi$/;"	v
AdaptableBC	nanopores/tools/illposed.py	/^class AdaptableBC(DirichletBC):$/;"	c
AdaptableLinearProblem	nanopores/tools/illposed.py	/^class AdaptableLinearProblem(object):$/;"	c
AdaptableNonlinearProblem	nanopores/tools/illposed.py	/^class AdaptableNonlinearProblem(AdaptableLinearProblem):$/;"	c
AgmeanPore	scripts/plot_scripts/script2DW.py	/^    AgmeanPore = pi*geo_params["r0"]*(geo_params["r0"] + geo_params["l0"]\/numpy.tan((90-geo_dict["angle"]\/2)*pi\/180))$/;"	v
Array	nanopores/py4gmsh/basic.py	/^def Array(entities):$/;"	f
B	nanopores/tools/balls.py	/^    B = Ball([2, 0], 0.5, lc=1.)$/;"	v
BC	nanopores/tools/geometry.py	/^    def BC(self, V, g, string=None):$/;"	m	class:Geometry
BSpline	nanopores/py4gmsh/basic.py	/^def BSpline(control_points):$/;"	f
Back	nanopores/tools/utilities.py	/^    class Back(dolfin.SubDomain):$/;"	c	function:plot_sliced
Ball	nanopores/tools/balls.py	/^class Ball(BallCollection):$/;"	c
BallCollection	nanopores/tools/balls.py	/^class BallCollection(BoxCollection):$/;"	c
Bottom	scripts/fluorophore_in_top_reservoir.py	/^class Bottom(SubDomain):$/;"	c
Boundary	nanopores/geometries/curved.py	/^class Boundary(SubDomain):$/;"	c
Boundary	nanopores/tools/box.py	/^def Boundary(coll):$/;"	f
BoundaryCollection	nanopores/tools/box.py	/^class BoundaryCollection(BoxCollection):$/;"	c
BoundaryLayer	nanopores/py4gmsh/basic.py	/^def BoundaryLayer(edges_list=None,$/;"	f
Box	nanopores/tools/balls.py	/^class Box(BallCollection, box.Box):$/;"	c
Box	nanopores/tools/box.py	/^class Box(BoxCollection):$/;"	c
BoxCollection	nanopores/tools/box.py	/^class BoxCollection(object):$/;"	c
BoxField	nanopores/py4gmsh/basic.py	/^def BoxField(vin=None, vout=None, xmin = None, xmax = None, ymin = None, ymax = None):$/;"	f
BulkFluid	nanopores/geometries/H_cyl_geo/subdomains.py	/^class BulkFluid(SubDomain):$/;"	c
BulkFluid	nanopores/geometries/P_geo/subdomains.py	/^    class BulkFluid(SubDomain):$/;"	c	function:subdomain_list
BulkFluid	nanopores/geometries/W_2D_geo/subdomains.py	/^    class BulkFluid(SubDomain):$/;"	c	function:subdomain_list
BulkFluid	nanopores/geometries/W_3D_geo/subdomains.py	/^    class BulkFluid(SubDomain):$/;"	c	function:subdomain_list
BulkFluid	nanopores/geometries/aHem/subdomains.py	/^class BulkFluid(SubDomain):$/;"	c
BulkFluidBottom	nanopores/geometries/H_geo/subdomains.py	/^    class BulkFluidBottom(SubDomain):$/;"	c	function:subdomain_list
BulkFluidTop	nanopores/geometries/H_geo/subdomains.py	/^    class BulkFluidTop(SubDomain):$/;"	c	function:subdomain_list
C	nanopores/tools/balls.py	/^    C = A | B$/;"	v
C	scripts/plot_scripts/PMFplots.py	/^C = 1e-12\/(kB*T) # [kT]$/;"	v
C	scripts/random_walk_aHem/run.py	/^C=1\/(gamma)*tau # [s^2\/kg]==>multiply force with 1e9 to convert from N to kg*nm\/s^2$/;"	v
C0	scripts/survival.py	/^C0 = Constant((0.,0.,0.))$/;"	v
CS	scripts/howorka/HoworkaTools.py	/^    CS = ax.tricontourf(triang, z, contours, norm=norm2, cmap='PuBu_r')$/;"	v
CS	scripts/howorka/video.py	/^    CS = ax.tricontourf(triang, z, contours, norm=norm2, cmap='PuBu_r')$/;"	v
CacheBase	nanopores/tools/fields.py	/^class CacheBase(object):$/;"	c
CallableMeshFunction	nanopores/tools/geometry.py	/^class CallableMeshFunction(object):$/;"	c
Center	scripts/fluorophore_in_top_reservoir.py	/^class Center(SubDomain):$/;"	c
CenterBlock	scripts/fluorophore_in_top_reservoir.py	/^class CenterBlock(SubDomain):$/;"	c
CenterLine	scripts/fluorophore_in_top_reservoir.py	/^class CenterLine(SubDomain):$/;"	c
CenterSAMB	nanopores/geometries/W_2D_geo/subdomains.py	/^    class CenterSAMB(SubDomain):$/;"	c	function:boundaries_list
CenterSAMB	nanopores/geometries/W_3D_geo/subdomains.py	/^    class CenterSAMB(SubDomain):$/;"	c	function:boundaries_list
ChargedDNAB	nanopores/geometries/H_cyl_geo/subdomains.py	/^class ChargedDNAB(SubDomain):$/;"	c
ChargedDNAB	nanopores/geometries/P_geo/subdomains.py	/^    class ChargedDNAB(SubDomain):$/;"	c	function:boundaries_list
ChargedDNAB	nanopores/geometries/aHem/subdomains.py	/^class ChargedDNAB(SubDomain):$/;"	c
ChargedDNAinB	nanopores/geometries/H_geo/subdomains.py	/^    class ChargedDNAinB(SubDomain):$/;"	c	function:boundaries_list
ChargedDNAoutB	nanopores/geometries/H_geo/subdomains.py	/^    class ChargedDNAoutB(SubDomain):$/;"	c	function:boundaries_list
Cinvlscale	nanopores/physics/pnps.py	/^        def Cinvlscale(i):$/;"	f	function:PNPS.__init__
Circle	nanopores/geometries/curved.py	/^class Circle(SubDomain):$/;"	c
Circle	nanopores/py4gmsh/basic.py	/^def Circle(point_ids):$/;"	f
Cline	scripts/fluorophore_in_top_reservoir.py	/^Cline = assemble((eps*grad(u)[1]*Expression("x[0]*2*pi"))("+")*geo.dS("centerline"))\/area$/;"	v
CloneFig	scripts/finfet/collocation_methods/CloneFig.m	/^function CloneFig(inFigNum,OutFigNum)$/;"	f
Clscale	nanopores/tools/errorest.py	/^    def Clscale(i):$/;"	f	function:pb_indicator_GO
Clscale	nanopores/tools/errorest.py	/^    def Clscale(i):$/;"	f	function:pb_indicator_GO_cheap
Clscale	nanopores/tools/errorest.py	/^    def Clscale(i):$/;"	f	function:poisson_indicator
Collocation_method_sparse_grids	scripts/finfet/collocation_methods/Collocation_method_sparse_grids.m	/^function [CENTER,weight] = Collocation_method_sparse_grids( start,order,lw,hb, wb,radius,number_atom )$/;"	f
Comment	nanopores/py4gmsh/basic.py	/^def Comment(string):$/;"	f
CompoundLine	nanopores/py4gmsh/basic.py	/^def CompoundLine(lines):$/;"	f
CompoundSurface	nanopores/py4gmsh/basic.py	/^def CompoundSurface(surfaces):$/;"	f
CompoundVolume	nanopores/py4gmsh/basic.py	/^def CompoundVolume(volumes):$/;"	f
ConvectionDiffusion	nanopores/physics/convdiff.py	/^class ConvectionDiffusion(TransientLinearPDE):$/;"	c
ConvectionDiffusionProblem	nanopores/physics/convdiff.py	/^class ConvectionDiffusionProblem(GeneralLinearProblem):$/;"	c
ConvectionDiffusionSteady	nanopores/physics/convdiff.py	/^class ConvectionDiffusionSteady(LinearPDE):$/;"	c
Convert2DExpression	nanopores/tools/utilities.py	/^    class Convert2DExpression(dolfin.Expression):$/;"	c	function:convert2D
Convert3DExpression	nanopores/tools/utilities.py	/^    class Convert3DExpression(dolfin.Expression):$/;"	c	function:convert3D
Core	nanopores/geometries/Nanowire/subdomains.py	/^class Core(SubDomain):$/;"	c
CoreB	nanopores/geometries/Nanowire/subdomains.py	/^class CoreB(SubDomain):$/;"	c
CoupledProblem	nanopores/tools/coupled.py	/^class CoupledProblem(object):$/;"	c
CoupledSolver	nanopores/tools/coupled.py	/^class CoupledSolver(PDESystem):$/;"	c
Cpoint	scripts/fluorophore_in_top_reservoir.py	/^Cpoint = phys.permittivity["fluid"]*(u([0.,ly\/2+h]) - u([0.,ly\/2-h]))\/(2.*h)$/;"	v
CrossBottom2D	nanopores/geometries/H_cyl_geo/subdomains.py	/^class CrossBottom2D(SubDomain):$/;"	c
CrossBottom2D	nanopores/geometries/H_geo/subdomains.py	/^    class CrossBottom2D(SubDomain):$/;"	c	function:boundaries_list
CrossBottom2D	nanopores/geometries/aHem/subdomains.py	/^class CrossBottom2D(SubDomain):$/;"	c
CrossCenterBottom2D	nanopores/geometries/H_cyl_geo/subdomains.py	/^class CrossCenterBottom2D(SubDomain):$/;"	c
CrossCenterBottom2D	nanopores/geometries/H_geo/subdomains.py	/^    class CrossCenterBottom2D(SubDomain):$/;"	c	function:boundaries_list
CrossCenterBottom2D	nanopores/geometries/P_geo/subdomains.py	/^    class CrossCenterBottom2D(SubDomain):$/;"	c	function:boundaries_list
CrossCenterBottom2D	nanopores/geometries/aHem/subdomains.py	/^class CrossCenterBottom2D(SubDomain):$/;"	c
CrossCenterTop2D	nanopores/geometries/H_cyl_geo/subdomains.py	/^class CrossCenterTop2D(SubDomain):$/;"	c
CrossCenterTop2D	nanopores/geometries/H_geo/subdomains.py	/^    class CrossCenterTop2D(SubDomain):$/;"	c	function:boundaries_list
CrossCenterTop2D	nanopores/geometries/P_geo/subdomains.py	/^    class CrossCenterTop2D(SubDomain):$/;"	c	function:boundaries_list
CrossCenterTop2D	nanopores/geometries/aHem/subdomains.py	/^class CrossCenterTop2D(SubDomain):$/;"	c
CrossTop2D	nanopores/geometries/H_cyl_geo/subdomains.py	/^class CrossTop2D(SubDomain):$/;"	c
CrossTop2D	nanopores/geometries/H_geo/subdomains.py	/^    class CrossTop2D(SubDomain):$/;"	c	function:boundaries_list
CrossTop2D	nanopores/geometries/aHem/subdomains.py	/^class CrossTop2D(SubDomain):$/;"	c
CurrentPB	nanopores/physics/howorka.py	/^def CurrentPB(geo, r2pi, bulkcon, mu, rDPore, bV, UT, lscale, cFarad):$/;"	f
CurrentPB	nanopores/physics/pore.py	/^def CurrentPB(geo, r2pi, bulkcon, mu, rDPore, UT, lscale, cFarad, invscale):$/;"	f
CurrentPB	nanopores/physics/pore_dna.py	/^def CurrentPB(geo):$/;"	f
CurrentPB	nanopores/physics/pore_molecule.py	/^def CurrentPB(geo, r2pi, bulkcon, mu, rDPore, bV, UT, lscale, cFarad):$/;"	f
CurrentPBdrift	nanopores/physics/howorka.py	/^def CurrentPBdrift(geo, r2pi, bulkcon, mu, rDPore, UT, lscale, cFarad):$/;"	f
CurrentPBdrift	nanopores/physics/pore_molecule.py	/^def CurrentPBdrift(geo, r2pi, bulkcon, mu, rDPore, UT, lscale, cFarad):$/;"	f
CurrentPNPS	nanopores/physics/pore.py	/^def CurrentPNPS(geo, cFarad, UT, grad, r2pi, dim, invscale):$/;"	f
Cx	scripts/random_walk_aHem/plot_aHem.py	/^Cx=0$/;"	v
Cy	scripts/random_walk_aHem/plot_aHem.py	/^Cy=0$/;"	v
Cylinder	nanopores/geometries/curved.py	/^class Cylinder(SubDomain):$/;"	c
CylinderCollection	nanopores/tools/axisym.py	/^class CylinderCollection(BoxCollection):$/;"	c
D	nanopores/physics/electrolyte.py	/^D = 1.9e-9  # diffusivity [m^2\/s]$/;"	v
D	nanopores/physics/finfet.py	/^D = dict($/;"	v
D	nanopores/physics/howorka.py	/^D = 1.9e-9  # diffusivity [m^2\/s]$/;"	v
D	nanopores/physics/params_physical.py	/^D = 1.9e-9  # Diffusion [m^2\/s] # lower in pore according to kurnikowa paper$/;"	v
D	nanopores/physics/pore_dna.py	/^D = 1.9e-9  # diffusivity [m^2\/s]$/;"	v
D	nanopores/physics/pore_molecule.py	/^D = 1.9e-9  # diffusivity [m^2\/s]$/;"	v
D	scripts/analytical_test_case.py	/^D = phys.DPore$/;"	v
D	scripts/numerics/anaPNPS_refinement.py	/^D = phys.DPore$/;"	v
D	scripts/numerics/anaPNPS_refinement_2D.py	/^D = phys.DPore$/;"	v
D	scripts/numerics/anaPNPS_uniform.py	/^D = phys.DPore$/;"	v
D	scripts/numerics/analyticalPNPS.py	/^D = phys.DPore$/;"	v
D	scripts/numerics/analyticalPNPS_2D.py	/^D = phys.DPore$/;"	v
D	scripts/numerics/analyticalPNPS_3D.py	/^D = phys.DPore$/;"	v
D	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^D = phys.DPore$/;"	v
D	scripts/numerics/analyticalPNP_3D.py	/^D = phys.DPore$/;"	v
D	scripts/pughpore/diffusion.py	/^D = phys.kT\/gamma$/;"	v
D	scripts/random_walk_aHem/run.py	/^D=(kb*T)\/(6*pi*0.5e-9*visc) #diffusion[m^2\/s]$/;"	v
D	scripts/random_walk_aHem/varplots.py	/^D=(kb*T)\/(6*pi*0.5e-9*visc)*1e9 #diffusion[nm^2\/ns]$/;"	v
D	scripts/stokes_law/stokes_drag_comparison.py	/^D = [1.\/x for x in drag]$/;"	v
D	scripts/stokes_law/stokes_law_2D_stats.py	/^D = {"r":Dx, "z":Dy, "rz":Dxy}$/;"	v
D0	scripts/stokes_law/stokes_drag_comparison.py	/^D0 = [1.\/x for x in drag0]$/;"	v
DATADIR	nanopores/dirnames.py	/^DATADIR = os.path.join(HOME,".%s" %NAME)$/;"	v
DIR	nanopores/tools/fields.py	/^DIR = os.path.join(os.path.dirname(INSTALLDIR), "data", "fields")$/;"	v
DIR	scripts/numerics/force_profiles.py	/^    DIR = os.path.expanduser("~") + "\/papers\/pnps-numerics\/figure_material\/PMF\/"$/;"	v
DIR	scripts/numerics/plot_adaptivity_results.py	/^DIR = os.path.expanduser("~") + "\/papers\/pnps-numerics\/figures\/"$/;"	v
DIR	scripts/numerics/plot_fixedpoint.py	/^DIR = os.path.expanduser("~") + "\/papers\/pnps-numerics\/figures\/"$/;"	v
DIR	scripts/numerics/plot_robustness.py	/^DIR = os.path.expanduser("~") + "\/papers\/pnps-numerics\/figures\/"$/;"	v
DNA	nanopores/geometries/H_cyl_geo/subdomains.py	/^class DNA(SubDomain):$/;"	c
DNA	nanopores/geometries/H_geo/subdomains.py	/^    class DNA(SubDomain):$/;"	c	function:subdomain_list
DNA	nanopores/geometries/P_geo/subdomains.py	/^    class DNA(SubDomain):$/;"	c	function:subdomain_list
DNA	nanopores/geometries/aHem/subdomains.py	/^class DNA(SubDomain):$/;"	c
DNAArea	nanopores/physics/howorka.py	/^def DNAArea(geo, lscale):$/;"	f
DNAlength	nanopores/geometries/P_geo/params_geo.py	/^DNAlength=100*nm  # one Kuhn-length$/;"	v
DNAql	nanopores/physics/params_physical.py	/^DNAql = bpq\/distbp  # line charge of dsDNA$/;"	v
DNAqs	nanopores/physics/howorka.py	/^DNAqs = lambda: DNAqsPure*dnaqsdamp$/;"	v
DNAqs	nanopores/physics/params_physical.py	/^DNAqs = -qq\/nm**2 # surface charge of dsDNA (according to Howorka)$/;"	v
DNAqs	nanopores/physics/pore.py	/^DNAqs = lambda DNAqsPure, dnaqsdamp: DNAqsPure*dnaqsdamp$/;"	v
DNAqs	nanopores/physics/pore_dna.py	/^DNAqs = lambda: DNAqsPure*dnaqsdamp$/;"	v
DNAqs	nanopores/physics/pore_molecule.py	/^DNAqs = lambda: DNAqsPure*dnaqsdamp$/;"	v
DNAqsHoworka	nanopores/physics/howorka.py	/^def DNAqsHoworka(geo, DNAqs, QDNA, dim, r2pi, lscale):$/;"	f
DNAqsPure	nanopores/physics/howorka.py	/^DNAqsPure = -qq\/nm**2 # = -0.16 # DNA surface charge density [C\/m**2]$/;"	v
DNAqsPure	nanopores/physics/pore.py	/^DNAqsPure = -qq\/nm**2 # = -0.16 # DNA surface charge density [C\/m**2]$/;"	v
DNAqsPure	nanopores/physics/pore_dna.py	/^DNAqsPure = -qq\/nm**2 # = -0.16 # DNA surface charge density [C\/m**2]$/;"	v
DNAqsPure	nanopores/physics/pore_molecule.py	/^DNAqsPure = -qq\/nm**2 # = -0.16 # DNA surface charge density [C\/m**2]$/;"	v
DNAradius	nanopores/geometries/P_geo/params_geo.py	/^DNAradius=1.1*nm$/;"	v
DPore	nanopores/physics/pore.py	/^DPore = lambda D, rDPore: D*rDPore$/;"	v
D_en	scripts/plot_forces_aHem/aHem_array_2d.py	/^D_en = D_kcal*4184e9 # from kcal to N*nm$/;"	v
D_en	scripts/random_walk_aHem/aHem_array.py	/^D_en = D_kcal*4184e9 # from kcal to N*nm$/;"	v
D_en	scripts/random_walk_aHem/aHem_array_2d.py	/^D_en = D_kcal*4184e9 # from kcal to N*nm$/;"	v
D_kcal	scripts/plot_forces_aHem/aHem_array_2d.py	/^D_kcal = 100 # kcal\/mol$/;"	v
D_kcal	scripts/random_walk_aHem/aHem_array.py	/^D_kcal = 100 # kcal\/mol$/;"	v
D_kcal	scripts/random_walk_aHem/aHem_array_2d.py	/^D_kcal = 100 # kcal\/mol$/;"	v
Data	nanopores/tools/protocol.py	/^class Data(object):$/;"	c
Ddopant	nanopores/physics/finfet.py	/^Ddopant = lambda: Dsource*5.$/;"	v
Dfin	nanopores/physics/finfet.py	/^Dfin = -1e15\/cm**3$/;"	v
Dict2Expression	nanopores/tools/geometry.py	/^class Dict2Expression(Expression): #TODO: too slow... --> compiled expr??$/;"	c
DiffusionProblem1D	scripts/numerics/diffusion_with_force_profile.py	/^class DiffusionProblem1D(SimpleNernstPlanckProblem):$/;"	c
Dm	nanopores/physics/pore.py	/^Dm = Dp$/;"	v
Dmol	scripts/pughpore/randomwalk/run.py	/^Dmol = kT\/(6.*math.pi*eta*rMolecule*1e-9)$/;"	v
Dopants	nanopores/geometries/Nanowire/subdomains.py	/^class Dopants(SubDomain):$/;"	c
Dopants	nanopores/physics/finfet.py	/^    class Dopants(dolfin.SubDomain):$/;"	c	function:add_dopants
Dopants2	nanopores/geometries/Nanowire/subdomains.py	/^def Dopants2(subdomains, i, xi=[], **params):$/;"	f
Dp	nanopores/physics/pore.py	/^Dp = dict($/;"	v
Dsource	nanopores/physics/finfet.py	/^Dsource = 7e18\/cm**3$/;"	v
Dstokes	nanopores/scripts/stokes_diffusivity.py	/^def Dstokes(r):$/;"	f
Dstr	scripts/numerics/anaPNPS_refinement.py	/^Dstr = " (2D)"$/;"	v
Dstr	scripts/numerics/anaPNPS_refinement.py	/^Dstr = " (3D)"$/;"	v
Dstr	scripts/numerics/anaPNPS_refinement_2D.py	/^Dstr = " (2D)"$/;"	v
Dstr	scripts/numerics/analyticalPNPS.py	/^Dstr = " (2D)"$/;"	v
Dstr	scripts/numerics/analyticalPNPS.py	/^Dstr = " (3D)"$/;"	v
Dtarget	nanopores/physics/howorka.py	/^Dtarget = { # diffusivity of target molecule relative to bulk$/;"	v
Dtarget	nanopores/physics/pore_molecule.py	/^Dtarget = { # diffusivity of target molecule relative to bulk$/;"	v
Dtarget	scripts/numerics/diffusion_with_force_profile.py	/^def Dtarget(r):$/;"	f
DtargetBulk	nanopores/physics/howorka.py	/^DtargetBulk = lambda: kB*T\/(6*dolfin.pi*eta*rTarget) # Stokes Law$/;"	v
DtargetBulk	nanopores/physics/pore_molecule.py	/^DtargetBulk = lambda: kB*T\/(6*dolfin.pi*eta*rTarget) # Stokes Law$/;"	v
DtargetPore	nanopores/physics/howorka.py	/^DtargetPore = lambda: kB*T\/(6*dolfin.pi*eta*rTarget)*rDtargetPore$/;"	v
DtargetPore	nanopores/physics/pore_molecule.py	/^DtargetPore = lambda: kB*T\/(6*dolfin.pi*eta*rTarget)*rDtargetPore$/;"	v
Dx	scripts/stokes_law/stokes_law_2D_stats.py	/^Dx = []$/;"	v
Dxy	scripts/stokes_law/stokes_law_2D_stats.py	/^Dxy = []$/;"	v
Dy	scripts/stokes_law/stokes_law_2D_stats.py	/^Dy = []$/;"	v
E	scripts/finfet/finfet.py	/^    E = (phys.vD - phys.vS)\/L$/;"	v
E	scripts/finfet/finfet.py	/^    E = 0.$/;"	v
E	scripts/finfet/test_wire.py	/^E = -voltage\/1000e-9$/;"	v
E0	scripts/analytical_test_case.py	/^E0 = -lscale*bV\/(2.*Rz)$/;"	v
E0	scripts/numerics/anaPNPS_refinement.py	/^E0 = -lscale*bV\/(2.*Rz)$/;"	v
E0	scripts/numerics/anaPNPS_refinement_2D.py	/^E0 = -lscale*bV\/(2.*Rz)$/;"	v
E0	scripts/numerics/anaPNPS_uniform.py	/^E0 = -lscale*bV\/(2.*Rz)$/;"	v
E0	scripts/numerics/analyticalPNPS.py	/^E0 = -lscale*bV\/(2.*Rz)$/;"	v
E0	scripts/numerics/analyticalPNPS_2D.py	/^E0 = -lscale*bV\/(2.*Rz)$/;"	v
E0	scripts/numerics/analyticalPNPS_3D.py	/^E0 = -lscale*bV\/(2.*Rz)$/;"	v
E0	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^E0 = -lscale*bV\/(2.*Rz)$/;"	v
E0	scripts/numerics/analyticalPNP_3D.py	/^E0 = -lscale*bV\/(2.*Rz)$/;"	v
E0	scripts/test3D_GOA.py	/^        E0 = (v([x0[0], x0[1], x0[2]-r])-v([x0[0], x0[1], x0[2]+r]))\/(2.*r)*phys.lscale$/;"	v
Eline	scripts/fluorophore_in_top_reservoir.py	/^Eline = assemble((-grad(u)[1]*Expression("x[0]*2*pi"))("+")*geo.dS("centerline"))\/area$/;"	v
EmptySet	nanopores/tools/balls.py	/^class EmptySet(BallCollection):$/;"	c
Entity	nanopores/tools/box.py	/^Entity = {$/;"	v
Epoint	scripts/fluorophore_in_top_reservoir.py	/^Epoint = -(u([0.,ly\/2+h]) - u([0.,ly\/2-h]))\/(2.*h)$/;"	v
Estimator	nanopores/tools/errorest.py	/^class Estimator(object):$/;"	c
ExactFloat	nanopores/tools/box.py	/^class ExactFloat(float):$/;"	c
ExitTimeProblem	nanopores/physics/exittime.py	/^class ExitTimeProblem(GeneralLinearProblem):$/;"	c
Extrude	nanopores/py4gmsh/basic.py	/^def Extrude(entity,$/;"	f
F	nanopores/scripts/test_survival.py	/^F = phys.Feff(v, u)$/;"	v
F	scripts/howorka/HoworkaTools.py	/^F = dolfin.interpolate(F, VV)$/;"	v
F	scripts/howorka/forcefield.py	/^F = dolfin.interpolate(F, VV)$/;"	v
F	scripts/howorka/test_forcefields.py	/^F = data["F"]$/;"	v
F	scripts/numerics/adap3Dref.py	/^F = Fdrag + Fel$/;"	v
F	scripts/plot_scripts/IV_curve_2D.py	/^F = []$/;"	v
F	scripts/plot_scripts/PMF_Profile_2D.py	/^F = []$/;"	v
F	scripts/plot_scripts/PMFplots.py	/^    F = sum(data[force] for force in forces) $/;"	v
F	scripts/plot_scripts/script2DW.py	/^F = []$/;"	v
F	scripts/pughpore/diffusion.py	/^F = stokes.evaluate(phys.Fdrag)["Fdrag"]$/;"	v
F	scripts/survival.py	/^F = phys.Feff(v, u)$/;"	v
F	scripts/test_ahem.py	/^F = phys.Feff(v, u)$/;"	v
FF	scripts/random_walk_aHem/run.py	/^def FF(array):$/;"	f
FFexp	scripts/howorka/test_forcefields.py	/^FFexp = dolfin.Function(V)$/;"	v
FIGDIR	scripts/howorka/folders.py	/^FIGDIR = os.path.join(PAPERDIR, "figures", "")$/;"	v
FIGDIR	scripts/numerics/folders.py	/^FIGDIR = os.path.join(PAPERDIR, "figures", "")$/;"	v
FNAME	scripts/howorka/HoworkaTools.py	/^FNAME = "howorka2D_implicit"$/;"	v
FNAME	scripts/howorka/forcefield.py	/^FNAME = "howorka2D_implicit"$/;"	v
F_	scripts/plot_forces_aHem/combine.py	/^                F_=Fel(argument(X[y][x],0,Y[y][x]))$/;"	v
F_	scripts/plot_forces_aHem/combine2.py	/^                F_=Fel(argument(X[y][x],0,Y[y][x]))$/;"	v
F_explicit	nanopores/models/Howorka.py	/^def F_explicit(z, **params):$/;"	f
F_explicit	nanopores/models/pughpore.py	/^def F_explicit(X, **params):$/;"	f
F_explicit	scripts/numerics/Howorka.py	/^def F_explicit(z, **params):$/;"	f
F_explicit	scripts/numerics/PMF.py	/^def F_explicit(*lspace):$/;"	f
F_explicit	scripts/numerics/force_profiles.py	/^def F_explicit(Qmol):$/;"	f
F_explicit3D	nanopores/models/Howorka.py	/^def F_explicit3D(x, **params):$/;"	f
F_field_implicit	nanopores/models/Howorka.py	/^def F_field_implicit(**params):$/;"	f
F_field_implicit	scripts/numerics/Howorka.py	/^def F_field_implicit(**params):$/;"	f
F_field_implicit3D	nanopores/models/Howorka.py	/^def F_field_implicit3D(**params):$/;"	f
F_geo_phys	scripts/howorka/forcefields.py	/^def F_geo_phys(overwrite=False, implicit=False, **params):$/;"	f
F_implicit	nanopores/models/Howorka.py	/^def F_implicit(z, **params):$/;"	f
F_implicit	scripts/numerics/Howorka.py	/^def F_implicit(z, **params):$/;"	f
F_implicit	scripts/numerics/PMF.py	/^def F_implicit(*lspace):$/;"	f
F_implicit	scripts/numerics/force_profiles.py	/^def F_implicit(Qmol):$/;"	f
F_implicit3D	nanopores/models/Howorka.py	/^def F_implicit3D(z, **params):$/;"	f
FacetLoop	nanopores/tools/box.py	/^FacetLoop = {$/;"	v
Fbare	nanopores/physics/howorka.py	/^def Fbare(geo, r2pi, Moleculeqs, Moleculeqv, grad, lscale):$/;"	f
Fbare	nanopores/physics/pore_dna.py	/^def Fbare(geo):$/;"	f
Fbare	nanopores/physics/pore_mol.py	/^def Fbare(geo, r2pi, Moleculeqv, grad, invscale):$/;"	f
Fbare	nanopores/physics/pore_molecule.py	/^def Fbare(geo, r2pi, Moleculeqs, Moleculeqv, grad, lscale):$/;"	f
FbareE	nanopores/physics/pore_dna.py	/^def FbareE(geo):$/;"	f
Fbaresurf	nanopores/physics/howorka.py	/^        def Fbaresurf(v, i):$/;"	f	function:Fbare
Fbaresurf	nanopores/physics/howorka.py	/^        def Fbaresurf(v, i):$/;"	f	function:Fbaresurf
Fbaresurf	nanopores/physics/howorka.py	/^def Fbaresurf(geo, r2pi, Moleculeqs, grad, lscale):$/;"	f
Fbaresurf	nanopores/physics/pore_dna.py	/^        def Fbaresurf(E, i):$/;"	f	function:FbareE
Fbaresurf	nanopores/physics/pore_dna.py	/^        def Fbaresurf(v, i):$/;"	f	function:Fbare
Fbaresurf	nanopores/physics/pore_molecule.py	/^        def Fbaresurf(v, i):$/;"	f	function:Fbare
Fbaresurf	nanopores/physics/pore_molecule.py	/^        def Fbaresurf(v, i):$/;"	f	function:Fbaresurf
Fbaresurf	nanopores/physics/pore_molecule.py	/^def Fbaresurf(geo, r2pi, Moleculeqs, grad, lscale):$/;"	f
Fbarevol	nanopores/physics/howorka.py	/^        def Fbarevol(v, i):$/;"	f	function:Fbare
Fbarevol	nanopores/physics/pore_dna.py	/^        def Fbarevol(E, i):$/;"	f	function:FbareE
Fbarevol	nanopores/physics/pore_dna.py	/^        def Fbarevol(v, i):$/;"	f	function:Fbare
Fbarevol	nanopores/physics/pore_molecule.py	/^        def Fbarevol(v, i):$/;"	f	function:Fbare
Fd	scripts/stokes_law/stokes_law.py	/^Fd = Fp + Fs$/;"	v
Fd0	scripts/stokes_law/stokes_law.py	/^Fd0 = 6*pi*eta*r*v0$/;"	v
Fdna	scripts/howorka/test_forcefields.py	/^Fdna = [[0.,0.] for x in Xdna]$/;"	v
Fdrag	nanopores/physics/pore_mol.py	/^def Fdrag(geo, div, grad, eta, r2pi, invscale, dim, pscale):$/;"	f
Fdrag	scripts/howorka/HoworkaTools.py	/^Fdrag = dolfin.interpolate(Fdrag, VV)$/;"	v
Fdrag	scripts/howorka/forcefield.py	/^Fdrag = dolfin.interpolate(Fdrag, VV)$/;"	v
Fdrag	scripts/numerics/adap2Dref.py	/^    Fdrag = fs["Fp1"] + fs["Fshear1"]$/;"	v
Fdrag	scripts/numerics/adap3Dref.py	/^Fdrag = fs["Fp%d" %z] + fs["Fshear%d" %z]$/;"	v
Fdrag	scripts/plot_forces_How/plot_drag.py	/^def Fdrag(x,y,z):$/;"	f
Fdrag	scripts/plot_forces_How/plot_el.py	/^def Fdrag(x,y,z):$/;"	f
Fdrag	scripts/plot_scripts/PMF_Profile_2D.py	/^    Fdrag = fs["Fp1"] + fs["Fshear1"]$/;"	v
Fdrag	scripts/test2D.py	/^    Fdrag = fs["Fp1"] + fs["Fshear1"]$/;"	v
Fdrag	scripts/test2Dold.py	/^    Fdrag = fs["Fp1"] + fs["Fshear1"]$/;"	v
Fdrag	scripts/test3D_GOA.py	/^    Fdrag = fs["Fp2"] + fs["Fshear2"]$/;"	v
Fdrag0	scripts/numerics/adap2Dref.py	/^    Fdrag0 = 1e12*6*pi*eta*r*u([0.,z0])[1]*exp(2.*r\/(R-r))$/;"	v
Fdrag0	scripts/test2D.py	/^    Fdrag0 = 1e12*6*pi*eta*r*u([0.,z0])[1]*exp(2.*r\/(R-r))$/;"	v
Fdrag0	scripts/test2Dold.py	/^    Fdrag0 = 1e12*6*pi*eta*r*u([0.,z0])[1]*exp(2.*r\/(R-r))$/;"	v
Fdrag0	scripts/test3D_GOA.py	/^        Fdrag0 = 1e12*6*pi*eta*r*u([0.,0.,z0])[2]*exp(2.*r\/(R-r))\/phys.lscale$/;"	v
Fdrag0	scripts/test3D_GOA.py	/^        Fdrag0 = 1e12*6*pi*eta*r*u(x0)[2]*exp(2.*r\/(R-r))\/phys.lscale$/;"	v
Fdragref	scripts/numerics/adap3Dref.py	/^Fdragref = -7.69122891958$/;"	v
Feff	nanopores/physics/howorka.py	/^def Feff(geo, grad, qTarget, rTarget):$/;"	f
Feff	nanopores/physics/pore_molecule.py	/^def Feff(geo, grad, qTarget, rTarget):$/;"	f
Feff	scripts/plot_scripts/script2DW.py	/^        Feff = f_dict["Fp_z"] + f_dict["Fshear_z"] + f_dict["Fbare_z"]$/;"	v
Feff0	nanopores/physics/howorka.py	/^    def Feff0(v, u):$/;"	f	function:Feff
Feff0	nanopores/physics/pore_molecule.py	/^    def Feff0(v, u):$/;"	f	function:Feff
Fel	scripts/howorka/HoworkaTools.py	/^Fel = dolfin.interpolate(Fel, VV)$/;"	v
Fel	scripts/howorka/forcefield.py	/^Fel = dolfin.interpolate(Fel, VV)$/;"	v
Fel	scripts/numerics/adap2Dref.py	/^    Fel = fs["Fbarevol1"]$/;"	v
Fel	scripts/numerics/adap3Dref.py	/^Fel = fs["Fbarevol%d" %z]$/;"	v
Fel	scripts/plot_forces_How/plot_drag.py	/^def Fel(x,y,z):$/;"	f
Fel	scripts/plot_forces_How/plot_el.py	/^def Fel(x,y,z):$/;"	f
Fel	scripts/plot_scripts/PMF_Profile_2D.py	/^    Fel = fs["Fbare1"]$/;"	v
Fel	scripts/test2D.py	/^    Fel = fs["Fbarevol1"]$/;"	v
Fel	scripts/test2Dold.py	/^    Fel = fs["Fbarevol1"]$/;"	v
Fel	scripts/test3D_GOA.py	/^    Fel = fs["Fbarevol2"]$/;"	v
Fel0	scripts/numerics/adap2Dref.py	/^    Fel0 = 1e12*phys_params["Qmol"]*(v([0.,z0-r])-v([0.,z0+r]))\/(2.*r)$/;"	v
Fel0	scripts/test2D.py	/^    Fel0 = 1e12*phys_params["Qmol"]*(v([0.,z0-r])-v([0.,z0+r]))\/(2.*r)$/;"	v
Fel0	scripts/test2Dold.py	/^    Fel0 = 1e12*phys_params["Qmol"]*(v([0.,z0-r])-v([0.,z0+r]))\/(2.*r)$/;"	v
Fel0	scripts/test3D_GOA.py	/^        Fel0 = 1e12*phys_params["Qmol"]*(v([0.,0.,z0-r])-v([0.,0.,z0+r]))\/(2.*r)*phys.lscale$/;"	v
Fel0	scripts/test3D_GOA.py	/^        Fel0 = 1e12*phys_params["Qmol"]*E0$/;"	v
Felref	scripts/numerics/adap3Dref.py	/^Felref = 1.1424041805$/;"	v
Fexp	scripts/howorka/test_forcefields.py	/^Fexp = [[1e-12*f[0], 1e-12*f[2]] for f in F]$/;"	v
Fexp	scripts/howorka/test_forcefields.py	/^Fexp = np.array(Fexp)$/;"	v
Fexpadd	scripts/howorka/test_forcefields.py	/^Fexpadd = [Fimpl(x) for x in Xadd]$/;"	v
Fi	scripts/howorka/test_forcefields.py	/^Fi = [None]*2$/;"	v
Fimp	scripts/howorka/test_forcefields.py	/^Fimp = [Fimpl(x0) for x0 in X]$/;"	v
Fimp	scripts/howorka/test_forcefields.py	/^Fimp = np.array(Fimp)$/;"	v
Float	nanopores/tools/box.py	/^def Float(a):$/;"	f
Fluid	nanopores/geometries/Cyl2D/subdomains.py	/^class Fluid(SubDomain):$/;"	c
Fluid	nanopores/geometries/Nanowire/subdomains.py	/^class Fluid(SubDomain):$/;"	c
FluidB	nanopores/geometries/W_3D_geo/subdomains.py	/^    class FluidB(SubDomain):$/;"	c	function:boundaries_list
Forces	nanopores/physics/howorka.py	/^def Forces(geo, grad, qTarget, rTarget):$/;"	f
Forces	nanopores/physics/pore_molecule.py	/^def Forces(geo, grad, qTarget, rTarget):$/;"	f
Forces	scripts/numerics/force_profiles.py	/^def Forces(name):$/;"	f
Forces0	nanopores/physics/howorka.py	/^    def Forces0(v, u):$/;"	f	function:Forces
Forces0	nanopores/physics/pore_molecule.py	/^    def Forces0(v, u):$/;"	f	function:Forces
ForcesPNPS	nanopores/physics/pore_mol.py	/^def ForcesPNPS(geo, Moleculeqv, div, grad, eta, r2pi,$/;"	f
Fp	scripts/stokes_law/stokes_law.py	/^Fp = l**2*assemble(Constant(1.\/l**2)*(-r2pi*p*n[1])('-')*dS)$/;"	v
Fproj	scripts/test_ahem.py	/^Fproj = project(F, VV)$/;"	v
Fs	scripts/stokes_law/stokes_law.py	/^Fs = l**2*assemble(Constant(1.\/l**2)*(-r2pi*strain[1])('-')*dS)$/;"	v
Functional	nanopores/tools/illposed.py	/^class Functional(object):$/;"	c
Functional_mult	nanopores/physics/pnps.py	/^    Functional_mult = 1e12$/;"	v	class:PNPS
G	scripts/plot_scripts/IV_curve_2D.py	/^G = []$/;"	v
G	scripts/plot_scripts/script2DW.py	/^G = []$/;"	v
Gaussian	scripts/howorka/test_forcefields.py	/^def Gaussian(x, eps=1.):$/;"	f
GeneralLinearProblem	nanopores/tools/pdesystem.py	/^class GeneralLinearProblem(AdaptableLinearProblem):$/;"	c
GeneralNonlinearProblem	nanopores/tools/pdesystem.py	/^class GeneralNonlinearProblem(AdaptableNonlinearProblem):$/;"	c
GeometricConstant	nanopores/tools/geometry.py	/^class GeometricConstant(object):$/;"	c
Geometry	nanopores/tools/geometry.py	/^class Geometry(object):$/;"	c
Geometry1D	nanopores/tools/functions1D.py	/^class Geometry1D(object):$/;"	c
Gexp	scripts/plot_scripts/script2DW.py	/^Gexp = []$/;"	v
Gexp_	scripts/plot_scripts/script2DW.py	/^    Gexp_ = IV_dict[bVmV]\/bV$/;"	v
Gminf	scripts/plot_scripts/IV_ahem.py	/^Gminf = 0.75  # 1\/(R+r) [nS]$/;"	v
Gnaive	scripts/plot_scripts/script2DW.py	/^Gnaive = []$/;"	v
Gnaive_	scripts/plot_scripts/script2DW.py	/^    Gnaive_ = 1e12*phys.bulkconduct\/geo_params["l0"]*AgmeanPore$/;"	v
GoalAdaptivePDE	nanopores/tools/pdesystem.py	/^class GoalAdaptivePDE(PDESystem):$/;"	c
Gpinf	scripts/plot_scripts/IV_ahem.py	/^Gpinf = 1.15  # 1\/R [nS]$/;"	v
H	nanopores/geometries/pughpore.py	/^    H = 70.,$/;"	v
H	nanopores/models/pughpore.py	/^    H = pughpore.params["H"],$/;"	v
H	scripts/howorka/largepore.py	/^H = 40$/;"	v
H	scripts/howorka/largepore_dna.py	/^H = 70$/;"	v
H	scripts/pughpore/sobol_points.py	/^H = up.H$/;"	v
H	scripts/pughpore/test_1Dpugh.py	/^    H = 70.,$/;"	v
H	scripts/pughpore/test_ff.py	/^H = pugh.pughpore.params["H"]$/;"	v
H	scripts/pughpore/test_pugh.py	/^    H = 80.,$/;"	v
HEADER	nanopores/tools/fields.py	/^HEADER = "header.txt"$/;"	v
HOME	nanopores/dirnames.py	/^HOME = os.path.expanduser("~")$/;"	v
HOME	scripts/howorka/folders.py	/^HOME = os.path.expanduser("~")$/;"	v
HOME	scripts/numerics/folders.py	/^HOME = os.path.expanduser("~")$/;"	v
Header	nanopores/tools/fields.py	/^class Header(object):$/;"	c
I	scripts/finfet/test_wire.py	/^I = assemble(j0*dx)\/l$/;"	v
I	scripts/howorka/ivcurve.py	/^I = IV[:,1]$/;"	v
I	scripts/numerics/adap2Dref.py	/^I = pnps.get_functionals()["Javgbtm"]$/;"	v
I	scripts/plot_scripts/IV_ahem.py	/^I = []$/;"	v
I	scripts/plot_scripts/IV_curve_2D.py	/^I = []$/;"	v
I	scripts/plot_scripts/PMF_Profile_2D.py	/^I = []$/;"	v
I	scripts/plot_scripts/current_trace_2D.py	/^I = []$/;"	v
I	scripts/plot_scripts/script2DW.py	/^I = []$/;"	v
I	scripts/pughpore/plotJ.py	/^    I = sorted(range(len(z)), key=lambda k: z[k])$/;"	v
I	scripts/test2D.py	/^I = pnps.get_functionals()["Javgbtm"]$/;"	v
I	scripts/test2DP.py	/^I = pnps.get_functionals()["Javgctr"]$/;"	v
I	scripts/test2Dold.py	/^I = pnps.get_functionals()["Javgbtm"]$/;"	v
I	scripts/test3D_GOA.py	/^I = pnps.get_functionals()["Javgbtm"]$/;"	v
I0	scripts/plot_scripts/IV_ahem.py	/^I0 = 24.  # [pA]$/;"	v
I0	scripts/plot_scripts/IV_curve_2D.py	/^I0 = IV[:,1]$/;"	v
I0	scripts/plot_scripts/PMF_Profile_2D.py	/^    I0 = fs["Javgbtm"] if z>0 else fs["Javgtop"]$/;"	v
I0	scripts/plot_scripts/current_trace_2D.py	/^    I0 = -pnps.get_functionals()["Javgbtm"] if z>0 else -pnps.get_functionals()["Javgtop"]$/;"	v
I0	scripts/plot_scripts/script2DW.py	/^I0 = IV[:,1]*1e3$/;"	v
IMAX	nanopores/tools/coupled.py	/^IMAX = 10$/;"	v
INSTALLDIR	nanopores/dirnames.py	/^INSTALLDIR = os.path.dirname(os.path.realpath(__file__))$/;"	v
IV	scripts/howorka/ivcurve.py	/^IV = numpy.genfromtxt(csvfile, delimiter=',')$/;"	v
IV	scripts/plot_scripts/IV_curve_2D.py	/^IV = numpy.genfromtxt(csvfile+'.csv', delimiter=',')$/;"	v
IV	scripts/plot_scripts/script2DW.py	/^IV = numpy.genfromtxt(csvfile+".csv", delimiter=',')$/;"	v
IV_dict	scripts/plot_scripts/script2DW.py	/^IV_dict = dict(zip(V0,I0))$/;"	v
I_	scripts/plot_scripts/IV_curve_2D.py	/^    I_ = f_dict["Javgbtm"]$/;"	v
I_	scripts/plot_scripts/script2DW.py	/^    I_ = f_dict["Javg"]$/;"	v
I_guess	scripts/plot_scripts/IV_ahem.py	/^    I_guess = amV\/(R+r)*2  # [V\/G Ohm *1e-3 = pA]$/;"	v
I_sol	scripts/plot_scripts/IV_ahem.py	/^    I_sol = fsolve(func, I_guess)[0]$/;"	v
IllposedLinearSolver	nanopores/tools/illposed.py	/^class IllposedLinearSolver(object):$/;"	c
IllposedNonlinearSolver	nanopores/tools/illposed.py	/^class IllposedNonlinearSolver(IllposedLinearSolver):$/;"	c
InnerDNAB	nanopores/geometries/H_cyl_geo/subdomains.py	/^class InnerDNAB(SubDomain):$/;"	c
InnerMembraneB	nanopores/geometries/P_geo/subdomains.py	/^    class InnerMembraneB(SubDomain):$/;"	c	function:boundaries_list
Interval	nanopores/tools/box.py	/^def Interval(a, b):$/;"	f
Isim	scripts/plot_scripts/IV_ahem.py	/^    Isim = datadict["Javgtop"]$/;"	v
Isim0	scripts/plot_scripts/IV_ahem.py	/^    Isim0 = Isim$/;"	v
Isim0p	scripts/plot_scripts/IV_ahem.py	/^    Isim0p = [Isim0[slice(i*nx,(i+1)*nx)] for i in ny]$/;"	v
J	nanopores/physics/convdiff.py	/^        def J(u):$/;"	f	function:ConvectionDiffusionProblem.forms
J	nanopores/tools/errorest.py	/^    def J(w):$/;"	f	function:pb_indicator_GO
J	nanopores/tools/errorest.py	/^    def J(w):$/;"	f	function:pb_indicator_GO_cheap
J	scripts/howorka/plot_selectivity.py	/^    J = results["current"]$/;"	v
J	scripts/howorka/plot_selectivity_old.py	/^    J = results["current"]$/;"	v
J	scripts/howorka/selectivity.py	/^    J = results.current$/;"	v
J	scripts/numerics/anaPNPS_refinement.py	/^def J(U, geo):$/;"	f
J	scripts/numerics/anaPNPS_refinement_2D.py	/^def J(U, geo):$/;"	f
J	scripts/numerics/anaPNPS_uniform.py	/^def J(U, geo):$/;"	f
J	scripts/numerics/analyticalPNPS.py	/^def J(U, geo):$/;"	f
J	scripts/numerics/analyticalPNPS_2D.py	/^def J(U, geo):$/;"	f
J	scripts/numerics/analyticalPNPS_3D.py	/^def J(U, geo):$/;"	f
J	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^def J(U, geo):$/;"	f
J	scripts/numerics/analyticalPNP_3D.py	/^def J(U, geo):$/;"	f
J	scripts/pughpore/plotJ.py	/^    J = [j*1e12 for j in field["J"]]$/;"	v
J	scripts/pughpore/test_ff_open.py	/^J = pugh.F_explicit([None], nproc=1, name="pughopen", h=1.5, Nmax=8e5)$/;"	v
J	scripts/test.py	/^    J = max(Jl),$/;"	v
J0	nanopores/physics/howorka.py	/^        def J0(v):$/;"	f	function:CurrentPB
J0	nanopores/physics/pore.py	/^    def J0(v):$/;"	f	function:CurrentPB
J0	nanopores/physics/pore_dna.py	/^        def J0(v):$/;"	f	function:CurrentPB
J0	nanopores/physics/pore_molecule.py	/^        def J0(v):$/;"	f	function:CurrentPB
J0	scripts/howorka/selectivity.py	/^    J0 = avg(J)$/;"	v
J1	scripts/pughpore/plotJ.py	/^    J1 = [J[i] for i in I]$/;"	v
J_FEM	scripts/numerics/diffusion_with_force_profile.py	/^def J_FEM(F, c0):$/;"	f
J_PB	scripts/numerics/anaPNPS_refinement.py	/^J_PB = J_PB_el + J_PB_u$/;"	v
J_PB	scripts/numerics/anaPNPS_refinement_2D.py	/^J_PB = J_PB_el + J_PB_u$/;"	v
J_PB	scripts/numerics/anaPNPS_uniform.py	/^J_PB = J_PB_el + J_PB_u$/;"	v
J_PB	scripts/numerics/analyticalPNPS.py	/^J_PB = J_PB_el + J_PB_u$/;"	v
J_PB	scripts/numerics/analyticalPNPS_2D.py	/^J_PB = J_PB_el + J_PB_u$/;"	v
J_PB	scripts/numerics/analyticalPNPS_3D.py	/^J_PB = J_PB_el + J_PB_u$/;"	v
J_PB	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^J_PB = assemble(Constant(cFarad*D\/UT*E0*c0\/lscale**2)*(exp(-phi\/UT) + exp(phi\/UT))*r2pi*dx)$/;"	v
J_PB	scripts/numerics/analyticalPNP_3D.py	/^J_PB = J_PB_el + J_PB_u$/;"	v
J_PB_el	scripts/numerics/anaPNPS_refinement.py	/^J_PB_el = assemble(Constant(cFarad*c0*E0\/lscale**2)*J_el*r2pi*dx)$/;"	v
J_PB_el	scripts/numerics/anaPNPS_refinement_2D.py	/^J_PB_el = assemble(Constant(cFarad*c0*E0\/lscale**2)*J_el*r2pi*dx)$/;"	v
J_PB_el	scripts/numerics/anaPNPS_uniform.py	/^J_PB_el = assemble(Constant(cFarad*c0*E0\/lscale**2)*J_el*r2pi*dx)$/;"	v
J_PB_el	scripts/numerics/analyticalPNPS.py	/^J_PB_el = assemble(Constant(cFarad*c0*E0\/lscale**2)*J_el*r2pi*dx)$/;"	v
J_PB_el	scripts/numerics/analyticalPNPS_2D.py	/^J_PB_el = assemble(Constant(cFarad*c0*E0\/lscale**2)*J_el*r2pi*dx)$/;"	v
J_PB_el	scripts/numerics/analyticalPNPS_3D.py	/^J_PB_el = assemble(Constant(cFarad*c0*E0\/lscale**2)*J_el*r2pi*dx)$/;"	v
J_PB_el	scripts/numerics/analyticalPNP_3D.py	/^J_PB_el = assemble(Constant(cFarad*c0*E0\/lscale**2)*J_el*r2pi*dx)$/;"	v
J_PB_u	scripts/numerics/anaPNPS_refinement.py	/^J_PB_u = assemble(Constant(cFarad*c0*E0\/lscale**2)*J_u*r2pi*dx)$/;"	v
J_PB_u	scripts/numerics/anaPNPS_refinement_2D.py	/^J_PB_u = assemble(Constant(cFarad*c0*E0\/lscale**2)*J_u*r2pi*dx)$/;"	v
J_PB_u	scripts/numerics/anaPNPS_uniform.py	/^J_PB_u = assemble(Constant(cFarad*c0*E0\/lscale**2)*J_u*r2pi*dx)$/;"	v
J_PB_u	scripts/numerics/analyticalPNPS.py	/^J_PB_u = assemble(Constant(cFarad*c0*E0\/lscale**2)*J_u*r2pi*dx)$/;"	v
J_PB_u	scripts/numerics/analyticalPNPS_2D.py	/^J_PB_u = assemble(Constant(cFarad*c0*E0\/lscale**2)*J_u*r2pi*dx)$/;"	v
J_PB_u	scripts/numerics/analyticalPNPS_3D.py	/^J_PB_u = assemble(Constant(cFarad*c0*E0\/lscale**2)*J_u*r2pi*dx)$/;"	v
J_PB_u	scripts/numerics/analyticalPNP_3D.py	/^J_PB_u = 0. #assemble(Constant(cFarad*c0*E0\/lscale**2)*J_u*r2pi*dx)$/;"	v
J_PNP	scripts/numerics/anaPNPS_refinement_2D.py	/^def J_PNP(U, geo):$/;"	f
J_PNP	scripts/numerics/analyticalPNPS.py	/^def J_PNP(U, geo):$/;"	f
J_PNP	scripts/numerics/analyticalPNPS_2D.py	/^def J_PNP(U, geo):$/;"	f
J_PNP	scripts/numerics/analyticalPNPS_3D.py	/^def J_PNP(U, geo):$/;"	f
J_PNP	scripts/numerics/analyticalPNP_3D.py	/^def J_PNP(U, geo):$/;"	f
J_el	scripts/numerics/anaPNPS_refinement.py	/^J_el = Constant(D\/UT)*(exp(-phi\/UT) + exp(phi\/UT))$/;"	v
J_el	scripts/numerics/anaPNPS_refinement_2D.py	/^J_el = Constant(D\/UT)*(exp(-phi\/UT) + exp(phi\/UT))$/;"	v
J_el	scripts/numerics/anaPNPS_uniform.py	/^J_el = Constant(D\/UT)*(exp(-phi\/UT) + exp(phi\/UT))$/;"	v
J_el	scripts/numerics/analyticalPNPS.py	/^J_el = Constant(D\/UT)*(exp(-phi\/UT) + exp(phi\/UT))$/;"	v
J_el	scripts/numerics/analyticalPNPS_2D.py	/^J_el = Constant(D\/UT)*(exp(-phi\/UT) + exp(phi\/UT))$/;"	v
J_el	scripts/numerics/analyticalPNPS_3D.py	/^J_el = Constant(D\/UT)*(exp(-phi\/UT) + exp(phi\/UT))$/;"	v
J_el	scripts/numerics/analyticalPNP_3D.py	/^J_el = Constant(D\/UT)*(exp(-phi\/UT) + exp(phi\/UT))$/;"	v
J_u	scripts/numerics/anaPNPS_refinement.py	/^J_u = u_PB*(exp(-phi\/UT) - exp(phi\/UT))$/;"	v
J_u	scripts/numerics/anaPNPS_refinement_2D.py	/^J_u = u_PB*(exp(-phi\/UT) - exp(phi\/UT))$/;"	v
J_u	scripts/numerics/anaPNPS_uniform.py	/^J_u = u_PB*(exp(-phi\/UT) - exp(phi\/UT))$/;"	v
J_u	scripts/numerics/analyticalPNPS.py	/^J_u = u_PB*(exp(-phi\/UT) - exp(phi\/UT))$/;"	v
J_u	scripts/numerics/analyticalPNPS_2D.py	/^J_u = u_PB*(exp(-phi\/UT) - exp(phi\/UT))$/;"	v
J_u	scripts/numerics/analyticalPNPS_3D.py	/^J_u = u_PB*(exp(-phi\/UT) - exp(phi\/UT))$/;"	v
J_u	scripts/numerics/analyticalPNP_3D.py	/^J_u = u_PB*(exp(-phi\/UT) - exp(phi\/UT))$/;"	v
Javg	scripts/howorka/plot_selectivity.py	/^Javg = []$/;"	v
Javg	scripts/howorka/plot_selectivity_old.py	/^Javg = []$/;"	v
Javg	scripts/plot_scripts/script2DW.py	/^        Javg = 1\/2.0*(f_dict["Javgtop"] + f_dict["Javgbtm"])$/;"	v
Javg	scripts/plot_scripts/script2DW.py	/^        Javg = f_dict[J]$/;"	v
Javg	scripts/plot_scripts/script2DWelectrodes.py	/^                Javg = f_dict["Javgbtm"]$/;"	v
Javg	scripts/plot_scripts/script2DWelectrodes.py	/^                Javg = f_dict["Javgtop"]$/;"	v
Javg	scripts/plot_scripts/script2DWelectrodes.py	/^            Javg = 1\/2.0*(f_dict["Javgtop"] + f_dict["Javgbtm"])$/;"	v
Jcomp	scripts/plot_scripts/IV_ahem.py	/^Jcomp = ["Javg", "Jzdiff", "Jzdrift", "Jzstokes"]$/;"	v
Jcomp	scripts/plot_scripts/IV_curve_2D.py	/^Jcomp = numpy.asarray([[f[j] for f in F] for j in Jcomponents])$/;"	v
Jcomp	scripts/plot_scripts/script2DW.py	/^Jcomp = numpy.asarray([[f[j] for f in F] for j in Jcomponents])$/;"	v
Jcomponents	scripts/plot_scripts/IV_curve_2D.py	/^    Jcomponents = ["Jzdiff", "Jzdrift", "Jzstokes"]$/;"	v
Jcomponents	scripts/plot_scripts/script2DW.py	/^    Jcomponents = ["Jzdiff", "Jzdrift", "Jzstokes"]$/;"	v
Jl	scripts/plot_scripts/script3DW.py	/^    Jl = Jl,$/;"	v
Jl	scripts/plot_scripts/script3DW.py	/^Jl = [pnps.get_functionals()[j] for j in ["Javgtop","Javgctr","Javgbtm"]]$/;"	v
Jl	scripts/test.py	/^Jl = [pnps.get_functionals()[j] for j in ["Javgtop","Javgctr","Javgbtm"]]$/;"	v
Jm	scripts/analytical_test_case.py	/^class Jm(Expression):$/;"	c
JmPB	scripts/numerics/anaPNPS_refinement.py	/^class JmPB(Expression):$/;"	c
JmPB	scripts/numerics/anaPNPS_refinement_2D.py	/^class JmPB(Expression):$/;"	c
JmPB	scripts/numerics/anaPNPS_uniform.py	/^class JmPB(Expression):$/;"	c
JmPB	scripts/numerics/analyticalPNPS.py	/^class JmPB(Expression):$/;"	c
JmPB	scripts/numerics/analyticalPNPS_2D.py	/^class JmPB(Expression):$/;"	c
JmPB	scripts/numerics/analyticalPNPS_3D.py	/^class JmPB(Expression):$/;"	c
JmPB	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^class JmPB(Expression):$/;"	c
JmPB	scripts/numerics/analyticalPNP_3D.py	/^class JmPB(Expression):$/;"	c
Jmax	scripts/plot_scripts/script3DW.py	/^    Jmax = max(Jl),$/;"	v
Jn	scripts/finfet/finfet.py	/^Jn = dolfin.assemble(jn*Constant(1.\/Lfin)*dx)$/;"	v
Jn	scripts/finfet/test_wire.py	/^Jn = qq*mun*n*E$/;"	v
Jnaive	scripts/plot_scripts/script2DW.py	/^    Jnaive = bV*Gnaive_$/;"	v
Jopen	scripts/pughpore/plotJ.py	/^    Jopen = f.get_fields("pughopen", Qmol=8, h=h)["J"][0]$/;"	v
Jp	scripts/analytical_test_case.py	/^class Jp(Expression):$/;"	c
Jp	scripts/finfet/finfet.py	/^Jp = dolfin.assemble(jp*Constant(1.\/Lfin)*dx)$/;"	v
Jp	scripts/finfet/test_wire.py	/^Jp = qq*mup*p*E$/;"	v
JpPB	scripts/numerics/anaPNPS_refinement.py	/^class JpPB(Expression):$/;"	c
JpPB	scripts/numerics/anaPNPS_refinement_2D.py	/^class JpPB(Expression):$/;"	c
JpPB	scripts/numerics/anaPNPS_uniform.py	/^class JpPB(Expression):$/;"	c
JpPB	scripts/numerics/analyticalPNPS.py	/^class JpPB(Expression):$/;"	c
JpPB	scripts/numerics/analyticalPNPS_2D.py	/^class JpPB(Expression):$/;"	c
JpPB	scripts/numerics/analyticalPNPS_3D.py	/^class JpPB(Expression):$/;"	c
JpPB	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^class JpPB(Expression):$/;"	c
JpPB	scripts/numerics/analyticalPNP_3D.py	/^class JpPB(Expression):$/;"	c
Jzdiff	scripts/plot_scripts/IV_curve_2D.py	/^    Jzdiff = phys.cFarad*phys.D*phys.rDPore*phys.grad(-cp+cm)[1] * phys.r2pi\/geo.params["l0"]*geo.dx("pore")$/;"	v
Jzdiff	scripts/plot_scripts/script2DW.py	/^    Jzdiff = phys.cFarad*phys.D*phys.rDPore*phys.grad(-cp+cm)[1] * phys.r2pi\/geo.params["l0"]*geo.dx("pore")$/;"	v
Jzdrift	nanopores/physics/howorka.py	/^        def Jzdrift(bV):$/;"	f	function:CurrentPBdrift
Jzdrift	nanopores/physics/pore_molecule.py	/^        def Jzdrift(bV):$/;"	f	function:CurrentPBdrift
Jzdrift	scripts/plot_scripts/IV_curve_2D.py	/^    Jzdrift = phys.cFarad*phys.mu*phys.rDPore*(-cp-cm)*phys.grad(v)[1] * phys.r2pi\/geo.params["l0"]*geo.dx("pore")$/;"	v
Jzdrift	scripts/plot_scripts/script2DW.py	/^    Jzdrift = phys.cFarad*phys.mu*phys.rDPore*(-cp-cm)*phys.grad(v)[1] * phys.r2pi\/geo.params["l0"]*geo.dx("pore")$/;"	v
Jzstokes	scripts/plot_scripts/IV_curve_2D.py	/^    Jzstokes = phys.cFarad*phys.stokesdampPore*(cp-cm)*u[1] * phys.r2pi\/geo.params["l0"]*geo.dx("pore")$/;"	v
Jzstokes	scripts/plot_scripts/script2DW.py	/^    Jzstokes = phys.cFarad*phys.stokesdampPore*(cp-cm)*u[1] * phys.r2pi\/geo.params["l0"]*geo.dx("pore")$/;"	v
L	scripts/finfet/finfet.py	/^L = geo.params["length"]$/;"	v
Left	scripts/fluorophore_in_top_reservoir.py	/^class Left(SubDomain):$/;"	c
LeftFluidB	nanopores/geometries/H_geo/subdomains.py	/^    class LeftFluidB(SubDomain):$/;"	c	function:boundaries_list
LeftFluidB	nanopores/geometries/P_geo/subdomains.py	/^    class LeftFluidB(SubDomain):$/;"	c	function:boundaries_list
LeftFluidB	nanopores/geometries/W_2D_geo/subdomains.py	/^    class LeftFluidB(SubDomain):$/;"	c	function:boundaries_list
Lfin	scripts/finfet/finfet.py	/^Lfin = geo.params["lfin"]$/;"	v
Line	nanopores/py4gmsh/basic.py	/^def Line(p0, p1):$/;"	f
LineLoop	nanopores/py4gmsh/basic.py	/^def LineLoop(lines):$/;"	f
LinearNonstandardPB	nanopores/physics/pb.py	/^class LinearNonstandardPB(LinearPDE):$/;"	c
LinearNonstandardPBProblem	nanopores/physics/pb.py	/^class LinearNonstandardPBProblem(GeneralLinearProblem):$/;"	c
LinearPB	nanopores/physics/pnps.py	/^class LinearPB(LinearPDE):$/;"	c
LinearPBAxisym	nanopores/physics/pnps2D.py	/^class LinearPBAxisym(LinearPDE):$/;"	c
LinearPBAxisymGoalOriented	nanopores/physics/pnps2D.py	/^class LinearPBAxisymGoalOriented(GoalAdaptivePDE):$/;"	c
LinearPBGoalOriented	nanopores/physics/pnps.py	/^class LinearPBGoalOriented(GoalAdaptivePDE):$/;"	c
LinearPBProblem	nanopores/physics/pnps.py	/^class LinearPBProblem(PoissonProblem):$/;"	c
LinearPBProblemAxisym	nanopores/physics/pnps2D.py	/^class LinearPBProblemAxisym(PoissonProblem):$/;"	c
LinearPDE	nanopores/tools/pdesystem.py	/^class LinearPDE(PDESystem):$/;"	c
LinearPotential	scripts/howorka/eikonal.py	/^def LinearPotential(rMol=0.5, relRange=1.25, U0=2.):$/;"	f
LinearSGPoissonProblem	nanopores/physics/simplepnps.py	/^class LinearSGPoissonProblem(GeneralLinearProblem):$/;"	c
Lm	scripts/analytical_test_case.py	/^Lm = -lscale*Jm()*dm*r2pi*geo2D.ds("upperb") + lscale*Jm()*dm*r2pi*geo2D.ds("lowerb")$/;"	v
Log	nanopores/tools/box.py	/^class Log(object):$/;"	c
Lower	nanopores/geometries/Cyl2D/subdomains.py	/^class Lower(SubDomain):$/;"	c
Lower	nanopores/geometries/Nanowire/subdomains.py	/^class Lower(SubDomain):$/;"	c
LowerAuB	nanopores/geometries/W_2D_geo/subdomains.py	/^    class LowerAuB(SubDomain):$/;"	c	function:boundaries_list
LowerAuB	nanopores/geometries/W_3D_geo/subdomains.py	/^    class LowerAuB(SubDomain):$/;"	c	function:boundaries_list
LowerB	nanopores/geometries/H_cyl_geo/subdomains.py	/^class LowerB(SubDomain):$/;"	c
LowerB	nanopores/geometries/H_geo/subdomains.py	/^    class LowerB(SubDomain):$/;"	c	function:boundaries_list
LowerB	nanopores/geometries/P_geo/subdomains.py	/^    class LowerB(SubDomain):$/;"	c	function:boundaries_list
LowerB	nanopores/geometries/W_2D_geo/subdomains.py	/^    class LowerB(SubDomain):$/;"	c	function:boundaries_list
LowerB	nanopores/geometries/W_3D_geo/subdomains.py	/^    class LowerB(SubDomain):$/;"	c	function:boundaries_list
LowerB	nanopores/geometries/aHem/subdomains.py	/^class LowerB(SubDomain):$/;"	c
LowerSAMB	nanopores/geometries/W_2D_geo/subdomains.py	/^    class LowerSAMB(SubDomain):$/;"	c	function:boundaries_list
LowerSAMB	nanopores/geometries/W_3D_geo/subdomains.py	/^    class LowerSAMB(SubDomain):$/;"	c	function:boundaries_list
LowerSiNB	nanopores/geometries/W_2D_geo/subdomains.py	/^    class LowerSiNB(SubDomain):$/;"	c	function:boundaries_list
LowerSiNB	nanopores/geometries/W_3D_geo/subdomains.py	/^    class LowerSiNB(SubDomain):$/;"	c	function:boundaries_list
Lp	scripts/analytical_test_case.py	/^Lp = -lscale*Jp()*dp*r2pi*geo2D.ds("upperb") + lscale*Jp()*dp*r2pi*geo2D.ds("lowerb")$/;"	v
MESHDIR	nanopores/tools/box.py	/^MESHDIR = "\/tmp\/nanopores"$/;"	v
MPIPool	nanopores/tools/mpipool.py	/^class MPIPool(object):$/;"	c
Membrane	nanopores/geometries/H_cyl_geo/subdomains.py	/^class Membrane(SubDomain):$/;"	c
Membrane	nanopores/geometries/H_geo/subdomains.py	/^    class Membrane(SubDomain):$/;"	c	function:subdomain_list
Membrane	nanopores/geometries/P_geo/subdomains.py	/^    class Membrane(SubDomain):$/;"	c	function:subdomain_list
Membrane	nanopores/geometries/aHem/subdomains.py	/^class Membrane(SubDomain):$/;"	c
MembraneAu	nanopores/geometries/W_2D_geo/subdomains.py	/^    class MembraneAu(SubDomain):$/;"	c	function:subdomain_list
MembraneAu	nanopores/geometries/W_3D_geo/subdomains.py	/^    class MembraneAu(SubDomain):$/;"	c	function:subdomain_list
MembraneB	nanopores/geometries/H_cyl_geo/subdomains.py	/^class MembraneB(SubDomain):$/;"	c
MembraneB	nanopores/geometries/H_geo/subdomains.py	/^    class MembraneB(SubDomain):$/;"	c	function:boundaries_list
MembraneB	nanopores/geometries/aHem/subdomains.py	/^class MembraneB(SubDomain):$/;"	c
MembraneDNAB	nanopores/geometries/H_cyl_geo/subdomains.py	/^class MembraneDNAB(SubDomain):$/;"	c
MembraneSAM	nanopores/geometries/W_2D_geo/subdomains.py	/^    class MembraneSAM(SubDomain):$/;"	c	function:subdomain_list
MembraneSAM	nanopores/geometries/W_3D_geo/subdomains.py	/^    class MembraneSAM(SubDomain):$/;"	c	function:subdomain_list
MembraneSiN	nanopores/geometries/W_2D_geo/subdomains.py	/^    class MembraneSiN(SubDomain):$/;"	c	function:subdomain_list
MembraneSiN	nanopores/geometries/W_3D_geo/subdomains.py	/^    class MembraneSiN(SubDomain):$/;"	c	function:subdomain_list
Membraneqs	nanopores/models/Howorka.py	/^Membraneqs = -0.0,$/;"	v
Membraneqs	nanopores/models/HoworkaSimple.py	/^Membraneqs = -0.0,$/;"	v
Membraneqs	nanopores/physics/howorka.py	/^Membraneqs = -0.0 # membrane surface charge density [C\/m**2]$/;"	v
Membraneqs	nanopores/physics/pore.py	/^Membraneqs = -0.0 # membrane surface charge density [C\/m**2]$/;"	v
Membraneqs	nanopores/physics/pore_dna.py	/^Membraneqs = -0.03 # membrane surface charge density [C\/m**2]$/;"	v
Membraneqs	nanopores/physics/pore_molecule.py	/^Membraneqs = -0.0 # membrane surface charge density [C\/m**2]$/;"	v
Membraneqs	nanopores/scripts/calculate_forces.py	/^Membraneqs = -0.,$/;"	v
Membraneqs	scripts/analytical_test_case.py	/^    Membraneqs = rho,$/;"	v
Membraneqs	scripts/numerics/Howorka.py	/^Membraneqs = -0.0,$/;"	v
Membraneqs	scripts/numerics/HoworkaSimple.py	/^Membraneqs = -0.0,$/;"	v
Membraneqs	scripts/numerics/adap2D.py	/^Membraneqs = -0.0,$/;"	v
Membraneqs	scripts/numerics/adap2Dpb.py	/^Membraneqs = -0.0,$/;"	v
Membraneqs	scripts/numerics/adap2Dref.py	/^Membraneqs = -0.0,$/;"	v
Membraneqs	scripts/numerics/adap3D.py	/^Membraneqs = -0.0,$/;"	v
Membraneqs	scripts/numerics/adap3Dpb.py	/^Membraneqs = -0.0,$/;"	v
Membraneqs	scripts/numerics/adap3Dref.py	/^Membraneqs = -0.0,$/;"	v
Membraneqs	scripts/numerics/anaPNPS_refinement.py	/^    Membraneqs = rho,$/;"	v
Membraneqs	scripts/numerics/anaPNPS_refinement_2D.py	/^    Membraneqs = rho,$/;"	v
Membraneqs	scripts/numerics/anaPNPS_uniform.py	/^    Membraneqs = rho,$/;"	v
Membraneqs	scripts/numerics/analyticalPNPS.py	/^    Membraneqs = rho,$/;"	v
Membraneqs	scripts/numerics/analyticalPNPS_2D.py	/^    Membraneqs = rho,$/;"	v
Membraneqs	scripts/numerics/analyticalPNPS_3D.py	/^    Membraneqs = rho,$/;"	v
Membraneqs	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    Membraneqs = rho,$/;"	v
Membraneqs	scripts/numerics/analyticalPNP_3D.py	/^    Membraneqs = rho,$/;"	v
Membraneqs	scripts/numerics/hybrid_vs_newton.py	/^Membraneqs = -0.00,$/;"	v
Membraneqs	scripts/numerics/test_fixedpoint.py	/^Membraneqs = -0.00,$/;"	v
Membraneqs	scripts/numerics/test_fixedpoint_1D.py	/^    Membraneqs = rho,$/;"	v
Membraneqs	scripts/plot_scripts/PMF_Profile_2D.py	/^Membraneqs = -0.03,$/;"	v
Membraneqs	scripts/test2D.py	/^Membraneqs = -0.0,$/;"	v
Membraneqs	scripts/test2Dold.py	/^Membraneqs = -0.0,$/;"	v
Membraneqs	scripts/test3D_GOA.py	/^Membraneqs = -0.,$/;"	v
Membraneqs	scripts/test_SimplePNPS.py	/^Membraneqs = -0.0,$/;"	v
Membraneqs	scripts/toy_models/pnp1D.py	/^    Membraneqs = -0.0,$/;"	v
Molecule	nanopores/geometries/Cyl2D/subdomains.py	/^class Molecule(SubDomain):$/;"	c
Molecule	nanopores/geometries/H_cyl_geo/subdomains.py	/^class Molecule(SubDomain):$/;"	c
Molecule	nanopores/geometries/H_geo/subdomains.py	/^    class Molecule(SubDomain):$/;"	c	function:subdomain_list
Molecule	nanopores/geometries/W_2D_geo/subdomains.py	/^    class Molecule(SubDomain):$/;"	c	function:subdomain_list
Molecule	nanopores/geometries/W_3D_geo/subdomains.py	/^    class Molecule(SubDomain):$/;"	c	function:subdomain_list
Molecule	nanopores/geometries/aHem/subdomains.py	/^class Molecule(SubDomain):$/;"	c
MoleculeB	nanopores/geometries/Cyl2D/subdomains.py	/^class MoleculeB(SubDomain):$/;"	c
MoleculeB	nanopores/geometries/H_cyl_geo/subdomains.py	/^class MoleculeB(SubDomain):$/;"	c
MoleculeB	nanopores/geometries/H_geo/subdomains.py	/^    class MoleculeB(SubDomain):$/;"	c	function:boundaries_list
MoleculeB	nanopores/geometries/W_2D_geo/subdomains.py	/^    class MoleculeB(SubDomain):$/;"	c	function:boundaries_list
MoleculeB	nanopores/geometries/W_3D_geo/subdomains.py	/^    class MoleculeB(SubDomain):$/;"	c	function:boundaries_list
MoleculeB	nanopores/geometries/aHem/subdomains.py	/^class MoleculeB(SubDomain):$/;"	c
Moleculeqs	nanopores/physics/howorka.py	/^def Moleculeqs(geo, Qmol): # Molecule surface charge density [C\/m**2]$/;"	f
Moleculeqs	nanopores/physics/pore_dna.py	/^Moleculeqs = DNAqs$/;"	v
Moleculeqs	nanopores/physics/pore_molecule.py	/^def Moleculeqs(geo, Qmol): # Molecule surface charge density [C\/m**2]$/;"	f
Moleculeqv	nanopores/physics/howorka.py	/^def Moleculeqv(geo, Qmol, exactMqv, adaptMqv, lscale): # Molecule volume charge density [C\/m**3]$/;"	f
Moleculeqv	nanopores/physics/pore_dna.py	/^Moleculeqv = 0.  # no molecule\/Dna volume charges!$/;"	v
Moleculeqv	nanopores/physics/pore_dna.py	/^Moleculeqv = 0.$/;"	v
Moleculeqv	nanopores/physics/pore_mol.py	/^def Moleculeqv(geo, Qmolq, lscale, r2pi): # $/;"	f
Moleculeqv	nanopores/physics/pore_molecule.py	/^def Moleculeqv(geo, Qmol, exactMqv, adaptMqv, lscale): # Molecule volume charge density [C\/m**3]$/;"	f
N	scripts/finfet/collocation.py	/^        N = 4,$/;"	v
N	scripts/finfet/collocation.py	/^    N = 16$/;"	v
N	scripts/finfet/test_wire.py	/^N = 5 # number of impurity atoms in pore$/;"	v
N	scripts/fluorophore_in_top_reservoir.py	/^N = 60 # number of points in every space direction$/;"	v
N	scripts/howorka/HoworkaTools.py	/^N = 10. # number of molecules to diffuse$/;"	v
N	scripts/howorka/forcefield3D.py	/^N = len(X)$/;"	v
N	scripts/howorka/video.py	/^N = 10. # number of molecules to diffuse$/;"	v
N	scripts/numerics/selectivity1D.py	/^N = 10000$/;"	v
N	scripts/plot_scripts/IV_curve_2D.py	/^N = geo.mesh.num_cells()$/;"	v
N	scripts/plot_scripts/script2DW.py	/^N = geo.mesh.num_cells()$/;"	v
N	scripts/plot_scripts/script2DWelectrodes.py	/^        N = geo.mesh.num_cells()$/;"	v
N	scripts/plot_scripts/script3DW.py	/^    N = geo.mesh.num_cells(),$/;"	v
N	scripts/test.py	/^    N = geo.mesh.num_cells(),$/;"	v
N	scripts/test2DP.py	/^    N = pnps.geo.mesh.num_cells(),$/;"	v
N0	scripts/howorka/HoworkaTools.py	/^N0 = x.shape[0]$/;"	v
N0	scripts/howorka/video.py	/^N0 = x.shape[0]$/;"	v
NAME	nanopores/dirnames.py	/^NAME = "nanopores"$/;"	v
NAME	scripts/howorka/forcefield2D.py	/^NAME = "force2Dimp"$/;"	v
NAME	scripts/howorka/forcefields.py	/^NAME = "force2Dexp"$/;"	v
NAME	scripts/howorka/plot_selectivity_old.py	/^NAME = "howorka2D_selectivity_Q%.0f"$/;"	v
NAME	scripts/howorka/test_selectivity.py	/^NAME = "howorka2D_selectivity_Q%.0f" % (params["Qmol"],)$/;"	v
NAME	scripts/numerics/adap2D.py	/^NAME = "adap2Duniform" if uniform else ("adap2Dcheap" if cheapest else "adap2D")$/;"	v
NAME	scripts/numerics/adap3D.py	/^NAME = "adap3Duniform" if uniform else ("adap3Dcheap" if cheapest else "adap3D")$/;"	v
NUMERICSFIGDIR	scripts/howorka/folders.py	/^NUMERICSFIGDIR = os.path.join(HOME, "papers", "pnps-numerics", "figures", "")$/;"	v
Ndop	nanopores/geometries/finfet.py	/^Ndop = 12$/;"	v
Ndop	scripts/finfet/MLSC.py	/^Ndop = 4,$/;"	v
Ndop	scripts/finfet/finfet-levels.py	/^Ndop = 12$/;"	v
Ndop	scripts/finfet/finfet.py	/^Ndop = 4$/;"	v
NeumannRHS	nanopores/tools/geometry.py	/^    def NeumannRHS(self, v, string=None, value=None):$/;"	m	class:Geometry
Nexp	scripts/numerics/PMF.py	/^Nexp = 2e4,$/;"	v
Nexp	scripts/numerics/force_profiles.py	/^Nexp = 2e4,$/;"	v
Nexp	scripts/numerics/implicit_vs_explicit.py	/^Nexp = 1e4,$/;"	v
Nimp	scripts/numerics/PMF.py	/^Nimp = 1e5,$/;"	v
Nimp	scripts/numerics/force_profiles.py	/^Nimp = 5e4,$/;"	v
Nimp	scripts/numerics/implicit_vs_explicit.py	/^Nimp = 1e4,$/;"	v
Nlast	scripts/finfet/MLSC.py	/^Nlast = samples.pop()$/;"	v
Nmax	nanopores/models/Howorka.py	/^Nmax = 1e4,$/;"	v
Nmax	nanopores/models/HoworkaSimple.py	/^Nmax = 1e4,$/;"	v
Nmax	nanopores/models/pughpore.py	/^    Nmax = 6e5,  $/;"	v
Nmax	scripts/howorka/forcefield2D.py	/^    Nmax = 2e4,$/;"	v
Nmax	scripts/howorka/forcefield2D.py	/^    Nmax = Nmax,$/;"	v
Nmax	scripts/howorka/forcefield3D.py	/^    Nmax = 1e4,$/;"	v
Nmax	scripts/howorka/selectivity.py	/^    Nmax = 1e5,$/;"	v
Nmax	scripts/howorka/selectivity.py	/^    Nmax = p.Nmax,$/;"	v
Nmax	scripts/numerics/Howorka.py	/^Nmax = 1e4,$/;"	v
Nmax	scripts/numerics/HoworkaSimple.py	/^Nmax = 1e4,$/;"	v
Nmax	scripts/numerics/adap2D.py	/^Nmax = 1e4,$/;"	v
Nmax	scripts/numerics/adap2Dpb.py	/^Nmax = 1e4,$/;"	v
Nmax	scripts/numerics/adap2Dref.py	/^Nmax = 1e4,$/;"	v
Nmax	scripts/numerics/adap3D.py	/^Nmax = 1e4,$/;"	v
Nmax	scripts/numerics/adap3Dpb.py	/^Nmax = 1e4,$/;"	v
Nmax	scripts/numerics/adap3Dref.py	/^Nmax = 1e4,$/;"	v
Nmax	scripts/numerics/analyticalPNPS.py	/^Nmax = 1e5,$/;"	v
Nmax	scripts/numerics/analyticalPNPS_2D.py	/^Nmax = 1e5,$/;"	v
Nmax	scripts/numerics/analyticalPNPS_3D.py	/^Nmax = 1e5,$/;"	v
Nmax	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^Nmax = 1e4$/;"	v
Nmax	scripts/numerics/analyticalPNP_3D.py	/^Nmax = 1e5,$/;"	v
Nmax	scripts/pughpore/test_pugh.py	/^    Nmax = 1e5,$/;"	v
Nmax	scripts/pughpore/test_pugh.py	/^    Nmax = up.Nmax,  $/;"	v
Nmax	scripts/test2D.py	/^Nmax = 1e4,$/;"	v
Nmax	scripts/test_features/howorka3D.py	/^Nmax = 1e4,$/;"	v
Nmax2D	scripts/numerics/adap3D.py	/^Nmax2D = 1e4,$/;"	v
Nmax2D	scripts/numerics/adap3Dpb.py	/^Nmax2D = 1e4,$/;"	v
Nmax2D	scripts/numerics/adap3Dref.py	/^Nmax2D = 1e4,$/;"	v
Nmax3D	nanopores/models/Howorka.py	/^Nmax3D = 1e4,$/;"	v
Nmax3D	scripts/howorka/forcefield3D.py	/^    Nmax3D = 2.5e4, # UMFPACK: max. ca. 3e4$/;"	v
Nmax3D	scripts/test_features/howorka3D.py	/^Nmax3D = 3e4, # 8 GB => max. 3e4, 32 GB => $/;"	v
NoPhysicalSurface	nanopores/py4gmsh/basic.py	/^def NoPhysicalSurface(label):$/;"	f
NoPhysicalVolume	nanopores/py4gmsh/basic.py	/^def NoPhysicalVolume(label):$/;"	f
NonlinearPDE	nanopores/tools/pdesystem.py	/^class NonlinearPDE(PDESystem):$/;"	c
NonstandardPB	nanopores/physics/pb.py	/^class NonstandardPB(NonlinearPDE):$/;"	c
NonstandardPBProblem	nanopores/physics/pb.py	/^class NonstandardPBProblem(GeneralNonlinearProblem):$/;"	c
Nsamples	scripts/finfet/test_wire.py	/^Nsamples = 1 # number of samples$/;"	v
Nx	scripts/plot_forces_How/plot_drag.py	/^Nx = 50$/;"	v
Nx	scripts/plot_forces_How/plot_el.py	/^Nx = 50$/;"	v
Nx	scripts/plot_forces_aHem/combine.py	/^Nx = 50$/;"	v
Nx	scripts/plot_forces_aHem/combine2.py	/^Nx = 50$/;"	v
Nx	scripts/plot_forces_aHem/plot_drag.py	/^Nx = 50$/;"	v
Nx	scripts/plot_forces_aHem/plot_el.py	/^Nx = 50$/;"	v
Nx	scripts/plot_forces_aHem/ppt.py	/^Nx = 50$/;"	v
Ny	scripts/plot_forces_How/plot_drag.py	/^Ny = 40$/;"	v
Ny	scripts/plot_forces_How/plot_el.py	/^Ny = 40$/;"	v
Ny	scripts/plot_forces_aHem/combine.py	/^Ny = 40$/;"	v
Ny	scripts/plot_forces_aHem/combine2.py	/^Ny = 40$/;"	v
Ny	scripts/plot_forces_aHem/plot_drag.py	/^Ny = 40$/;"	v
Ny	scripts/plot_forces_aHem/plot_el.py	/^Ny = 40$/;"	v
Ny	scripts/plot_forces_aHem/ppt.py	/^Ny = 40$/;"	v
Nz	scripts/numerics/PMF.py	/^Nz = 2,$/;"	v
Nz	scripts/numerics/force_profiles.py	/^Nz = 50,$/;"	v
OpeningMembraneB	nanopores/geometries/P_geo/subdomains.py	/^    class OpeningMembraneB(SubDomain):$/;"	c	function:boundaries_list
OuterDNAB	nanopores/geometries/H_cyl_geo/subdomains.py	/^class OuterDNAB(SubDomain):$/;"	c
OuterMembraneB	nanopores/geometries/H_cyl_geo/subdomains.py	/^class OuterMembraneB(SubDomain):$/;"	c
OuterMembraneB	nanopores/geometries/P_geo/subdomains.py	/^    class OuterMembraneB(SubDomain):$/;"	c	function:boundaries_list
OuterSAMB	nanopores/geometries/W_2D_geo/subdomains.py	/^    class OuterSAMB(SubDomain):$/;"	c	function:boundaries_list
OuterSAMB	nanopores/geometries/W_3D_geo/subdomains.py	/^    class OuterSAMB(SubDomain):$/;"	c	function:boundaries_list
OuterSiNB	nanopores/geometries/W_2D_geo/subdomains.py	/^    class OuterSiNB(SubDomain):$/;"	c	function:boundaries_list
OuterSiNB	nanopores/geometries/W_3D_geo/subdomains.py	/^    class OuterSiNB(SubDomain):$/;"	c	function:boundaries_list
Oxide	nanopores/geometries/Nanowire/subdomains.py	/^class Oxide(SubDomain):$/;"	c
OxideB	nanopores/geometries/Nanowire/subdomains.py	/^class OxideB(SubDomain): # fluid-oxide interface$/;"	c
PAPERDIR	scripts/howorka/folders.py	/^PAPERDIR = os.path.join(HOME, "papers", "paper-nanopores-first")$/;"	v
PAPERDIR	scripts/numerics/folders.py	/^PAPERDIR = os.path.join(HOME, "papers", "pnps-numerics")$/;"	v
PATH	scripts/finfet/collocation.py	/^PATH = "collocation_methods\/"$/;"	v
PDESystem	nanopores/tools/pdesystem.py	/^class PDESystem(object):$/;"	c
PDEfromProblem	nanopores/tools/pdesystem.py	/^class PDEfromProblem(LinearPDE, NonlinearPDE):$/;"	c
PMF	scripts/numerics/PMF.py	/^def PMF(F, a, b, N):$/;"	f
PNP	scripts/numerics/test_fixedpoint_1D.py	/^PNP = PNPFixedPoint if linearize else PNPFixedPointNonlinear$/;"	v
PNPFixedPoint	nanopores/physics/simplepnps.py	/^class PNPFixedPoint(CoupledSolver):$/;"	c
PNPFixedPointNaive	nanopores/physics/simplepnps.py	/^class PNPFixedPointNaive(CoupledSolver):$/;"	c
PNPFixedPointNonlinear	nanopores/physics/simplepnps.py	/^class PNPFixedPointNonlinear(CoupledSolver):$/;"	c
PNPProblem	nanopores/physics/pnps.py	/^class PNPProblem(AdaptableNonlinearProblem):$/;"	c
PNPProblemAxisym	nanopores/physics/pnps2D.py	/^class PNPProblemAxisym(AdaptableNonlinearProblem):$/;"	c
PNPS	nanopores/physics/pnps.py	/^class PNPS(PDESystem):$/;"	c
PNPSAxisym	nanopores/physics/pnps2D.py	/^class PNPSAxisym(PNPS):$/;"	c
PNPSAxisymNewton	nanopores/physics/pnps2Dnewton.py	/^class PNPSAxisymNewton(PNPS):$/;"	c
PNPSFixedPoint	nanopores/physics/simplepnps.py	/^class PNPSFixedPoint(CoupledSolver):$/;"	c
PNPSFixedPointbV	nanopores/physics/simplepnps.py	/^class PNPSFixedPointbV(PNPSFixedPoint):$/;"	c
PNPSHybrid	nanopores/physics/simplepnps.py	/^class PNPSHybrid(CoupledSolver):$/;"	c
PNPSProblemAxisym	nanopores/physics/pnps2Dnewton.py	/^class PNPSProblemAxisym(AdaptableNonlinearProblem):$/;"	c
Params	nanopores/tools/fields.py	/^class Params(dict):$/;"	c
Params	nanopores/tools/utilities.py	/^class Params(dict):$/;"	c
PhysSurf	nanopores/tools/axisym.py	/^PhysSurf = {$/;"	v
PhysicalBC	nanopores/tools/geometry.py	/^class PhysicalBC(object):$/;"	c
PhysicalLine	nanopores/py4gmsh/basic.py	/^def PhysicalLine(volume, label):$/;"	f
PhysicalPoint	nanopores/py4gmsh/basic.py	/^def PhysicalPoint(volume, label):$/;"	f
PhysicalSurface	nanopores/py4gmsh/basic.py	/^def PhysicalSurface(surface, label, dim=3):$/;"	f
PhysicalVolume	nanopores/py4gmsh/basic.py	/^def PhysicalVolume(volume, label, dim=3):$/;"	f
Physics	nanopores/tools/physicsclass.py	/^class Physics(object):$/;"	c
PlaneSurface	nanopores/py4gmsh/basic.py	/^def PlaneSurface(line_loop):$/;"	f
Plotter	nanopores/models/pughpore.py	/^class Plotter(object):$/;"	c
Point	nanopores/py4gmsh/basic.py	/^def Point(x, lcar):$/;"	f
Poisson	nanopores/physics/poisson.py	/^class Poisson(LinearPDE):$/;"	c
PoissonAxisym	nanopores/physics/pnps2D.py	/^class PoissonAxisym(LinearPDE):$/;"	c
PoissonProblem	nanopores/physics/pb.py	/^class PoissonProblem(LinearNonstandardPBProblem):$/;"	c
PoissonProblem	nanopores/physics/poisson.py	/^class PoissonProblem(AdaptableLinearProblem):$/;"	c
PoissonProblemAxisym	nanopores/physics/pnps2D.py	/^class PoissonProblemAxisym(PoissonProblem):$/;"	c
PoissonProblemAxisym	nanopores/physics/poisson.py	/^class PoissonProblemAxisym(PoissonProblem):$/;"	c
PoissonProblemPureNeumannAxisym	nanopores/physics/poisson.py	/^class PoissonProblemPureNeumannAxisym(PoissonProblem):$/;"	c
PoreBottom	nanopores/geometries/H_cyl_geo/subdomains.py	/^class PoreBottom(SubDomain):$/;"	c
PoreBottom	nanopores/geometries/H_geo/subdomains.py	/^    class PoreBottom(SubDomain):$/;"	c	function:subdomain_list
PoreBottom	nanopores/geometries/W_2D_geo/subdomains.py	/^    class PoreBottom(SubDomain):$/;"	c	function:subdomain_list
PoreBottom	nanopores/geometries/W_3D_geo/subdomains.py	/^    class PoreBottom(SubDomain):$/;"	c	function:subdomain_list
PoreBottom	nanopores/geometries/aHem/subdomains.py	/^class PoreBottom(SubDomain):$/;"	c
PoreCenter	nanopores/geometries/H_cyl_geo/subdomains.py	/^class PoreCenter(SubDomain):$/;"	c
PoreCenter	nanopores/geometries/H_geo/subdomains.py	/^    class PoreCenter(SubDomain):$/;"	c	function:subdomain_list
PoreCenter	nanopores/geometries/P_geo/subdomains.py	/^    class PoreCenter(SubDomain):$/;"	c	function:subdomain_list
PoreCenter	nanopores/geometries/W_2D_geo/subdomains.py	/^    class PoreCenter(SubDomain):$/;"	c	function:subdomain_list
PoreCenter	nanopores/geometries/W_3D_geo/subdomains.py	/^    class PoreCenter(SubDomain):$/;"	c	function:subdomain_list
PoreCenter	nanopores/geometries/aHem/subdomains.py	/^class PoreCenter(SubDomain):$/;"	c
PoreTop	nanopores/geometries/H_cyl_geo/subdomains.py	/^class PoreTop(SubDomain):$/;"	c
PoreTop	nanopores/geometries/H_geo/subdomains.py	/^    class PoreTop(SubDomain):$/;"	c	function:subdomain_list
PoreTop	nanopores/geometries/W_2D_geo/subdomains.py	/^    class PoreTop(SubDomain):$/;"	c	function:subdomain_list
PoreTop	nanopores/geometries/W_3D_geo/subdomains.py	/^    class PoreTop(SubDomain):$/;"	c	function:subdomain_list
PoreTop	nanopores/geometries/aHem/subdomains.py	/^class PoreTop(SubDomain):$/;"	c
Potential	scripts/analytical_test_case.py	/^class Potential(Expression):$/;"	c
Potential	scripts/howorka/eikonal.py	/^    class Potential(Expression):$/;"	c	function:boundary_force
QDNA	nanopores/physics/howorka.py	/^def QDNA(DNAqs, DNAArea):$/;"	f
Qmol	nanopores/models/Howorka.py	/^Qmol = -1.,$/;"	v
Qmol	nanopores/models/Howorka.py	/^Qmol = Qmol*qq,$/;"	v
Qmol	nanopores/models/HoworkaSimple.py	/^Qmol = -1.,$/;"	v
Qmol	nanopores/models/HoworkaSimple.py	/^Qmol = Qmol*qq,$/;"	v
Qmol	nanopores/models/pughpore.py	/^    Qmol = 8., # charge of trypsin at pH 8.$/;"	v
Qmol	nanopores/physics/howorka.py	/^Qmol = 0.*qq # charge on one molecule [C] = [A*s]$/;"	v
Qmol	nanopores/physics/pore_mol.py	/^Qmol = 0. # molecule charge [q]$/;"	v
Qmol	nanopores/physics/pore_molecule.py	/^Qmol = 0.*qq # charge on one molecule [C] = [A*s]$/;"	v
Qmol	nanopores/scripts/calculate_forces.py	/^Qmol = q*qq,$/;"	v
Qmol	scripts/fluorophore_in_top_reservoir.py	/^Qmol = -3*qq # charge per molecule$/;"	v
Qmol	scripts/howorka/forcefield2D.py	/^    Qmol = -1.,$/;"	v
Qmol	scripts/howorka/forcefield2D.py	/^    Qmol = Qmol,$/;"	v
Qmol	scripts/howorka/forcefield3D.py	/^    Qmol = -1.,$/;"	v
Qmol	scripts/howorka/forcefield3D.py	/^    Qmol = Qmol,$/;"	v
Qmol	scripts/howorka/forcefields.py	/^    Qmol = -1.,$/;"	v
Qmol	scripts/howorka/selectivity.py	/^    Qmol = -1,$/;"	v
Qmol	scripts/howorka/selectivity.py	/^    Qmol = p.Qmol,$/;"	v
Qmol	scripts/numerics/Howorka.py	/^Qmol = -1.,$/;"	v
Qmol	scripts/numerics/Howorka.py	/^Qmol = Qmol*qq,$/;"	v
Qmol	scripts/numerics/HoworkaSimple.py	/^Qmol = -1.,$/;"	v
Qmol	scripts/numerics/HoworkaSimple.py	/^Qmol = Qmol*qq,$/;"	v
Qmol	scripts/numerics/PMF.py	/^Qmol = -1.,$/;"	v
Qmol	scripts/numerics/adap2D.py	/^Qmol = -1.,$/;"	v
Qmol	scripts/numerics/adap2D.py	/^Qmol = Qmol*qq,$/;"	v
Qmol	scripts/numerics/adap2Dpb.py	/^Qmol = -1.*qq,$/;"	v
Qmol	scripts/numerics/adap2Dref.py	/^Qmol = -1.*qq,$/;"	v
Qmol	scripts/numerics/adap3D.py	/^Qmol = -1.*qq,$/;"	v
Qmol	scripts/numerics/adap3Dpb.py	/^Qmol = -1.*qq,$/;"	v
Qmol	scripts/numerics/adap3Dref.py	/^Qmol = -1.*qq,$/;"	v
Qmol	scripts/numerics/implicit_vs_explicit.py	/^Qmol = -1.,$/;"	v
Qmol	scripts/plot_forces_How/calculateforce.py	/^Qmol = -1.,$/;"	v
Qmol	scripts/plot_scripts/PMF_Profile_2D.py	/^Qmol = -3.*qq,$/;"	v
Qmol	scripts/pughpore/test_pugh.py	/^    Qmol = -1.,$/;"	v
Qmol	scripts/pughpore/test_pugh.py	/^    Qmol = up.Qmol,$/;"	v
Qmol	scripts/test2D.py	/^Qmol = -1.*qq,$/;"	v
Qmol	scripts/test2Dold.py	/^Qmol = -1.*qq,$/;"	v
Qmol	scripts/test3D_GOA.py	/^Qmol = -0.*qq,$/;"	v
Qmol	scripts/test3D_GOA.py	/^Qmol = -2.*qq,$/;"	v
QmolEff	nanopores/models/mysolve.py	/^def QmolEff(U, geo):$/;"	f
QmolEff	scripts/numerics/mysolve.py	/^def QmolEff(U, geo):$/;"	f
Qmolq	nanopores/physics/pore_mol.py	/^Qmolq = lambda Qmol, qq: Qmol*qq$/;"	v
Qmols	scripts/numerics/force_profiles.py	/^Qmols = [-3., -2., -1., 1e-4, 1.],$/;"	v
Qs	scripts/howorka/plot_selectivity.py	/^Qs = [-1.,-3.]$/;"	v
Qs	scripts/howorka/plot_selectivity_old.py	/^Qs = [-1.,-3.]$/;"	v
R	nanopores/geometries/Cyl2D/params_geo.py	/^R = 40*nm$/;"	v
R	nanopores/geometries/H_cyl_geo/params_geo.py	/^R = 10.0*nm$/;"	v
R	nanopores/geometries/H_cyl_geo/params_geo_old.py	/^R = 15.0*nm$/;"	v
R	nanopores/geometries/H_geo/params_geo.py	/^R = 10.0*nm$/;"	v
R	nanopores/geometries/H_geo/params_geo_old.py	/^R = 15.0*nm$/;"	v
R	nanopores/geometries/P_geo/params_geo.py	/^R = Rx # bad style, here only 'hard' constants should be allowed$/;"	v
R	nanopores/geometries/W_2D_geo/params_geo.py	/^R = 150.0*nm$/;"	v
R	nanopores/geometries/W_3D_geo/params_geo.py	/^R = 150.0*nm$/;"	v
R	nanopores/geometries/aHem/params_geo.py	/^R = 15.0*nm$/;"	v
R	nanopores/geometries/pughpore.py	/^    R = 20.,$/;"	v
R	nanopores/models/Howorka.py	/^R = Rx,$/;"	v
R	nanopores/models/pughpore.py	/^    R = pughpore.params["R"],$/;"	v
R	nanopores/scripts/ahemFPT.py	/^R = 20.$/;"	v
R	nanopores/scripts/ahemIV.py	/^R = 20.$/;"	v
R	nanopores/scripts/test_geometry_3D.py	/^R = 15*nm,$/;"	v
R	nanopores/scripts/test_survival.py	/^    R = 40.,$/;"	v
R	nanopores/tools/errorest.py	/^    def R(w):$/;"	f	function:pb_indicator_GO
R	nanopores/tools/errorest.py	/^    def R(w):$/;"	f	function:pb_indicator_GO_cheap
R	scripts/analytical_test_case.py	/^R = 2. # [nm] pore radius$/;"	v
R	scripts/howorka/largepore.py	/^R = 30$/;"	v
R	scripts/howorka/largepore_dna.py	/^R = 40$/;"	v
R	scripts/howorka/selectivity.py	/^    R = 100.,$/;"	v
R	scripts/numerics/adap2Dref.py	/^    R = geo.params["r0"]$/;"	v
R	scripts/numerics/anaPNPS_refinement.py	/^R = 1. # [nm] pore radius$/;"	v
R	scripts/numerics/anaPNPS_refinement_2D.py	/^R = 1. # [nm] pore radius$/;"	v
R	scripts/numerics/anaPNPS_uniform.py	/^R = 1. # [nm] pore radius$/;"	v
R	scripts/numerics/analyticalPNPS.py	/^R = 1. # [nm] pore radius$/;"	v
R	scripts/numerics/analyticalPNPS_2D.py	/^R = 1. # [nm] pore radius$/;"	v
R	scripts/numerics/analyticalPNPS_3D.py	/^R = 1. # [nm] pore radius$/;"	v
R	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^R = 2. # [nm] pore radius$/;"	v
R	scripts/numerics/analyticalPNP_3D.py	/^R = 2. # [nm] pore radius$/;"	v
R	scripts/plot_scripts/IV_ahem.py	/^R = 1\/Gpinf  # [G Ohm]$/;"	v
R	scripts/plot_scripts/IV_curve_2D.py	/^R = 30*nm$/;"	v
R	scripts/pughpore/sobol_points.py	/^R = up.R$/;"	v
R	scripts/pughpore/test_1Dpugh.py	/^    R = 35.,$/;"	v
R	scripts/pughpore/test_pugh.py	/^    R = 30.,$/;"	v
R	scripts/pughpore/test_pugh.py	/^    R = up.R,$/;"	v
R	scripts/survival.py	/^    R = 60.,$/;"	v
R	scripts/test.py	/^R = 15*nm,$/;"	v
R	scripts/test2D.py	/^    R = geo.params["r0"]$/;"	v
R	scripts/test2Dold.py	/^    R = geo.params["r0"]$/;"	v
R	scripts/test3D_GOA.py	/^    R = geo.params["r0"]$/;"	v
R	scripts/test_ahem.py	/^    R = 40.,$/;"	v
R	scripts/test_features/curved.py	/^R = 1.$/;"	v
R	scripts/toy_models/pnp1Dcyl.py	/^R = 1. # [nm] pore radius$/;"	v
Rad	scripts/random_walk_aHem/plot_path.py	/^Rad=np.array([radius(X[i],Y[i]) for i in range(X.shape[0])])$/;"	v
Range	scripts/random_walk_aHem/run.py	/^Range = range(done,sims)$/;"	v
RectangleMesh	nanopores/tools/utilities.py	/^def RectangleMesh(a, b, nx, ny):$/;"	f
Reynolds	nanopores/physics/params_physical.py	/^Reynolds = rho*0.01*10*nm\/eta # typical Reynolds number in nanopore systems with u = 0.01 m\/s$/;"	v
RightFluidB	nanopores/geometries/H_geo/subdomains.py	/^    class RightFluidB(SubDomain):$/;"	c	function:boundaries_list
RightFluidB	nanopores/geometries/P_geo/subdomains.py	/^    class RightFluidB(SubDomain):$/;"	c	function:boundaries_list
RightFluidB	nanopores/geometries/W_2D_geo/subdomains.py	/^    class RightFluidB(SubDomain):$/;"	c	function:boundaries_list
Rotate	nanopores/py4gmsh/basic.py	/^def Rotate(entity,$/;"	f
RuledSurface	nanopores/py4gmsh/basic.py	/^def RuledSurface(line_loop):$/;"	f
Rx	nanopores/geometries/H_geo/params_geo.py	/^Rx = R$/;"	v
Rx	nanopores/geometries/H_geo/params_geo_old.py	/^Rx = R$/;"	v
Rx	nanopores/geometries/P_geo/params_geo.py	/^Rx = 25*nm$/;"	v
Rx	nanopores/models/Howorka.py	/^Rx = 12.,$/;"	v
Rx	nanopores/models/Howorka.py	/^Rx = Rx,$/;"	v
Rx	scripts/howorka/forcefield.py	/^Rx = params["Rx"]$/;"	v
Rx	scripts/howorka/forcefield2D.py	/^    Rx = 12.,$/;"	v
Rx	scripts/howorka/forcefield3D.py	/^    Rx = 8.,$/;"	v
Rx	scripts/howorka/forcefields.py	/^    Rx = 12.,$/;"	v
Rx	scripts/howorka/interpolation_points.py	/^    Rx = 3.,$/;"	v
Rx	scripts/howorka/selectivity.py	/^    Rx = p.R,$/;"	v
Rx	scripts/numerics/Howorka.py	/^Rx = 12.,$/;"	v
Rx	scripts/numerics/Howorka.py	/^Rx = Rx,$/;"	v
Rx	scripts/numerics/hybrid_vs_newton.py	/^Rx = 8.,$/;"	v
Rx	scripts/numerics/hybrid_vs_newton.py	/^Rx = Rx,$/;"	v
Rx	scripts/numerics/test_fixedpoint.py	/^Rx = 8*nm,$/;"	v
Rx	scripts/numerics/test_fixedpoint.py	/^Rx = Rx,$/;"	v
Rx	scripts/plot_scripts/IV_curve_2D.py	/^Rx = R,$/;"	v
Rx	scripts/plot_scripts/PMF_Profile_2D.py	/^Rx = 15*nm,$/;"	v
Rx	scripts/plot_scripts/current_trace_2D.py	/^Rx = 15*nm,$/;"	v
Rx	scripts/test_axisym.py	/^Rx = 8.$/;"	v
Rx	scripts/test_features/howorka3D.py	/^Rx = 8.,$/;"	v
Rx1	scripts/howorka/test_forcefields.py	/^Rx1 = 6.$/;"	v
Ry	nanopores/geometries/H_geo/params_geo.py	/^Ry = Rz$/;"	v
Ry	nanopores/geometries/H_geo/params_geo_old.py	/^Ry = Rz$/;"	v
Ry	nanopores/geometries/P_geo/params_geo.py	/^Ry = 100*nm$/;"	v
Ry	nanopores/models/Howorka.py	/^Ry = 12.,$/;"	v
Ry	nanopores/models/Howorka.py	/^Ry = Ry,$/;"	v
Ry	scripts/howorka/forcefield.py	/^Ry = params["Ry"]$/;"	v
Ry	scripts/howorka/forcefield2D.py	/^    Ry = 12.,$/;"	v
Ry	scripts/howorka/forcefields.py	/^    Ry = 12.,$/;"	v
Ry	scripts/howorka/interpolation_points.py	/^    Ry = 10.,$/;"	v
Ry	scripts/howorka/selectivity.py	/^    Ry = p.R,$/;"	v
Ry	scripts/numerics/Howorka.py	/^Ry = 12.,$/;"	v
Ry	scripts/numerics/Howorka.py	/^Ry = Ry,$/;"	v
Ry	scripts/numerics/adap2Dref.py	/^Ry = geo.params["Ry"]$/;"	v
Ry	scripts/numerics/hybrid_vs_newton.py	/^Ry = 8.,$/;"	v
Ry	scripts/numerics/hybrid_vs_newton.py	/^Ry = Ry,$/;"	v
Ry	scripts/numerics/test_fixedpoint.py	/^Ry = 8*nm,$/;"	v
Ry	scripts/numerics/test_fixedpoint.py	/^Ry = Ry,$/;"	v
Ry	scripts/plot_scripts/IV_curve_2D.py	/^Ry = R,$/;"	v
Ry	scripts/plot_scripts/PMF_Profile_2D.py	/^Ry = 15*nm,$/;"	v
Ry	scripts/plot_scripts/current_trace_2D.py	/^Ry = 30*nm,$/;"	v
Ry	scripts/test2D.py	/^Ry = geo.params["Ry"]$/;"	v
Ry	scripts/test2Dold.py	/^Ry = geo.params["Ry"]$/;"	v
Ry0	scripts/howorka/test_forcefields.py	/^Ry0 = 7.$/;"	v
Ry_	scripts/plot_scripts/PMF_Profile_2D.py	/^Ry_ = 12*nm$/;"	v
Ry_	scripts/plot_scripts/current_trace_2D.py	/^Ry_ = params["Ry"]-2*params["rMolecule"]$/;"	v
Rz	nanopores/geometries/H_cyl_geo/params_geo.py	/^Rz = 10.0*nm$/;"	v
Rz	nanopores/geometries/H_cyl_geo/params_geo_old.py	/^Rz = 15.0*nm$/;"	v
Rz	nanopores/geometries/H_geo/params_geo.py	/^Rz = 10.0*nm$/;"	v
Rz	nanopores/geometries/H_geo/params_geo_old.py	/^Rz = 15.0*nm$/;"	v
Rz	nanopores/geometries/P_geo/params_geo.py	/^Rz = Ry  # bad style, here only 'hard' constants should be allowed$/;"	v
Rz	nanopores/geometries/W_2D_geo/params_geo.py	/^Rz = 150.0*nm$/;"	v
Rz	nanopores/geometries/W_3D_geo/params_geo.py	/^Rz = 150.0*nm$/;"	v
Rz	nanopores/models/Howorka.py	/^Rz = Ry,$/;"	v
Rz	nanopores/scripts/test_geometry_3D.py	/^Rz = 15*nm,$/;"	v
Rz	scripts/analytical_test_case.py	/^Rz = 2. # [nm] length in z direction of channel part$/;"	v
Rz	scripts/numerics/adap3Dpb.py	/^Rz = geo.params["Rz"]$/;"	v
Rz	scripts/numerics/anaPNPS_refinement.py	/^Rz = 2. # [nm] length in z direction of channel part$/;"	v
Rz	scripts/numerics/anaPNPS_refinement_2D.py	/^Rz = 2. # [nm] length in z direction of channel part$/;"	v
Rz	scripts/numerics/anaPNPS_uniform.py	/^Rz = 2. # [nm] length in z direction of channel part$/;"	v
Rz	scripts/numerics/analyticalPNPS.py	/^Rz = 2. # [nm] length in z direction of channel part$/;"	v
Rz	scripts/numerics/analyticalPNPS_2D.py	/^Rz = 2. # [nm] length in z direction of channel part$/;"	v
Rz	scripts/numerics/analyticalPNPS_3D.py	/^Rz = 2. # [nm] length in z direction of channel part$/;"	v
Rz	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^Rz = 2. # [nm] length in z direction of channel part$/;"	v
Rz	scripts/numerics/analyticalPNP_3D.py	/^Rz = 2. # [nm] length in z direction of channel part$/;"	v
Rz	scripts/plot_scripts/script2DWelectrodes.py	/^               Rz = numpy.linspace(250*nm, 2500*nm, 11).tolist(),$/;"	v
Rz	scripts/plot_scripts/script2DWelectrodes.py	/^        Rz = geo_dict["Rz"]$/;"	v
Rz	scripts/test.py	/^Rz = 15*nm,$/;"	v
Rz	scripts/test_axisym.py	/^Rz = 10.$/;"	v
Rz	scripts/test_features/curved.py	/^Rz = 1.$/;"	v
Rz_newbV	scripts/plot_scripts/script2DWelectrodes.py	/^Rz_newbV = []$/;"	v
S1	scripts/howorka/test_forcefields.py	/^def S1(f, mesh, dim=1):$/;"	f
SAMqs	nanopores/physics/howorka.py	/^SAMqs = -0.078$/;"	v
SAMqs	nanopores/physics/pore.py	/^SAMqs = -0.078$/;"	v
SAMqs	nanopores/physics/pore_dna.py	/^SAMqs = -0.078$/;"	v
SAMqs	nanopores/physics/pore_molecule.py	/^SAMqs = -0.078$/;"	v
SGPoissonProblem	nanopores/physics/simplepnps.py	/^class SGPoissonProblem(GeneralNonlinearProblem):$/;"	c
SUFFIX	nanopores/tools/fields.py	/^SUFFIX = ".field.txt"$/;"	v
Setup	nanopores/models/pughpore.py	/^class Setup(solvers.Setup):$/;"	c
Setup	nanopores/tools/solvers.py	/^class Setup(object):$/;"	c
SiNqs	nanopores/physics/howorka.py	/^SiNqs = -0.022$/;"	v
SiNqs	nanopores/physics/pore.py	/^SiNqs = -0.022$/;"	v
SiNqs	nanopores/physics/pore_dna.py	/^SiNqs = -0.022$/;"	v
SiNqs	nanopores/physics/pore_molecule.py	/^SiNqs = -0.022$/;"	v
Side	nanopores/geometries/Cyl2D/subdomains.py	/^class Side(SubDomain):$/;"	c
SideB	nanopores/geometries/H_cyl_geo/subdomains.py	/^class SideB(SubDomain):$/;"	c
SideB	nanopores/geometries/aHem/subdomains.py	/^class SideB(SubDomain):$/;"	c
SimpleLinearPBGO	nanopores/physics/simplepnps.py	/^class SimpleLinearPBGO(GoalAdaptivePDE):$/;"	c
SimpleLinearPBProblem	nanopores/physics/simplepnps.py	/^class SimpleLinearPBProblem(GeneralLinearProblem):$/;"	c
SimpleNernstPlanckProblem	nanopores/physics/simplepnps.py	/^class SimpleNernstPlanckProblem(GeneralLinearProblem):$/;"	c
SimplePBProblem	nanopores/physics/simplepnps.py	/^class SimplePBProblem(GeneralNonlinearProblem):$/;"	c
SimplePNPProblem	nanopores/physics/simplepnps.py	/^class SimplePNPProblem(GeneralNonlinearProblem):$/;"	c
SimplePNPSProblem	nanopores/physics/pnps2Dnewton.py	/^class SimplePNPSProblem(GeneralNonlinearProblem):$/;"	c
SimplePoissonProblem	nanopores/physics/simplepnps.py	/^class SimplePoissonProblem(GeneralLinearProblem):$/;"	c
SimpleStokesProblem	nanopores/physics/simplepnps.py	/^class SimpleStokesProblem(GeneralLinearProblem):$/;"	c
Sphere	nanopores/geometries/curved.py	/^class Sphere(SubDomain):$/;"	c
StokesProblem	nanopores/physics/pnps.py	/^class StokesProblem(AdaptableLinearProblem):$/;"	c
StokesProblemAxisym	nanopores/physics/pnps2D.py	/^class StokesProblemAxisym(AdaptableLinearProblem):$/;"	c
StokesProblemAxisymEqualOrder	nanopores/physics/pnps2D.py	/^class StokesProblemAxisymEqualOrder(StokesProblemAxisym):$/;"	c
StokesProblemEqualOrder	nanopores/physics/pnps.py	/^class StokesProblemEqualOrder(StokesProblem):$/;"	c
SuccessfulExit	nanopores/physics/exittime.py	/^class SuccessfulExit(TransientLinearPDE):$/;"	c
Surf	nanopores/tools/axisym.py	/^Surf = {0 : "Point", 1 : "Line", 2 : "Surface"}$/;"	v
SurfaceLoop	nanopores/py4gmsh/basic.py	/^def SurfaceLoop(surfaces):$/;"	f
SurvivalProblem	nanopores/physics/exittime.py	/^class SurvivalProblem(GeneralLinearProblem):$/;"	c
T	nanopores/physics/electrolyte.py	/^T = 293 # temperature [K]$/;"	v
T	nanopores/physics/howorka.py	/^T = 293 # temperature [K]$/;"	v
T	nanopores/physics/params_physical.py	/^T = 293 # room temperature (20 grad Celsius) [K]$/;"	v
T	nanopores/physics/pore_dna.py	/^T = 293 # temperature [K]$/;"	v
T	nanopores/physics/pore_molecule.py	/^T = 293 # temperature [K]$/;"	v
T	nanopores/scripts/stokes_diffusivity.py	/^T = 273 + 20$/;"	v
T	nanopores/scripts/test_survival.py	/^T = exit_times(etp.solution)$/;"	v
T	scripts/random_walk_aHem/run.py	/^T= 273+30#temp [K]$/;"	v
T	scripts/random_walk_aHem/varplots.py	/^T= 293 #temp [K]$/;"	v
T	scripts/survival.py	/^T = exit_times(etp.solution)$/;"	v
T	scripts/test_ahem.py	/^T = exit_times(etp.solution)$/;"	v
TIME	scripts/random_walk_aHem/run.py	/^TIME=np.load('timer.npy')$/;"	v
TMPDIR	scripts/howorka/HoworkaTools.py	/^TMPDIR = "\/tmp\/video\/"$/;"	v
TMPDIR	scripts/howorka/video.py	/^TMPDIR = "\/tmp\/video\/"$/;"	v
TOL	nanopores/tools/box.py	/^TOL = 1e-10 # more secure$/;"	v
TOL	nanopores/tools/coupled.py	/^TOL = 1e-4$/;"	v
TT	scripts/stokes_law/stokes_drag_comparison.py	/^TT = genfromtxt('stokes_drag_table_rdivR.csv', delimiter=',')$/;"	v
T_noF	nanopores/scripts/test_survival.py	/^T_noF = exit_times(etp_noF.solution)$/;"	v
T_noF	scripts/test_ahem.py	/^T_noF = exit_times(etp_noF.solution)$/;"	v
TimeDependentPlotter	nanopores/tools/transientpde.py	/^class TimeDependentPlotter(object):$/;"	c
Top	scripts/fluorophore_in_top_reservoir.py	/^class Top(SubDomain):$/;"	c
TopBlock	scripts/fluorophore_in_top_reservoir.py	/^class TopBlock(SubDomain):$/;"	c
TransientLinearPDE	nanopores/tools/transientpde.py	/^class TransientLinearPDE(PDESystem):$/;"	c
U	scripts/howorka/eikonal.py	/^    def U(r):$/;"	f	function:LinearPotential
U	scripts/numerics/implicit_vs_explicit.py	/^U = VectorFunctionSpace(mesh, "CG", 1)$/;"	v
U	scripts/plot_forces_How/plot_drag.py	/^U = np.zeros((Ny,Nx))$/;"	v
U	scripts/plot_forces_How/plot_el.py	/^U = np.zeros((Ny,Nx))$/;"	v
U	scripts/plot_forces_aHem/combine.py	/^U = np.zeros((Ny,Nx))$/;"	v
U	scripts/plot_forces_aHem/combine2.py	/^U = np.zeros((Ny,Nx))$/;"	v
U	scripts/plot_forces_aHem/plot_drag.py	/^U = np.zeros((Ny,Nx))$/;"	v
U	scripts/plot_forces_aHem/plot_el.py	/^U = np.zeros((Ny,Nx))$/;"	v
U	scripts/plot_forces_aHem/ppt.py	/^U = np.zeros((Ny,Nx))$/;"	v
U	scripts/plot_scripts/PMF_Profile_2D.py	/^U = []$/;"	v
U	scripts/plot_scripts/PMFplots.py	/^    U = antider(F, -step*C) #\/(kB*T))$/;"	v
U	scripts/plot_scripts/PMFplots.py	/^    U = map(lambda u : u - U[-1], U)$/;"	v
U0	nanopores/physics/electrolyte.py	/^U0 = lambda dim: dolfin.Constant(tuple(0. for i in range(dim)))$/;"	v
UT	nanopores/physics/electrolyte.py	/^UT = lambda kT: kT\/qq$/;"	v
UT	nanopores/physics/howorka.py	/^UT = lambda: kB*T\/qq$/;"	v
UT	nanopores/physics/params_physical.py	/^UT = kB*T\/qq # thermal voltage [V] = ca. 25 mV$/;"	v
UT	nanopores/physics/pore_dna.py	/^UT = lambda: kB*T\/qq$/;"	v
UT	nanopores/physics/pore_molecule.py	/^UT = lambda: kB*T\/qq$/;"	v
UT	scripts/analytical_test_case.py	/^UT = phys.UT$/;"	v
UT	scripts/numerics/anaPNPS_refinement.py	/^UT = phys.UT$/;"	v
UT	scripts/numerics/anaPNPS_refinement_2D.py	/^UT = phys.UT$/;"	v
UT	scripts/numerics/anaPNPS_uniform.py	/^UT = phys.UT$/;"	v
UT	scripts/numerics/analyticalPNPS.py	/^UT = phys.UT$/;"	v
UT	scripts/numerics/analyticalPNPS_2D.py	/^UT = phys.UT$/;"	v
UT	scripts/numerics/analyticalPNPS_3D.py	/^UT = phys.UT$/;"	v
UT	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^UT = phys.UT$/;"	v
UT	scripts/numerics/analyticalPNP_3D.py	/^UT = phys.UT$/;"	v
UnchargedDNAB	nanopores/geometries/H_cyl_geo/subdomains.py	/^class UnchargedDNAB(SubDomain): # = upper and lower part$/;"	c
UnchargedDNAB	nanopores/geometries/H_geo/subdomains.py	/^    class UnchargedDNAB(SubDomain):$/;"	c	function:boundaries_list
UnchargedDNAB	nanopores/geometries/P_geo/subdomains.py	/^    class UnchargedDNAB(SubDomain):$/;"	c	function:boundaries_list
UnchargedDNAB	nanopores/geometries/aHem/subdomains.py	/^class UnchargedDNAB(SubDomain):$/;"	c
Upper	nanopores/geometries/Cyl2D/subdomains.py	/^class Upper(SubDomain):$/;"	c
Upper	nanopores/geometries/Nanowire/subdomains.py	/^class Upper(SubDomain):$/;"	c
UpperB	nanopores/geometries/H_cyl_geo/subdomains.py	/^class UpperB(SubDomain):$/;"	c
UpperB	nanopores/geometries/H_geo/subdomains.py	/^    class UpperB(SubDomain):$/;"	c	function:boundaries_list
UpperB	nanopores/geometries/P_geo/subdomains.py	/^    class UpperB(SubDomain):$/;"	c	function:boundaries_list
UpperB	nanopores/geometries/W_2D_geo/subdomains.py	/^    class UpperB(SubDomain):$/;"	c	function:boundaries_list
UpperB	nanopores/geometries/W_3D_geo/subdomains.py	/^    class UpperB(SubDomain):$/;"	c	function:boundaries_list
UpperB	nanopores/geometries/aHem/subdomains.py	/^class UpperB(SubDomain):$/;"	c
UpperSAMB	nanopores/geometries/W_2D_geo/subdomains.py	/^    class UpperSAMB(SubDomain):$/;"	c	function:boundaries_list
UpperSAMB	nanopores/geometries/W_3D_geo/subdomains.py	/^    class UpperSAMB(SubDomain):$/;"	c	function:boundaries_list
V	scripts/analytical_test_case.py	/^V = SimplePNPProblem.space(geo2D.mesh)$/;"	v
V	scripts/howorka/HoworkaTools.py	/^V = dolfin.FunctionSpace(mesh, "CG", 1)$/;"	v
V	scripts/howorka/forcefield.py	/^V = dolfin.FunctionSpace(mesh, "CG", 1)$/;"	v
V	scripts/howorka/ivcurve.py	/^V = 1e-3*mV$/;"	v
V	scripts/howorka/test_forcefields.py	/^V = dolfin.VectorFunctionSpace(mesh, "CG", 1)$/;"	v
V	scripts/numerics/adap2Dref.py	/^V = v([0.0, -Ry]) - v([0.0, Ry])$/;"	v
V	scripts/numerics/force_profiles.py	/^V = dolfin.FunctionSpace(mesh, "CG", 1)$/;"	v
V	scripts/numerics/implicit_vs_explicit.py	/^V = FunctionSpace(mesh, "CG", 1)$/;"	v
V	scripts/numerics/matplotfem2d.py	/^    V = dolfin.FunctionSpace(mesh, "CG", 1)$/;"	v
V	scripts/plot_forces_How/plot_drag.py	/^V = np.zeros((Ny,Nx))$/;"	v
V	scripts/plot_forces_How/plot_el.py	/^V = np.zeros((Ny,Nx))$/;"	v
V	scripts/plot_forces_aHem/combine.py	/^V = np.zeros((Ny,Nx))$/;"	v
V	scripts/plot_forces_aHem/combine2.py	/^V = np.zeros((Ny,Nx))$/;"	v
V	scripts/plot_forces_aHem/plot_drag.py	/^V = np.zeros((Ny,Nx))$/;"	v
V	scripts/plot_forces_aHem/plot_el.py	/^V = np.zeros((Ny,Nx))$/;"	v
V	scripts/plot_forces_aHem/ppt.py	/^V = np.zeros((Ny,Nx))$/;"	v
V	scripts/plot_scripts/IV_curve_2D.py	/^    V = (v([0.0, -10*nm]) - v([0.0, 10*nm]))$/;"	v
V	scripts/plot_scripts/current_trace_2D.py	/^V = []$/;"	v
V	scripts/plot_scripts/script2DW.py	/^    V = (v([0.0, -l0\/2*1.5]) - v([0.0, l0\/2*1.5]))$/;"	v
V	scripts/test2D.py	/^V = v([0.0, -Ry]) - v([0.0, Ry])$/;"	v
V	scripts/test2DP.py	/^V = v([r0, -l0]) - v([r0, l0])$/;"	v
V	scripts/test2Dold.py	/^V = v([0.0, -Ry]) - v([0.0, Ry])$/;"	v
V	scripts/test3D_GOA.py	/^V = v([0.0, 0.0, -l0]) - v([0.0, 0.0, l0])$/;"	v
V0	scripts/howorka/forcefield.py	/^V0 = dolfin.FunctionSpace(mesh, "CG", 1)$/;"	v
V0	scripts/plot_scripts/IV_ahem.py	/^V0 = 4.  # [mV]$/;"	v
V0	scripts/plot_scripts/IV_curve_2D.py	/^V0 = IV[:,0]$/;"	v
V0	scripts/plot_scripts/script2DW.py	/^V0 = IV[:,0]$/;"	v
VIDDIR	scripts/howorka/HoworkaTools.py	/^VIDDIR = os.path.expanduser("~") + "\/presentations\/nanopores\/"$/;"	v
VIDDIR	scripts/howorka/video.py	/^VIDDIR = os.path.expanduser("~") + "\/presentations\/nanopores\/"$/;"	v
VV	scripts/howorka/HoworkaTools.py	/^VV = dolfin.VectorFunctionSpace(mesh, "CG", 1)$/;"	v
VV	scripts/howorka/forcefield.py	/^VV = dolfin.VectorFunctionSpace(mesh, "CG", 1)$/;"	v
VV	scripts/test_ahem.py	/^VV = VectorFunctionSpace(geo.mesh, "CG", 1)$/;"	v
VV0	scripts/howorka/forcefield.py	/^VV0 = dolfin.VectorFunctionSpace(mesh, "CG", 1)$/;"	v
Vecx	scripts/random_walk_aHem/varplots.py	/^Vecx = np.load('Vecx.npy')\/float(sims)$/;"	v
Vecx2	scripts/random_walk_aHem/varplots.py	/^Vecx2 = np.load('Vecx2.npy')\/float(sims)$/;"	v
Vecx2	scripts/random_walk_aHem/varplots.py	/^Vecx2=Vecx2-Vecx**2$/;"	v
Vecy	scripts/random_walk_aHem/varplots.py	/^Vecy = np.load('Vecy.npy')\/float(sims)$/;"	v
Vecy2	scripts/random_walk_aHem/varplots.py	/^Vecy2 = np.load('Vecy2.npy')\/float(sims)$/;"	v
Vecy2	scripts/random_walk_aHem/varplots.py	/^Vecy2=Vecy2-Vecy**2$/;"	v
Vecz	scripts/random_walk_aHem/varplots.py	/^Vecz = np.load('Vecz.npy')\/float(sims)$/;"	v
Vecz2	scripts/random_walk_aHem/varplots.py	/^Vecz2 = np.load('Vecz2.npy')\/float(sims)$/;"	v
Vecz2	scripts/random_walk_aHem/varplots.py	/^Vecz2=Vecz2-Vecz**2$/;"	v
Vol	scripts/howorka/HoworkaTools.py	/^Vol = dolfin.pi*4.\/3.*r**3 # volume of region [nm**3]$/;"	v
Vol	scripts/howorka/video.py	/^Vol = dolfin.pi*4.\/3.*r**3 # volume of region [nm**3]$/;"	v
Volume	nanopores/py4gmsh/basic.py	/^def Volume(surface_loop):$/;"	f
W	scripts/pughpore/diffusion.py	/^W = pnps.SimpleStokesProblem.space(geo.mesh)$/;"	v
X	scripts/howorka/forcefield3D.py	/^    X = [x0 for x0 in X if x0 not in Xdone]$/;"	v
X	scripts/howorka/forcefield3D.py	/^X = fields.get_entry("xforce", "X")$/;"	v
X	scripts/howorka/interpolation_points.py	/^X = points(h, hout, r0, rMolecule, l0\/2, r1 + rMolecule, Ry)$/;"	v
X	scripts/howorka/test_forcefields.py	/^X = data["x"]$/;"	v
X	scripts/plot_forces_How/plot_drag.py	/^X=np.zeros(size+1)$/;"	v
X	scripts/plot_forces_How/plot_el.py	/^X=np.zeros(size+1)$/;"	v
X	scripts/plot_forces_aHem/plot_drag.py	/^X=np.zeros(size+1)$/;"	v
X	scripts/plot_forces_aHem/plot_el.py	/^X=np.zeros(size+1)$/;"	v
X	scripts/pughpore/ff.py	/^X = fields.get_entry("pughx", "x", k=3)$/;"	v
X	scripts/pughpore/randomwalk/run.py	/^X = np.zeros(steps)$/;"	v
X	scripts/pughpore/sobol_points.py	/^    X = np.append(X,X_p)$/;"	v
X	scripts/pughpore/test_ff.py	/^X = [[0.,0.,t] for t in ran]$/;"	v
X	scripts/random_walk_aHem/plot_aHem.py	/^X=np.zeros(size+1)$/;"	v
X	scripts/random_walk_aHem/plot_path.py	/^X=np.load('x.npy')$/;"	v
X	scripts/random_walk_aHem/plot_path.py	/^X=np.zeros(size+1)$/;"	v
XY	scripts/pughpore/sobol_points.py	/^    XY = sobol(2,2**(i+k0),2**(i+k0))$/;"	v
XY	scripts/pughpore/sobol_points.py	/^XY = sobol(2,2**k0,0)$/;"	v
X_	scripts/plot_forces_aHem/combine.py	/^X_=np.zeros(size+1)$/;"	v
X_	scripts/plot_forces_aHem/combine2.py	/^X_=np.zeros(size+1)$/;"	v
X_	scripts/plot_forces_aHem/ppt.py	/^X_=np.zeros(size+1)$/;"	v
X_	scripts/random_walk_aHem/plot_aHem.py	/^X_=np.zeros(a.shape[0]+1)$/;"	v
X_	scripts/random_walk_aHem/plot_path.py	/^X_=np.zeros(a.shape[0]+1)$/;"	v
X_2	scripts/plot_forces_How/plot_drag.py	/^X_2=-X$/;"	v
X_2	scripts/plot_forces_How/plot_el.py	/^X_2=-X$/;"	v
X_2	scripts/plot_forces_aHem/combine.py	/^X_2=-X_$/;"	v
X_2	scripts/plot_forces_aHem/combine2.py	/^X_2=-X_$/;"	v
X_2	scripts/plot_forces_aHem/plot_drag.py	/^X_2=-X$/;"	v
X_2	scripts/plot_forces_aHem/plot_el.py	/^X_2=-X$/;"	v
X_2	scripts/plot_forces_aHem/ppt.py	/^X_2=-X_$/;"	v
X_How_2d	scripts/plot_forces_How/How_2d.py	/^X_How_2d = np.array([[1.,4.5],[2.5,4.5],[2.5,1.1],[10.,1.1],[10.,-1.1],[2.5,-1.1],[2.5,-4.5],[1.,-4.5]])$/;"	v
X_How_2d	scripts/plot_forces_How/plot_drag.py	/^X_How_2d = np.array([[1.,4.5],[2.5,4.5],[2.5,1.1],[10.,1.1],[10.,-1.1],[2.5,-1.1],[2.5,-4.5],[1.,-4.5]])$/;"	v
X_How_2d	scripts/plot_forces_How/plot_el.py	/^X_How_2d = np.array([[1.,4.5],[2.5,4.5],[2.5,1.1],[10.,1.1],[10.,-1.1],[2.5,-1.1],[2.5,-4.5],[1.,-4.5]])$/;"	v
X_aHem	scripts/random_walk_aHem/aHem_array.py	/^X_aHem = np.array([[2.16, 0.0, 0.0],$/;"	v
X_aHem_2d	scripts/plot_forces_aHem/aHem_array_2d.py	/^X_aHem_2d = np.array([[2.16, 0.0],$/;"	v
X_aHem_2d	scripts/random_walk_aHem/aHem_array_2d.py	/^X_aHem_2d = np.array([[2.16, 0.0],$/;"	v
X_p	scripts/pughpore/sobol_points.py	/^    X_p = X_points*fac[j]$/;"	v
X_points	scripts/pughpore/sobol_points.py	/^        X_points = np.delete(X_points,i)$/;"	v
X_points	scripts/pughpore/sobol_points.py	/^    X_points = np.append(X_points,XY[0])$/;"	v
Xadd	scripts/howorka/test_forcefields.py	/^       uniform_grid([0, r1], [-Ry, -Ry0], h=0.4)$/;"	v
Xdna	scripts/howorka/test_forcefields.py	/^       uniform_grid([r1+r, Rx1], [-l1\/2-r, l1\/2+r], h=0.2)$/;"	v
Xdone	scripts/howorka/forcefield3D.py	/^    Xdone = fields.get_field("force3D", "x", **params)$/;"	v
Xfailed	scripts/howorka/forcefield3D.py	/^Xfailed = []$/;"	v
Y	scripts/plot_forces_How/plot_drag.py	/^Y=np.zeros(size+1)$/;"	v
Y	scripts/plot_forces_How/plot_el.py	/^Y=np.zeros(size+1)$/;"	v
Y	scripts/plot_forces_aHem/plot_drag.py	/^Y=np.zeros(size+1)$/;"	v
Y	scripts/plot_forces_aHem/plot_el.py	/^Y=np.zeros(size+1)$/;"	v
Y	scripts/pughpore/randomwalk/run.py	/^Y = np.zeros(steps)$/;"	v
Y	scripts/pughpore/sobol_points.py	/^    Y = np.append(Y,Y_p)$/;"	v
Y	scripts/random_walk_aHem/plot_aHem.py	/^Y=np.zeros(size+1)$/;"	v
Y	scripts/random_walk_aHem/plot_path.py	/^Y=np.load('y.npy')$/;"	v
Y	scripts/random_walk_aHem/plot_path.py	/^Y=np.zeros(size+1)$/;"	v
Y_	scripts/plot_forces_aHem/combine.py	/^Y_=np.zeros(size+1)$/;"	v
Y_	scripts/plot_forces_aHem/combine2.py	/^Y_=np.zeros(size+1)$/;"	v
Y_	scripts/plot_forces_aHem/ppt.py	/^Y_=np.zeros(size+1)$/;"	v
Y_	scripts/random_walk_aHem/plot_aHem.py	/^Y_=np.zeros(a.shape[0]+1)$/;"	v
Y_	scripts/random_walk_aHem/plot_path.py	/^Y_=np.zeros(a.shape[0]+1)$/;"	v
Y_p	scripts/pughpore/sobol_points.py	/^    Y_p = Y_points*fac[j]$/;"	v
Y_points	scripts/pughpore/sobol_points.py	/^        Y_points = np.delete(Y_points,i)$/;"	v
Y_points	scripts/pughpore/sobol_points.py	/^    Y_points = np.append(Y_points,XY[1])$/;"	v
Z	scripts/plot_scripts/PMF_Profile_2D.py	/^Z = []$/;"	v
Z	scripts/plot_scripts/PMFplots.py	/^    Z = data["z"]$/;"	v
Z	scripts/plot_scripts/current_trace_2D.py	/^Z = []$/;"	v
Z	scripts/pughpore/randomwalk/run.py	/^Z = np.zeros(steps)$/;"	v
Z	scripts/pughpore/sobol_points.py	/^    Z = np.append(Z,Z_p)$/;"	v
Z	scripts/random_walk_aHem/plot_path.py	/^Z=np.load('z.npy')$/;"	v
Z_p	scripts/pughpore/sobol_points.py	/^    Z_p=np.zeros(X_points.shape[0])+z[j]$/;"	v
_ARRAY_ID	nanopores/py4gmsh/basic.py	/^_ARRAY_ID = 0$/;"	v
_CIRCLE_ID	nanopores/py4gmsh/basic.py	/^_CIRCLE_ID = 0$/;"	v
_Duplicate_ID	nanopores/py4gmsh/basic.py	/^_Duplicate_ID = 0$/;"	v
_EXTRUDE_ID	nanopores/py4gmsh/basic.py	/^_EXTRUDE_ID = 0$/;"	v
_FIELD_ID	nanopores/py4gmsh/basic.py	/^_FIELD_ID = 0$/;"	v
_Fel	nanopores/physics/pore_mol.py	/^    def _Fel(v, i):$/;"	f	function:Fbare
_GMSH_CODE	nanopores/py4gmsh/basic.py	/^_GMSH_CODE = _header()$/;"	v
_LINELOOP_ID	nanopores/py4gmsh/basic.py	/^_LINELOOP_ID = 0$/;"	v
_LINE_ID	nanopores/py4gmsh/basic.py	/^_LINE_ID = 0$/;"	v
_PHYSSURF	nanopores/py4gmsh/basic.py	/^_PHYSSURF = {}$/;"	v
_PHYSSURF_ID	nanopores/py4gmsh/basic.py	/^_PHYSSURF_ID = 0$/;"	v
_PHYSVOL	nanopores/py4gmsh/basic.py	/^_PHYSVOL = {}$/;"	v
_PHYSVOL_ID	nanopores/py4gmsh/basic.py	/^_PHYSVOL_ID = 0$/;"	v
_POINT_ID	nanopores/py4gmsh/basic.py	/^_POINT_ID = 0$/;"	v
_ROTATE_ID	nanopores/py4gmsh/basic.py	/^_ROTATE_ID = 0$/;"	v
_SURFACELOOP_ID	nanopores/py4gmsh/basic.py	/^_SURFACELOOP_ID = 0$/;"	v
_SURFACE_ID	nanopores/py4gmsh/basic.py	/^_SURFACE_ID = 0$/;"	v
_VOLUME_ID	nanopores/py4gmsh/basic.py	/^_VOLUME_ID = 0$/;"	v
__all__	nanopores/models/Howorka.py	/^__all__ = ["setup2D", "solve2D", "setup3D", "solve3D"]$/;"	v
__all__	nanopores/physics/convdiff.py	/^__all__ = ["ConvectionDiffusionProblem", "ConvectionDiffusion"]$/;"	v
__all__	nanopores/physics/exittime.py	/^__all__ = ["ExitTimeProblem", "SurvivalProblem", "SuccessfulExit"]$/;"	v
__all__	nanopores/physics/pb.py	/^__all__ = ["NonstandardPB", "LinearNonstandardPB"]$/;"	v
__all__	nanopores/physics/pnps.py	/^__all__ = ["PNPS","PNPProblem","StokesProblem","StokesProblemEqualOrder",$/;"	v
__all__	nanopores/physics/pnps2D.py	/^__all__ = ["PNPSAxisym","PNPProblemAxisym","StokesProblemAxisym","LinearPBAxisym",$/;"	v
__all__	nanopores/physics/pnps2Dnewton.py	/^__all__ = ["PNPSAxisymNewton","PNPSProblemAxisym", "SimplePNPSProblem"]$/;"	v
__all__	nanopores/physics/poisson.py	/^__all__ = ["PoissonProblem", "Poisson", "PoissonProblemAxisym", "PoissonProblemPureNeumannAxisym"]$/;"	v
__all__	nanopores/physics/simplepnps.py	/^__all__ = ["SimplePNPProblem", "SimplePBProblem", "SimpleStokesProblem",$/;"	v
__all__	nanopores/scripts/simulation2D.py	/^__all__ = ["iterate_in_parallel", "post_iteration", "simulate",$/;"	v
__all__	nanopores/tools/axisym.py	/^__all__ = ["rotate_z"]$/;"	v
__all__	nanopores/tools/balls.py	/^__all__ = ["Box", "Ball", "EmptySet"]$/;"	v
__all__	nanopores/tools/box.py	/^__all__ = ["BoxCollection", "Box", "Interval"]$/;"	v
__all__	nanopores/tools/coupled.py	/^__all__ = ["CoupledProblem", "CoupledSolver"]$/;"	v
__all__	nanopores/tools/dictio.py	/^__all__ = ["write_dict","read_dict"]$/;"	v
__all__	nanopores/tools/errorest.py	/^__all__ = ["edge_residual_indicator", "poisson_indicator", "zz_indicator",$/;"	v
__all__	nanopores/tools/geometry.py	/^__all__ = ["Geometry", "PhysicalBC", "geo_from_name", "geo_from_subdomains",$/;"	v
__all__	nanopores/tools/illposed.py	/^__all__ = ["IllposedLinearSolver", "adaptform", "adaptfunction","adaptspace",$/;"	v
__all__	nanopores/tools/mpipool.py	/^__all__ = ["MPIPool", "mpimap"]$/;"	v
__all__	nanopores/tools/pdesystem.py	/^__all__ = ["PDESystem", "LinearPDE", "NonlinearPDE", "GoalAdaptivePDE",$/;"	v
__all__	nanopores/tools/physicsclass.py	/^__all__ = ["Physics"]$/;"	v
__all__	nanopores/tools/protocol.py	/^__all__ = ["Data"]$/;"	v
__all__	nanopores/tools/solvers.py	/^__all__ = ["Setup", "calculate_forcefield"]$/;"	v
__all__	nanopores/tools/transientpde.py	/^__all__ = ["TransientLinearPDE", "timerange", "logtimerange", "TimeDependentPlotter"]$/;"	v
__all__	nanopores/tools/utilities.py	/^__all__ = ["import_vars", "get_mesh", "u_to_matlab", "plot_on_sub", "save_dict", "plot_sliced",$/;"	v
__all__	scripts/howorka/colormaps.py	/^__all__ = ['magma', 'inferno', 'plasma', 'viridis']$/;"	v
__all__	scripts/numerics/Howorka.py	/^__all__ = ["setup2D", "solve2D"]$/;"	v
__and__	nanopores/tools/balls.py	/^    def __and__(self, other):$/;"	m	class:BallCollection	file:
__and__	nanopores/tools/box.py	/^    def __and__(self, other):$/;"	m	class:BoxCollection	file:
__and__	nanopores/tools/box.py	/^    def __and__(self, other):$/;"	m	class:csgExpression	file:
__call__	nanopores/tools/fields.py	/^    def __call__(self, f):$/;"	m	class:CacheBase	file:
__call__	nanopores/tools/geometry.py	/^    def __call__(self, x):$/;"	m	class:CallableMeshFunction	file:
__call__	nanopores/tools/illposed.py	/^    def __call__(self,f=None):$/;"	m	class:Functional	file:
__call__	nanopores/tools/solvers.py	/^    def __call__(self, f):$/;"	m	class:cache_forcefield	file:
__cmp__	nanopores/tools/box.py	/^    def __cmp__(self, other):$/;"	m	class:Box	file:
__cmp__	nanopores/tools/box.py	/^    def __cmp__(self, other):$/;"	m	class:ExactFloat	file:
__contains__	nanopores/tools/box.py	/^    def __contains__(self, coll):$/;"	m	class:BoxCollection	file:
__delitem__	nanopores/tools/errorest.py	/^    def __delitem__(self, i):$/;"	m	class:Estimator	file:
__enter__	nanopores/tools/box.py	/^    def __enter__(self):$/;"	m	class:Log	file:
__enter__	nanopores/tools/mpipool.py	/^    def __enter__(self):$/;"	m	class:MPIPool	file:
__eq__	nanopores/tools/box.py	/^    def __eq__(self, other):$/;"	m	class:ExactFloat	file:
__exit__	nanopores/tools/box.py	/^    def __exit__(self, *args):$/;"	m	class:Log	file:
__exit__	nanopores/tools/mpipool.py	/^    def __exit__(self, *args):$/;"	m	class:MPIPool	file:
__getattr__	nanopores/tools/fields.py	/^    def __getattr__(self, key):$/;"	m	class:Params	file:
__getattr__	nanopores/tools/physicsclass.py	/^    def __getattr__(self, name):$/;"	m	class:Physics	file:
__getattr__	nanopores/tools/utilities.py	/^    def __getattr__(self, key):$/;"	m	class:Params	file:
__getitem__	nanopores/tools/box.py	/^    def __getitem__(self, i):$/;"	m	class:Box	file:
__getitem__	nanopores/tools/errorest.py	/^    def __getitem__(self, i):$/;"	m	class:Estimator	file:
__getitem__	nanopores/tools/protocol.py	/^    def __getitem__(self, I): # implements Data[I]$/;"	m	class:Data	file:
__iadd__	nanopores/tools/errorest.py	/^    def __iadd__(self, pair):$/;"	m	class:Estimator	file:
__init__	nanopores/geometries/H_cyl_geo/subdomains.py	/^    def __init__(self, x0, rMolecule=rMolecule):$/;"	m	class:Molecule
__init__	nanopores/geometries/H_cyl_geo/subdomains.py	/^    def __init__(self, x0, rMolecule=rMolecule):$/;"	m	class:MoleculeB
__init__	nanopores/geometries/Nanowire/subdomains.py	/^    def __init__(self, xi):$/;"	m	class:Dopants
__init__	nanopores/geometries/aHem/subdomains.py	/^    def __init__(self, x0, rMolecule=rMolecule):$/;"	m	class:Molecule
__init__	nanopores/geometries/aHem/subdomains.py	/^    def __init__(self, x0, rMolecule=rMolecule):$/;"	m	class:MoleculeB
__init__	nanopores/geometries/curved.py	/^    def __init__(self, R, L, center=(0.,0.,0.), frac=0.75):$/;"	m	class:Cylinder
__init__	nanopores/geometries/curved.py	/^    def __init__(self, R, center=(0.,0.,0.), frac=0.75):$/;"	m	class:Circle
__init__	nanopores/geometries/curved.py	/^    def __init__(self, R, center=(0.,0.,0.), frac=0.75):$/;"	m	class:Sphere
__init__	nanopores/geometries/curved.py	/^    def __init__(self, subdomain):$/;"	m	class:Boundary
__init__	nanopores/models/pughpore.py	/^    def __init__(self, setup):$/;"	m	class:Plotter
__init__	nanopores/models/pughpore.py	/^    def __init__(self, u, damping=1.):$/;"	m	class:u1D
__init__	nanopores/physics/convdiff.py	/^    def __init__(self, geo=None, phys=None, **problem_params):$/;"	m	class:ConvectionDiffusionSteady
__init__	nanopores/physics/convdiff.py	/^    def __init__(self, geo=None, phys=None, dt=None, **problem_params):$/;"	m	class:ConvectionDiffusion
__init__	nanopores/physics/exittime.py	/^    def __init__(self, geo=None, phys=None, dt=None, **problem_params):$/;"	m	class:SuccessfulExit
__init__	nanopores/physics/finfet.py	/^        def __init__(self, xi):$/;"	m	class:add_dopants.Dopants
__init__	nanopores/physics/pb.py	/^    def __init__(self, geo, phys, **params):$/;"	m	class:LinearNonstandardPB
__init__	nanopores/physics/pb.py	/^    def __init__(self, geo, phys, **params):$/;"	m	class:NonstandardPB
__init__	nanopores/physics/pnps.py	/^    def __init__(self, geo, phys):$/;"	m	class:LinearPB
__init__	nanopores/physics/pnps.py	/^    def __init__(self, geo, phys, bcs=None, x=None, w=None):$/;"	m	class:PNPProblem
__init__	nanopores/physics/pnps.py	/^    def __init__(self, geo, phys, f=None, bcs=None, w=None):$/;"	m	class:StokesProblem
__init__	nanopores/physics/pnps.py	/^    def __init__(self, geo, phys, goal=None, ref=None):$/;"	m	class:LinearPBGoalOriented
__init__	nanopores/physics/pnps.py	/^    def __init__(self, geo, phys, v0=None, w0=None, taylorhood=False):$/;"	m	class:PNPS
__init__	nanopores/physics/pnps2D.py	/^    def __init__(self, geo, phys):$/;"	m	class:LinearPBAxisym
__init__	nanopores/physics/pnps2D.py	/^    def __init__(self, geo, phys):$/;"	m	class:PoissonAxisym
__init__	nanopores/physics/pnps2D.py	/^    def __init__(self, geo, phys, goal=None, ref=None):$/;"	m	class:LinearPBAxisymGoalOriented
__init__	nanopores/physics/pnps2D.py	/^    def __init__(self, geo, phys, v0=None, taylorhood=False):$/;"	m	class:PNPSAxisym
__init__	nanopores/physics/pnps2D.py	/^    def __init__(self, geo, phys=None, bcs=None, x=None, w=None):$/;"	m	class:PNPProblemAxisym
__init__	nanopores/physics/pnps2D.py	/^    def __init__(self, geo, phys=None, f=None, bcs=None, w=None):$/;"	m	class:StokesProblemAxisym
__init__	nanopores/physics/pnps2Dnewton.py	/^    def __init__(self, geo, phys):$/;"	m	class:PNPSAxisymNewton
__init__	nanopores/physics/pnps2Dnewton.py	/^    def __init__(self, geo, phys=None, bcs=None, x=None):$/;"	m	class:PNPSProblemAxisym
__init__	nanopores/physics/poisson.py	/^    def __init__(self, geo, **params):$/;"	m	class:Poisson
__init__	nanopores/physics/poisson.py	/^    def __init__(self, geo, phys=None, bcs=None, f=None, u=None):$/;"	m	class:PoissonProblem
__init__	nanopores/physics/simplepnps.py	/^    def __init__(self, geo, **params):$/;"	m	class:SimpleStokesProblem
__init__	nanopores/physics/simplepnps.py	/^    def __init__(self, geo, phys, goal=None, ref=None, cheapest=False):$/;"	m	class:SimpleLinearPBGO
__init__	nanopores/physics/simplepnps.py	/^    def __init__(self, geo, phys, goals=[], iterative=False, **params):$/;"	m	class:PNPFixedPoint
__init__	nanopores/physics/simplepnps.py	/^    def __init__(self, geo, phys, goals=[], iterative=False, **params):$/;"	m	class:PNPFixedPointNaive
__init__	nanopores/physics/simplepnps.py	/^    def __init__(self, geo, phys, goals=[], iterative=False, **params):$/;"	m	class:PNPFixedPointNonlinear
__init__	nanopores/physics/simplepnps.py	/^    def __init__(self, geo, phys, goals=[], iterative=False, **params):$/;"	m	class:PNPSHybrid
__init__	nanopores/physics/simplepnps.py	/^    def __init__(self, geo, phys, goals=[], taylorhood=False, iterative=False,$/;"	m	class:PNPSFixedPoint
__init__	nanopores/tools/balls.py	/^    def __init__(self, *args, **params):$/;"	m	class:Box
__init__	nanopores/tools/balls.py	/^    def __init__(self, boxes, balls):$/;"	m	class:BallCollection
__init__	nanopores/tools/balls.py	/^    def __init__(self, dim=3):$/;"	m	class:EmptySet
__init__	nanopores/tools/balls.py	/^    def __init__(self, m, r, lc=None):$/;"	m	class:Ball
__init__	nanopores/tools/box.py	/^    def __init__(self, *args):$/;"	m	class:csgExpression
__init__	nanopores/tools/box.py	/^    def __init__(self, *boxes):$/;"	m	class:BoxCollection
__init__	nanopores/tools/box.py	/^    def __init__(self, a=None, b=None, intervals=None, center=None,$/;"	m	class:Box
__init__	nanopores/tools/box.py	/^    def __init__(self, coll):$/;"	m	class:BoundaryCollection
__init__	nanopores/tools/box.py	/^    def __init__(self, msg):$/;"	m	class:Log
__init__	nanopores/tools/coupled.py	/^    def __init__(self, coupled, goals=[], **solverparams):$/;"	m	class:CoupledSolver
__init__	nanopores/tools/coupled.py	/^    def __init__(self, problems, couplers, geo, phys=None, **params):$/;"	m	class:CoupledProblem
__init__	nanopores/tools/errorest.py	/^    def __init__(self, name):$/;"	m	class:Estimator
__init__	nanopores/tools/fields.py	/^    def __init__(self):$/;"	m	class:Header
__init__	nanopores/tools/fields.py	/^    def __init__(self, name, default={}, overwrite=False):$/;"	m	class:CacheBase
__init__	nanopores/tools/functions1D.py	/^    def __init__(self, a=None, b=None, N=100, domain=None):$/;"	m	class:Geometry1D
__init__	nanopores/tools/geometry.py	/^    def __init__(self, V, g, description, geo=None):$/;"	m	class:PhysicalBC
__init__	nanopores/tools/geometry.py	/^    def __init__(self, dom2value, subdomains):$/;"	m	class:Dict2Expression
__init__	nanopores/tools/geometry.py	/^    def __init__(self, f):$/;"	m	class:CallableMeshFunction
__init__	nanopores/tools/geometry.py	/^    def __init__(self, module=None, mesh=None,$/;"	m	class:Geometry
__init__	nanopores/tools/geometry.py	/^    def __init__(self, name, compute, geo):$/;"	m	class:GeometricConstant
__init__	nanopores/tools/illposed.py	/^    def __init__(self, V, g, boundaries, i, method="topological"):$/;"	m	class:AdaptableBC
__init__	nanopores/tools/illposed.py	/^    def __init__(self, a, L, uold, bcs=None, boundaries=None):$/;"	m	class:AdaptableNonlinearProblem
__init__	nanopores/tools/illposed.py	/^    def __init__(self, problem, **method):$/;"	m	class:IllposedLinearSolver
__init__	nanopores/tools/illposed.py	/^    def __init__(self,a,L,u,bcs=None,boundaries=None,form_compiler_parameters=None):$/;"	m	class:AdaptableLinearProblem
__init__	nanopores/tools/illposed.py	/^    def __init__(self,form):$/;"	m	class:Functional
__init__	nanopores/tools/mpipool.py	/^    def __init__(self, function):$/;"	m	class:_function_wrapper
__init__	nanopores/tools/mpipool.py	/^    def __init__(self, target=None, comm=None, debug=False, loadbalance=False):$/;"	m	class:MPIPool
__init__	nanopores/tools/pdesystem.py	/^    def __init__(self, geo, ProblemClass, **problem_params):$/;"	m	class:NonlinearPDE
__init__	nanopores/tools/pdesystem.py	/^    def __init__(self, geo, ProblemClass, *problem_args, **problem_params):$/;"	m	class:LinearPDE
__init__	nanopores/tools/pdesystem.py	/^    def __init__(self, geo, phys, Problem, goal):$/;"	m	class:GoalAdaptivePDE
__init__	nanopores/tools/pdesystem.py	/^    def __init__(self, geo, phys=None, u=None, bcs=None, **params):$/;"	m	class:GeneralLinearProblem
__init__	nanopores/tools/pdesystem.py	/^    def __init__(self, geo, phys=None, u=None, bcs=None, **params):$/;"	m	class:GeneralNonlinearProblem
__init__	nanopores/tools/pdesystem.py	/^    def __init__(self, geo=None, solvers={}, functions={}, functionals={}):$/;"	m	class:PDESystem
__init__	nanopores/tools/pdesystem.py	/^    def __init__(self, problem, geo):$/;"	m	class:PDEfromProblem
__init__	nanopores/tools/physicsclass.py	/^    def __init__(self, name="default", geo=None, module=None, **params):$/;"	m	class:Physics
__init__	nanopores/tools/protocol.py	/^    def __init__(self, filename, N=1, overwrite=False):$/;"	m	class:Data
__init__	nanopores/tools/solvers.py	/^    def __init__(self, geop=None, physp=None, solverp=None, **params):$/;"	m	class:Setup
__init__	nanopores/tools/solvers.py	/^    def __init__(self, name, default={}, nproc=1):$/;"	m	class:cache_forcefield
__init__	nanopores/tools/transientpde.py	/^    def __init__(self, Problem, geo=None, phys=None,$/;"	m	class:TransientLinearPDE
__init__	nanopores/tools/transientpde.py	/^    def __init__(self, ft, xran, dt):$/;"	m	class:TimeDependentPlotter
__init__	nanopores/tools/utilities.py	/^        def __init__(self, F):$/;"	m	class:convert2D.Convert2DExpression
__init__	nanopores/tools/utilities.py	/^        def __init__(self, F):$/;"	m	class:convert3D.Convert3DExpression
__init__	nanopores/tools/utilities.py	/^    def __init__(self, u, axis=1):$/;"	m	class:uCross
__init__	nanopores/tools/utilities.py	/^    def __init__(self, u, axis=1):$/;"	m	class:uCrossVector
__init__	scripts/numerics/adap3Dref.py	/^    def __init__(self, u, p):$/;"	m	class:w3D
__iter__	nanopores/tools/box.py	/^    def __iter__(self):$/;"	m	class:Box	file:
__iter__	nanopores/tools/errorest.py	/^    def __iter__(self):$/;"	m	class:Estimator	file:
__len__	nanopores/tools/errorest.py	/^    def __len__(self):$/;"	m	class:Estimator	file:
__ne__	nanopores/tools/box.py	/^    def __ne__(self, other):$/;"	m	class:ExactFloat	file:
__or__	nanopores/tools/balls.py	/^    def __or__(self, other):$/;"	m	class:BallCollection	file:
__or__	nanopores/tools/box.py	/^    def __or__(self, other):$/;"	m	class:BoxCollection	file:
__or__	nanopores/tools/box.py	/^    def __or__(self, other):$/;"	m	class:csgExpression	file:
__or__	nanopores/tools/utilities.py	/^    def __or__(self, other):$/;"	m	class:Params	file:
__repr__	nanopores/tools/balls.py	/^    def __repr__(self):$/;"	m	class:Ball	file:
__repr__	nanopores/tools/box.py	/^    def __repr__(self):$/;"	m	class:BoundaryCollection	file:
__repr__	nanopores/tools/box.py	/^    def __repr__(self):$/;"	m	class:Box	file:
__repr__	nanopores/tools/box.py	/^    def __repr__(self):$/;"	m	class:BoxCollection	file:
__repr__	nanopores/tools/box.py	/^    def __repr__(self):$/;"	m	class:csgExpression	file:
__repr__	nanopores/tools/mpipool.py	/^    def __repr__(self):$/;"	m	class:_close_pool_message	file:
__setitem__	nanopores/tools/errorest.py	/^    def __setitem__(self, i, val):$/;"	m	class:Estimator	file:
__setitem__	nanopores/tools/protocol.py	/^    def __setitem__(self, I, val): # Data[key] = foo$/;"	m	class:Data	file:
__str__	nanopores/tools/box.py	/^    def __str__(self):$/;"	m	class:BoundaryCollection	file:
__str__	nanopores/tools/box.py	/^    def __str__(self):$/;"	m	class:BoxCollection	file:
__str__	nanopores/tools/geometry.py	/^    def __str__(self):$/;"	m	class:GeometricConstant	file:
__str__	nanopores/tools/geometry.py	/^    def __str__(self):$/;"	m	class:Geometry	file:
__str__	nanopores/tools/physicsclass.py	/^    def __str__(self):$/;"	m	class:Physics	file:
__sub__	nanopores/tools/balls.py	/^    def __sub__(self, other):$/;"	m	class:BallCollection	file:
__sub__	nanopores/tools/box.py	/^    def __sub__(self, other):$/;"	m	class:BoxCollection	file:
__sub__	nanopores/tools/box.py	/^    def __sub__(self, other):$/;"	m	class:csgExpression	file:
__version__	nanopores/tools/mpipool.py	/^__version__ = "0.0.1"$/;"	v
_add_entry	nanopores/tools/fields.py	/^    def _add_entry(self, name, params):$/;"	m	class:Header
_argparse	nanopores/tools/utilities.py	/^def _argparse():$/;"	f
_boundaries	nanopores/tools/box.py	/^_boundaries = {$/;"	v
_call	nanopores/tools/utilities.py	/^def _call(f, params):$/;"	f
_close_pool_message	nanopores/tools/mpipool.py	/^class _close_pool_message(object):$/;"	c
_cmp	nanopores/tools/box.py	/^def _cmp(s, t, tol):$/;"	f
_compatible	nanopores/tools/fields.py	/^def _compatible(a, b):$/;"	f
_compute_renumbering	nanopores/tools/illposed.py	/^def _compute_renumbering(self):$/;"	f
_current	nanopores/physics/pore.py	/^    def _current(U):$/;"	f	function:CurrentPNPS
_delete_file	nanopores/tools/fields.py	/^    def _delete_file(self, FILE):$/;"	m	class:Header
_dict_to_DG	nanopores/tools/geometry.py	/^    def _dict_to_DG(self, dom2value): #TODO: not assume domain$/;"	m	class:Geometry
_diff	scripts/howorka/selectivity.py	/^def _diff(dic, keys):$/;"	f
_error_function	nanopores/tools/mpipool.py	/^def _error_function(task):$/;"	f
_exists	nanopores/tools/fields.py	/^    def _exists(self, params):$/;"	m	class:CacheBase
_extract_bcs	nanopores/tools/illposed.py	/^def _extract_bcs(bcs):$/;"	f
_facets	nanopores/tools/box.py	/^def _facets(box): # get facets from d-dimensional box, d >= 1$/;"	f
_find_names_in_files	nanopores/tools/utilities.py	/^def _find_names_in_files(pre, post):$/;"	f
_force	nanopores/physics/pore_mol.py	/^    def _force(U):$/;"	f	function:Fdrag
_forces	nanopores/physics/pore_mol.py	/^    def _forces(U):$/;"	f	function:ForcesPNPS
_function_wrapper	nanopores/tools/mpipool.py	/^class _function_wrapper(object):$/;"	c
_getvalue	nanopores/tools/geometry.py	/^    def _getvalue(self, string, value):$/;"	m	class:Geometry
_globals	nanopores/scripts/ahemFPT.py	/^def _globals(): # globals except hidden ones ("_"), modules and functions$/;"	f
_globals	nanopores/scripts/ahemIV.py	/^def _globals(): # globals except hidden ones ("_"), modules and functions$/;"	f
_header	nanopores/py4gmsh/basic.py	/^def _header():$/;"	f
_import_synonymes	nanopores/tools/geometry.py	/^    def _import_synonymes(self,syns):$/;"	m	class:Geometry
_inferno_data	scripts/howorka/colormaps.py	/^_inferno_data = [[0.001462, 0.000466, 0.013866],$/;"	v
_invert_dict	nanopores/tools/geometry.py	/^def _invert_dict(d):$/;"	f
_invert_dict_nonunique	nanopores/tools/geometry.py	/^def _invert_dict_nonunique(dom):$/;"	f
_join	nanopores/tools/balls.py	/^    def _join(self, other):$/;"	m	class:BallCollection
_load	nanopores/tools/fields.py	/^def _load(FILE):$/;"	f
_load_global	nanopores/tools/fields.py	/^def _load_global(FILE):$/;"	f
_magma_data	scripts/howorka/colormaps.py	/^_magma_data = [[0.001462, 0.000466, 0.013866],$/;"	v
_map	nanopores/tools/box.py	/^def _map(f, seq):$/;"	f
_merge	nanopores/tools/fields.py	/^def _merge(a, b):$/;"	f
_neumann_lookup	nanopores/tools/geometry.py	/^    def _neumann_lookup(self, bou2phys, value):$/;"	m	class:Geometry
_notempty	nanopores/tools/geometry.py	/^    def _notempty(self, tup):$/;"	m	class:Geometry
_open	nanopores/tools/utilities.py	/^def _open(name, folder, mode):$/;"	f
_orientations	nanopores/tools/box.py	/^def _orientations(k): # facet orientations$/;"	f
_pass	nanopores/tools/pdesystem.py	/^_pass = lambda *args, **kwargs : None$/;"	v
_plasma_data	scripts/howorka/colormaps.py	/^_plasma_data = [[0.050383, 0.029803, 0.527975],$/;"	v
_pwconst_lookup	nanopores/tools/geometry.py	/^    def _pwconst_lookup(self, dom2phys, value):$/;"	m	class:Geometry
_save	nanopores/tools/fields.py	/^def _save(data, FILE):$/;"	f
_save_global	nanopores/tools/fields.py	/^def _save_global(data, FILE):$/;"	f
_sort	nanopores/tools/box.py	/^def _sort(a, b):$/;"	f
_unique	nanopores/tools/box.py	/^def _unique(seq):$/;"	f
_unique_id	nanopores/tools/fields.py	/^def _unique_id():$/;"	f
_update	nanopores/scripts/ahemFPT.py	/^def _update(dic, dic2): # conservative update$/;"	f
_update	nanopores/scripts/ahemIV.py	/^def _update(dic, dic2): # conservative update$/;"	f
_update_list	nanopores/tools/fields.py	/^    def _update_list(self):$/;"	m	class:Header
_viridis_data	scripts/howorka/colormaps.py	/^_viridis_data = [[0.267004, 0.004874, 0.329415],$/;"	v
_wrapf	nanopores/tools/geometry.py	/^def _wrapf(f):$/;"	f
_write	nanopores/tools/fields.py	/^    def _write(self):$/;"	m	class:Header
a	scripts/random_walk_aHem/hbond.py	/^a=np.array([[2.15,0.55],$/;"	v
a	scripts/random_walk_aHem/plot_aHem.py	/^a=np.load('hbond.npy')$/;"	v
a	scripts/random_walk_aHem/plot_path.py	/^a=np.load('hbond.npy')$/;"	v
abserror	nanopores/tools/illposed.py	/^    def abserror(self):		$/;"	m	class:Functional
absolute_tolerance	nanopores/physics/pb.py	/^            absolute_tolerance = 1e-10,$/;"	v	class:NonstandardPBProblem
absolute_tolerance	nanopores/physics/pb.py	/^            absolute_tolerance = 1e-7,$/;"	v	class:LinearNonstandardPBProblem
absolute_tolerance	nanopores/physics/pnps.py	/^            absolute_tolerance = PNPS.tolnewton*1e-3,$/;"	v	class:StokesProblem
absolute_tolerance	nanopores/physics/simplepnps.py	/^        absolute_tolerance = 1e-12,$/;"	v	class:SimpleLinearPBProblem
absolute_tolerance	nanopores/tools/solvermethods.py	/^        absolute_tolerance = 1e-5,$/;"	v
absolute_tolerance	scripts/numerics/adap3D.py	/^    absolute_tolerance = 1e-10,$/;"	v
absolute_tolerance	scripts/numerics/adap3Dref.py	/^    absolute_tolerance = 1e-5,$/;"	v
adapt	nanopores/tools/geometry.py	/^    def adapt(self, *args, **kwargs):$/;"	m	class:PhysicalBC
adapt	nanopores/tools/geometry.py	/^    def adapt(self,mesh):$/;"	m	class:Geometry
adapt	nanopores/tools/illposed.py	/^    def adapt(self, mesh):$/;"	m	class:AdaptableNonlinearProblem
adapt	nanopores/tools/illposed.py	/^    def adapt(self,mesh):$/;"	m	class:AdaptableLinearProblem
adapt	nanopores/tools/illposed.py	/^    def adapt(self,mesh):$/;"	m	class:Functional
adapt	nanopores/tools/illposed.py	/^    def adapt(self,mesh):$/;"	m	class:IllposedLinearSolver
adapt	nanopores/tools/illposed.py	/^    def adapt(self,mesh):$/;"	m	class:IllposedNonlinearSolver
adapt	nanopores/tools/illposed.py	/^    def adapt(self,mesh,V=None,boundaries=None):$/;"	m	class:AdaptableBC
adapt	nanopores/tools/pdesystem.py	/^    def adapt(self, mesh):$/;"	m	class:PDESystem
adaptMqv	nanopores/physics/howorka.py	/^adaptMqv = True$/;"	v
adaptMqv	nanopores/physics/pore_molecule.py	/^adaptMqv = True$/;"	v
adaptMqv	scripts/numerics/adap2D.py	/^adaptMqv = True,$/;"	v
adaptMqv	scripts/numerics/adap2Dpb.py	/^adaptMqv = adaptq,$/;"	v
adaptMqv	scripts/numerics/adap3D.py	/^adaptMqv = adaptq,$/;"	v
adaptMqv	scripts/numerics/adap3Dpb.py	/^adaptMqv = adaptq,$/;"	v
adaptMqv	scripts/numerics/adap3Dref.py	/^adaptMqv = adaptq,$/;"	v
adaptargument	nanopores/tools/illposed.py	/^def adaptargument(argument,mesh):$/;"	f
adaptcoefficient	nanopores/tools/illposed.py	/^def adaptcoefficient(coeff,mesh): #MOD$/;"	f
adaptform	nanopores/tools/illposed.py	/^def adaptform(form,mesh,adapt_coefficients=False):$/;"	f
adaptform_evil	nanopores/tools/illposed.py	/^def adaptform_evil(form,mesh): # doesn't work at all. why?$/;"	f
adaptfunction	nanopores/tools/illposed.py	/^def adaptfunction(function,mesh,interpolate=True,assign=False):$/;"	f
adaptive_loop	nanopores/physics/simplepnps.py	/^    def adaptive_loop(self, Nmax=1e4, frac=0.2, verbose=True):$/;"	m	class:SimpleLinearPBGO
adaptive_pb	nanopores/models/mysolve.py	/^def adaptive_pb(geo, phys, cyl=False, frac=0.5, Nmax=1e4, Fpbref=None,$/;"	f
adaptive_pb	scripts/numerics/mysolve.py	/^def adaptive_pb(geo, phys, cyl=False, frac=0.5, Nmax=1e4, Fpbref=None,$/;"	f
adaptive_pbpnps	nanopores/models/mysolve.py	/^def adaptive_pbpnps(geo, phys, cyl=False, frac=0.5, Nmax=1e4, mesh2D=None, cheapest=False,$/;"	f
adaptive_pbpnps	scripts/numerics/mysolve.py	/^def adaptive_pbpnps(geo, phys, cyl=False, frac=0.5, Nmax=1e4, mesh2D=None, cheapest=False,$/;"	f
adaptmeshfunction	nanopores/tools/illposed.py	/^def adaptmeshfunction(meshfunction,mesh):$/;"	f
adaptq	scripts/numerics/adap2Dpb.py	/^adaptq = True,$/;"	v
adaptq	scripts/numerics/adap3D.py	/^adaptq = True,$/;"	v
adaptq	scripts/numerics/adap3Dpb.py	/^adaptq = True,$/;"	v
adaptq	scripts/numerics/adap3Dref.py	/^adaptq = True,$/;"	v
adaptspace	nanopores/tools/illposed.py	/^def adaptspace(space,mesh):$/;"	f
addRHS	nanopores/tools/illposed.py	/^    def addRHS(self, L):$/;"	m	class:AdaptableLinearProblem
add_ball	nanopores/py4gmsh/extra.py	/^def add_ball(x0, radius, lcar,$/;"	f
add_ball	nanopores/tools/balls.py	/^def add_ball(m, r, lc):$/;"	f
add_box	nanopores/py4gmsh/extra.py	/^def add_box(x0, x1, y0, y1, z0, z1,$/;"	f
add_bulkfluid	scripts/howorka/largepore_dna.py	/^add_bulkfluid = substract_dna - closed_membrane$/;"	v
add_circle	nanopores/py4gmsh/extra.py	/^def add_circle(radius, lcar,$/;"	f
add_circle	nanopores/tools/balls.py	/^def add_circle(m, r, lc):$/;"	f
add_dim	nanopores/tools/axisym.py	/^def add_dim(box, d):$/;"	f
add_dopants	nanopores/physics/finfet.py	/^def add_dopants(geo, dopants):$/;"	f
add_functionals	nanopores/tools/pdesystem.py	/^    def add_functionals(self, functionals):$/;"	m	class:PDESystem
add_params	nanopores/tools/utilities.py	/^def add_params(PARENT=None, **params):$/;"	f
add_pipe	nanopores/py4gmsh/extra.py	/^def add_pipe(outer_radius, inner_radius, length,$/;"	f
add_pipe2	nanopores/py4gmsh/extra.py	/^def add_pipe2(outer_radius, inner_radius, length,$/;"	f
add_polygon	nanopores/py4gmsh/extra.py	/^def add_polygon(X, lcar):$/;"	f
add_rectangle	nanopores/py4gmsh/extra.py	/^def add_rectangle(xmin, xmax, ymin, ymax, z, lcar):$/;"	f
add_subdomain	nanopores/tools/geometry.py	/^    def add_subdomain(self, string, marker):$/;"	m	class:Geometry
add_torus	nanopores/py4gmsh/extra.py	/^def add_torus(irad, orad,$/;"	f
add_torus2	nanopores/py4gmsh/extra.py	/^def add_torus2(irad, orad,$/;"	f
addball	nanopores/tools/balls.py	/^    def addball(self, ball, subname="ball", boundaryname="ballb"):$/;"	m	class:BallCollection
addballs	nanopores/tools/balls.py	/^    def addballs(self, balls, subname="ball", boundaryname="ballb"):$/;"	m	class:BallCollection
addboundaries	nanopores/tools/box.py	/^    def addboundaries(self, **boundaries):$/;"	m	class:BoxCollection
addboundary	nanopores/tools/balls.py	/^    def addboundary(self, sub, name):$/;"	m	class:BallCollection
addboundary	nanopores/tools/box.py	/^    def addboundary(self, sub, name):$/;"	m	class:BoxCollection
adddict	scripts/test2DP.py	/^adddict = dict($/;"	v
addsubdomain	nanopores/tools/balls.py	/^    def addsubdomain(self, sub, name):$/;"	m	class:BallCollection
addsubdomain	nanopores/tools/box.py	/^    def addsubdomain(self, sub, name):$/;"	m	class:BoxCollection
addsubdomains	nanopores/tools/box.py	/^    def addsubdomains(self, **subdomains):$/;"	m	class:BoxCollection
affine	nanopores/geometries/finfet.py	/^    def affine(X, box, R):$/;"	f	function:dopants
ahemb	nanopores/physics/pore.py	/^    ahemb = "ahemqs",$/;"	v
ahemqs	nanopores/physics/howorka.py	/^ahemqs = 0.$/;"	v
ahemqs	nanopores/physics/pore.py	/^ahemqs = 0.$/;"	v
ahemqs	nanopores/physics/pore_molecule.py	/^ahemqs = 0.$/;"	v
ahemqs	nanopores/scripts/ahemFPT.py	/^ahemqs = 0.0 # [C\/m**2]$/;"	v
ahemqs	nanopores/scripts/ahemIV.py	/^ahemqs = 0.0 # [C\/m**2]$/;"	v
ahemqs	nanopores/scripts/test_survival.py	/^    ahemqs = 0.01,$/;"	v
ahemqs	scripts/plot_scripts/IV_ahem.py	/^    ahemqs = list(numpy.linspace(0.0, -0.08, 3)),$/;"	v
ahemqs	scripts/plot_scripts/parameter_script.py	/^ahemqs = 0.01,$/;"	v
ahemqs	scripts/survival.py	/^    ahemqs = 0.01,$/;"	v
ahemqs	scripts/test_ahem.py	/^    ahemqs = 0.02,$/;"	v
allb	scripts/test_features/box.py	/^    allb = (square - lshape).boundary(),$/;"	v
allcomb	scripts/finfet/collocation_methods/allcomb.m	/^function A = allcomb(varargin)$/;"	f
alpha	scripts/numerics/force_profiles.py	/^    def alpha(z):$/;"	f	function:construct_alpha
alpha	scripts/pughpore/sobol_points.py	/^    alpha=.1$/;"	v
alwaysstokes	nanopores/physics/pnps.py	/^    alwaysstokes = False$/;"	v	class:PNPS
angle	nanopores/geometries/W_2D_geo/params_geo.py	/^angle = 40$/;"	v
angle	nanopores/geometries/W_3D_geo/params_geo.py	/^angle = 40$/;"	v
antider	scripts/plot_scripts/PMFplots.py	/^def antider(F, step):$/;"	f
aparams	scripts/plot_scripts/script2DWelectrodes.py	/^    aparams = defparams.copy()  # actual params for calculation$/;"	v
aparams1	scripts/plot_scripts/script2DWelectrodes.py	/^aparams1 = {"name":geo_name, "membraneblayer":False,$/;"	v
apply	nanopores/tools/geometry.py	/^    def apply(self, *args, **kwargs):$/;"	m	class:PhysicalBC
applylowerqs	nanopores/physics/howorka.py	/^applylowerqs = False$/;"	v
applylowerqs	nanopores/physics/pore_molecule.py	/^applylowerqs = False$/;"	v
areC	scripts/test_features/curved.py	/^areC = R**2*pi$/;"	v
areCh	scripts/test_features/curved.py	/^    areCh = assemble(Constant(1.)*geo.dS("cross"))$/;"	v
areCh	scripts/test_features/curved.py	/^areCh = assemble(Constant(1.)*geo.dS("cross"))$/;"	v
area	scripts/fluorophore_in_top_reservoir.py	/^area = assemble(Expression("x[0]*2*pi")("+")*geo.dS("centerline"))    $/;"	v
args	scripts/plot_scripts/IV_ahem.py	/^args = dict($/;"	v
argument	scripts/plot_forces_How/plot_drag.py	/^def argument(x,y,z):$/;"	f
argument	scripts/plot_forces_How/plot_el.py	/^def argument(x,y,z):$/;"	f
argument	scripts/plot_forces_aHem/combine.py	/^def argument(x,y,z):$/;"	f
argument	scripts/plot_forces_aHem/combine2.py	/^def argument(x,y,z):$/;"	f
argument	scripts/plot_forces_aHem/plot_drag.py	/^def argument(x,y,z):$/;"	f
argument	scripts/plot_forces_aHem/plot_el.py	/^def argument(x,y,z):$/;"	f
argument	scripts/plot_forces_aHem/ppt.py	/^def argument(x,y,z):$/;"	f
argument	scripts/random_walk_aHem/run.py	/^def argument(x,y,z):$/;"	f
array	scripts/pughpore/sobol_points.py	/^array=[[X[i],Y[i],Z[i]] for i in range(X.shape[0])]$/;"	v
assemble_A	nanopores/tools/illposed.py	/^    def assemble_A(self):$/;"	m	class:IllposedLinearSolver
assemble_scalar	nanopores/tools/illposed.py	/^def assemble_scalar(form):$/;"	f
avg	nanopores/scripts/ahemFPT.py	/^    def avg(u, dx):$/;"	f	function:calculate
avg	nanopores/scripts/test_survival.py	/^def avg(u, meas):$/;"	f
avg	nanopores/tools/geometry.py	/^    def avg(self, u, string, dx="dx"):$/;"	m	class:Geometry
avg	scripts/howorka/plot_selectivity.py	/^def avg(J):$/;"	f
avg	scripts/howorka/plot_selectivity_old.py	/^def avg(J):$/;"	f
avg	scripts/howorka/selectivity.py	/^    def avg(J):$/;"	f
avg	scripts/numerics/selectivity1D.py	/^    def avg(J):$/;"	f	function:gather_currents
avg	scripts/survival.py	/^def avg(u, meas):$/;"	f
avg	scripts/test_ahem.py	/^def avg(u, meas):$/;"	f
avgdS	scripts/survival.py	/^avgdS = lambda domain: Functional(p\/assemble(Constant(1.0)*geo.dS(domain))*geo.dS(domain))$/;"	v
avgdx	scripts/survival.py	/^avgdx = lambda domain: Functional(p\/assemble(Constant(1.0)*geo.dx(domain))*geo.dx(domain))$/;"	v
ax	scripts/howorka/ivcurve.py	/^ax = plots["J"]$/;"	v
ax	scripts/numerics/plot_adaptivity_results.py	/^    ax = plt.gca()$/;"	v
ax	scripts/numerics/plot_anaPNPS_refinement.py	/^ax = plt.gca()$/;"	v
ax	scripts/numerics/plot_robustness.py	/^ax = plt.subplot(111)$/;"	v
ax	scripts/plot_forces_How/plot_drag.py	/^ax=plt.axes()$/;"	v
ax	scripts/plot_forces_How/plot_el.py	/^ax=plt.axes()$/;"	v
ax	scripts/plot_forces_aHem/plot_drag.py	/^ax=plt.axes()$/;"	v
ax	scripts/plot_forces_aHem/plot_el.py	/^ax=plt.axes()$/;"	v
ax	scripts/pughpore/sobol_points.py	/^    ax = fig.gca(projection='3d')$/;"	v
ax	scripts/pughpore/sobol_points.py	/^    ax=plt.gca()$/;"	v
ax	scripts/random_walk_aHem/varplots.py	/^ax=plt.gca()$/;"	v
ax0	scripts/plot_forces_aHem/combine.py	/^ax0=plt.subplot(gs[0])$/;"	v
ax0	scripts/plot_forces_aHem/combine2.py	/^ax0=plt.subplot(gs[0])$/;"	v
ax1	scripts/plot_forces_aHem/combine.py	/^ax1=plt.subplot(gs[1])$/;"	v
ax1	scripts/plot_forces_aHem/combine2.py	/^ax1=plt.subplot(gs[1])$/;"	v
axes	scripts/plot_forces_How/plot_drag.py	/^axes=plt.gca()$/;"	v
axes	scripts/plot_forces_How/plot_el.py	/^axes=plt.gca()$/;"	v
axes	scripts/plot_forces_aHem/combine.py	/^axes=plt.gca()$/;"	v
axes	scripts/plot_forces_aHem/combine2.py	/^axes=plt.gca()$/;"	v
axes	scripts/plot_forces_aHem/plot_drag.py	/^axes=plt.gca()$/;"	v
axes	scripts/plot_forces_aHem/plot_el.py	/^axes=plt.gca()$/;"	v
axes	scripts/plot_forces_aHem/ppt.py	/^axes=plt.gca()$/;"	v
axlabels	scripts/numerics/anaPNPS_refinement.py	/^            axlabels=("z [nm]", "concentration [mol\/m**3]"))$/;"	v
bV	nanopores/models/Howorka.py	/^bV = -0.1,$/;"	v
bV	nanopores/models/Howorka.py	/^bV = bV,$/;"	v
bV	nanopores/models/HoworkaSimple.py	/^bV = -0.1,$/;"	v
bV	nanopores/models/HoworkaSimple.py	/^bV = bV,$/;"	v
bV	nanopores/models/pughpore.py	/^    bV = -0.1,$/;"	v
bV	nanopores/physics/finfet.py	/^bV = dict($/;"	v
bV	nanopores/physics/howorka.py	/^bV = lambda: -bV0*Qmol\/qq if couplebVtoQmol else None$/;"	v
bV	nanopores/physics/pore.py	/^bV = None # voltage bias across pore [V] (None for no enforced bias)$/;"	v
bV	nanopores/physics/pore_dna.py	/^bV = 0.1 # voltage bias across pore [V] (None for no enforced bias)$/;"	v
bV	nanopores/physics/pore_molecule.py	/^bV = lambda: -bV0*Qmol\/qq if couplebVtoQmol else None$/;"	v
bV	nanopores/scripts/ahemFPT.py	/^bV = .5 # [V]$/;"	v
bV	nanopores/scripts/ahemIV.py	/^bV = .5 # [V]$/;"	v
bV	nanopores/scripts/test_survival.py	/^    bV = .1,$/;"	v
bV	scripts/analytical_test_case.py	/^bV = -0.5 # [V]$/;"	v
bV	scripts/debug.py	/^bV = 0.01,$/;"	v
bV	scripts/fluorophore_in_top_reservoir.py	/^    bV = None)$/;"	v
bV	scripts/howorka/forcefield.py	/^    bV = 0.,$/;"	v
bV	scripts/howorka/forcefield2D.py	/^    bV = 0.,$/;"	v
bV	scripts/howorka/forcefield3D.py	/^    bV = 0.,$/;"	v
bV	scripts/howorka/ivcurve.py	/^    bV = numpy.linspace(-0.1,0.1,11),$/;"	v
bV	scripts/howorka/largepore.py	/^    bV = "lowerb",$/;"	v
bV	scripts/howorka/largepore_dna.py	/^    bV = "lowerb",$/;"	v
bV	scripts/numerics/Howorka.py	/^bV = -0.1,$/;"	v
bV	scripts/numerics/Howorka.py	/^bV = bV,$/;"	v
bV	scripts/numerics/HoworkaSimple.py	/^bV = -0.1,$/;"	v
bV	scripts/numerics/HoworkaSimple.py	/^bV = bV,$/;"	v
bV	scripts/numerics/adap2D.py	/^bV = -0.1,$/;"	v
bV	scripts/numerics/adap2D.py	/^bV = bV,$/;"	v
bV	scripts/numerics/adap2Dpb.py	/^bV = -0.1,$/;"	v
bV	scripts/numerics/adap2Dpb.py	/^bV = bV,$/;"	v
bV	scripts/numerics/adap2Dref.py	/^bV = -0.1,$/;"	v
bV	scripts/numerics/adap3D.py	/^bV = -0.1,$/;"	v
bV	scripts/numerics/adap3D.py	/^bV = bV,$/;"	v
bV	scripts/numerics/adap3Dpb.py	/^bV = -0.1,$/;"	v
bV	scripts/numerics/adap3Dpb.py	/^bV = bV,$/;"	v
bV	scripts/numerics/adap3Dref.py	/^bV = -0.1,$/;"	v
bV	scripts/numerics/adap3Dref.py	/^bV = bV,$/;"	v
bV	scripts/numerics/anaPNPS_refinement.py	/^bV = -0.1, # [V]$/;"	v
bV	scripts/numerics/anaPNPS_refinement_2D.py	/^bV = -0.1, # [V]$/;"	v
bV	scripts/numerics/anaPNPS_uniform.py	/^bV = -0.1, # [V]$/;"	v
bV	scripts/numerics/analyticalPNPS.py	/^bV = -0.1, # [V]$/;"	v
bV	scripts/numerics/analyticalPNPS_2D.py	/^bV = -0.1, # [V]$/;"	v
bV	scripts/numerics/analyticalPNPS_3D.py	/^bV = -0.1, # [V]$/;"	v
bV	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^bV = -0.05 # [V]$/;"	v
bV	scripts/numerics/analyticalPNP_3D.py	/^bV = -0.1, # [V]$/;"	v
bV	scripts/numerics/hybrid_vs_newton.py	/^bV = -0.1, # [V]$/;"	v
bV	scripts/numerics/hybrid_vs_newton.py	/^bV = bV,$/;"	v
bV	scripts/numerics/test_bVscheme.py	/^bV = -.2,$/;"	v
bV	scripts/numerics/test_fixedpoint.py	/^bV = -0.05, # [V]$/;"	v
bV	scripts/numerics/test_fixedpoint.py	/^bV = bV,$/;"	v
bV	scripts/numerics/test_fixedpoint_1D.py	/^bV = -0.1, # [V]$/;"	v
bV	scripts/plot_forces_How/calculateforce.py	/^bV = -0.1,$/;"	v
bV	scripts/plot_scripts/IV_ahem.py	/^    bV = list(bV),$/;"	v
bV	scripts/plot_scripts/IV_ahem.py	/^bV = bmV*1e-3$/;"	v
bV	scripts/plot_scripts/IV_curve_2D.py	/^    bV = bVmV*1e-3$/;"	v
bV	scripts/plot_scripts/PMF_Profile_2D.py	/^bV = -0.0,$/;"	v
bV	scripts/plot_scripts/parameter_script.py	/^bV = .5,$/;"	v
bV	scripts/plot_scripts/script2DW.py	/^    bV = bVmV*1e-3$/;"	v
bV	scripts/pughpore/test_1Dpugh.py	/^    bV = -1.,$/;"	v
bV	scripts/pughpore/test_pugh.py	/^    bV = -0.1,$/;"	v
bV	scripts/survival.py	/^    bV = .5,$/;"	v
bV	scripts/test2D.py	/^bV = -0.1,$/;"	v
bV	scripts/test3D_GOA.py	/^bV = 0.01,$/;"	v
bV	scripts/test_SimplePNPS.py	/^bV = -.1,$/;"	v
bV	scripts/test_ahem.py	/^    bV = .5,$/;"	v
bV	scripts/test_features/howorka3D.py	/^bV = -0.0,$/;"	v
bV	scripts/toy_models/pnp1D.py	/^    bV = -.1,$/;"	v
bV0	nanopores/physics/howorka.py	/^bV0 = None # voltage bias across pore [V] (None for no enforced bias)$/;"	v
bV0	nanopores/physics/pore_molecule.py	/^bV0 = None # voltage bias across pore [V] (None for no enforced bias)$/;"	v
bV0	nanopores/scripts/calculate_forces.py	/^bV0 = 0.01$/;"	v
bV0	nanopores/scripts/calculate_forces.py	/^bV0 = bV0,$/;"	v
bV0	scripts/numerics/adap2Dref.py	/^bV0 = 0.01,$/;"	v
bV0	scripts/test2D.py	/^bV0 = 0.01,$/;"	v
bV0	scripts/test2Dold.py	/^bV0 = 0.01,$/;"	v
bVs	scripts/numerics/linear-robust.py	/^bVs = [ -.01, -.02, -.05, -.1, -.2, -.5, -1., -2.]$/;"	v
bVs	scripts/numerics/plot_robustness.py	/^bVs = [.01, .02, .05, .1, .2, .5, 1., 2.]$/;"	v
bVsim	scripts/plot_scripts/IV_ahem.py	/^    bVsim = args["bV"]$/;"	v
bVstep	scripts/numerics/linear-robust.py	/^bVstep = 0.025,$/;"	v
bVstep	scripts/numerics/test_bVscheme.py	/^bVstep = 0.025,$/;"	v
back	nanopores/tools/box.py	/^    back = 3,$/;"	v
badexit	nanopores/scripts/ahemFPT.py	/^badexit = {"upperbulkb"}$/;"	v
badexit	nanopores/scripts/ahemIV.py	/^badexit = {"upperbulkb"}$/;"	v
badexit	scripts/survival.py	/^badexit = set() #{"upperbulkb"}$/;"	v
balls	nanopores/tools/balls.py	/^    balls = [Ball((-0.5, -0.5), 0.4), Ball((0.5, 0.5), 0.4)]$/;"	v
bbPath	scripts/plot_forces_How/plot_drag.py	/^bbPath=mplPath.Path(X_How_2d)$/;"	v
bbPath	scripts/plot_forces_How/plot_el.py	/^bbPath=mplPath.Path(X_How_2d)$/;"	v
bbPath	scripts/plot_forces_aHem/combine.py	/^bbPath=mplPath.Path(X_aHem_2d)$/;"	v
bbPath	scripts/plot_forces_aHem/combine2.py	/^bbPath=mplPath.Path(X_aHem_2d)$/;"	v
bbPath	scripts/plot_forces_aHem/plot_drag.py	/^bbPath=mplPath.Path(X_aHem_2d)$/;"	v
bbPath	scripts/plot_forces_aHem/plot_el.py	/^bbPath=mplPath.Path(X_aHem_2d)$/;"	v
bbPath	scripts/plot_forces_aHem/ppt.py	/^bbPath=mplPath.Path(X_aHem_2d)$/;"	v
bbPath	scripts/random_walk_aHem/run.py	/^bbPath=mplPath.Path(hbond) #bigger aHem pore for H-Bond$/;"	v
bcast	nanopores/tools/mpipool.py	/^    def bcast(self, *args, **kwargs):$/;"	m	class:MPIPool
bcs	nanopores/physics/convdiff.py	/^    def bcs(V, geo, bc={}, steady=False):$/;"	m	class:ConvectionDiffusionProblem
bcs	nanopores/physics/exittime.py	/^    def bcs(V, geo, exit={"exit"}):$/;"	m	class:ExitTimeProblem
bcs	nanopores/physics/exittime.py	/^    def bcs(V, geo, goodexit=set(), badexit={"exit"}):$/;"	m	class:SurvivalProblem
bcs	nanopores/physics/pb.py	/^    def bcs(V, geo):$/;"	m	class:LinearNonstandardPBProblem
bcs	nanopores/physics/pb.py	/^    def bcs(V, geo):$/;"	m	class:NonstandardPBProblem
bcs	nanopores/physics/pnps2Dnewton.py	/^    def bcs(V, geo, phys):$/;"	m	class:SimplePNPSProblem
bcs	nanopores/physics/simplepnps.py	/^    def bcs(V, geo):$/;"	m	class:SimpleStokesProblem
bcs	nanopores/physics/simplepnps.py	/^    def bcs(V, geo, phys):$/;"	m	class:LinearSGPoissonProblem
bcs	nanopores/physics/simplepnps.py	/^    def bcs(V, geo, phys):$/;"	m	class:SGPoissonProblem
bcs	nanopores/physics/simplepnps.py	/^    def bcs(V, geo, phys):$/;"	m	class:SimpleLinearPBProblem
bcs	nanopores/physics/simplepnps.py	/^    def bcs(V, geo, phys):$/;"	m	class:SimpleNernstPlanckProblem
bcs	nanopores/physics/simplepnps.py	/^    def bcs(V, geo, phys):$/;"	m	class:SimplePBProblem
bcs	nanopores/physics/simplepnps.py	/^    def bcs(V, geo, phys):$/;"	m	class:SimplePNPProblem
bcs	nanopores/physics/simplepnps.py	/^    def bcs(V, geo, phys):$/;"	m	class:SimplePoissonProblem
bcs	scripts/analytical_test_case.py	/^bcs = bcs + geo2D.pwconstBC(V.sub(1), "cp0")$/;"	v
bcs	scripts/analytical_test_case.py	/^bcs = bcs + geo2D.pwconstBC(V.sub(2), "cm0")$/;"	v
bcs	scripts/analytical_test_case.py	/^bcs = geo2D.pwBC(V.sub(0), "v0")$/;"	v
bcs	scripts/numerics/diffusion_with_force_profile.py	/^    def bcs(V, geo, c0):$/;"	m	class:DiffusionProblem1D
bcs	scripts/pughpore/diffusion.py	/^bcs = [geo.BC(W.sub(0), dolfin.Constant((0.,0.,0.)), "dnab"),$/;"	v
bdry	nanopores/tools/box.py	/^    def bdry(self):$/;"	m	class:BoxCollection
beta	nanopores/physics/pnps.py	/^    beta = 0.01$/;"	v	class:StokesProblemEqualOrder
beta	nanopores/physics/pnps2D.py	/^    beta = 0.1$/;"	v	class:StokesProblemAxisymEqualOrder
beta	scripts/finfet/finfet.py	/^beta = 1.\/phys.UT$/;"	v
beta	scripts/numerics/hybrid_vs_newton.py	/^    beta = .0$/;"	v
beta	scripts/numerics/hybrid_vs_newton.py	/^    beta = .01$/;"	v
beta	scripts/numerics/test_fixedpoint.py	/^    beta = .0$/;"	v
beta	scripts/numerics/test_fixedpoint.py	/^    beta = .01$/;"	v
beta	scripts/random_walk_aHem/run.py	/^beta=1000$/;"	v
bforce	scripts/howorka/selectivity.py	/^    bforce = True,$/;"	v
bforce	scripts/howorka/selectivity.py	/^    bforce = p.bforce,$/;"	v
bicgstab	nanopores/tools/solvermethods.py	/^bicgstab = dict($/;"	v
binary_vector_next	scripts/finfet/collocation_methods/binary_vector_next.m	/^function bvec = binary_vector_next ( n, bvec )$/;"	f
bind_prob	nanopores/physics/pore_mol.py	/^bind_prob = 0.1$/;"	v
bind_time	nanopores/physics/pore_mol.py	/^bind_time = .04e6 # binding duration [ns]$/;"	v
bmV	scripts/plot_scripts/IV_ahem.py	/^bmV = numpy.linspace(-100.0, 100.0, 8)$/;"	v
bottom	nanopores/tools/box.py	/^    bottom = 2,$/;"	v
bottom	nanopores/tools/box.py	/^    bottom = 4,$/;"	v
bottom	scripts/numerics/force_profiles.py	/^                     bottom = domain.boundary("left"))$/;"	v
boundaries	scripts/fluorophore_in_top_reservoir.py	/^    boundaries = boundaries,$/;"	v
boundaries	scripts/fluorophore_in_top_reservoir.py	/^boundaries = FacetFunction("size_t", mesh, 0)$/;"	v
boundaries	scripts/simplegeo.py	/^boundaries = FacetFunction("size_t",mesh,0)$/;"	v
boundaries	scripts/test_features/circle.py	/^boundaries = FacetFunction("size_t", submesh, 0)$/;"	v
boundaries_list	nanopores/geometries/Cyl2D/subdomains.py	/^def boundaries_list(**params):$/;"	f
boundaries_list	nanopores/geometries/H_cyl_geo/subdomains.py	/^def boundaries_list(**params):$/;"	f
boundaries_list	nanopores/geometries/H_geo/subdomains.py	/^def boundaries_list(**params):$/;"	f
boundaries_list	nanopores/geometries/Nanowire/subdomains.py	/^def boundaries_list(**params):$/;"	f
boundaries_list	nanopores/geometries/P_geo/subdomains.py	/^def boundaries_list(**params):$/;"	f
boundaries_list	nanopores/geometries/W_2D_geo/subdomains.py	/^def boundaries_list(**params):$/;"	f
boundaries_list	nanopores/geometries/W_3D_geo/subdomains.py	/^def boundaries_list(**params):$/;"	f
boundaries_list	nanopores/geometries/aHem/subdomains.py	/^def boundaries_list(**params):$/;"	f
boundary	nanopores/tools/box.py	/^    def boundary(self):$/;"	m	class:BoxCollection
boundary	nanopores/tools/box.py	/^    def boundary(self, *strings):$/;"	m	class:Box
boundary	scripts/test_features/circle.py	/^    boundary = domain.boundary(),$/;"	v
boundary_force	scripts/howorka/eikonal.py	/^def boundary_force(mesh=None, rMolecule=0.5, **params):$/;"	f
boxfields	nanopores/geometries/H_geo/params_geo.py	/^boxfields = True$/;"	v
boxfields	nanopores/geometries/H_geo/params_geo_old.py	/^boxfields = True$/;"	v
boxfields	nanopores/geometries/W_2D_geo/params_geo.py	/^boxfields = None$/;"	v
boxfields	nanopores/scripts/calculate_forces.py	/^boxfields = True,$/;"	v
boxfields	scripts/numerics/hybrid_vs_newton.py	/^boxfields = True,$/;"	v
boxfields	scripts/numerics/test_fixedpoint.py	/^boxfields = True,$/;"	v
boxfields	scripts/test2Dold.py	/^boxfields = True,$/;"	v
boxfields	scripts/test_SimplePNPS.py	/^boxfields = True,$/;"	v
bpq	nanopores/physics/params_physical.py	/^bpq = -2*qq  #charge per base pair -keyser.pdf$/;"	v
bpq	scripts/misc/chargeDNA.py	/^bpq = -2.*q  # DNA charge per base pair$/;"	v
bulk	scripts/numerics/anaPNPS_refinement.py	/^    bulk = {"upperb", "lowerb"},$/;"	v
bulk	scripts/numerics/anaPNPS_refinement_2D.py	/^    bulk = {"upperb", "lowerb"},$/;"	v
bulk	scripts/numerics/anaPNPS_uniform.py	/^    bulk = {"upperb", "lowerb"},$/;"	v
bulk	scripts/numerics/analyticalPNPS.py	/^    bulk = {"upperb", "lowerb"},$/;"	v
bulk	scripts/numerics/analyticalPNPS_2D.py	/^    bulk = {"upperb", "lowerb"},$/;"	v
bulk	scripts/numerics/analyticalPNPS_3D.py	/^    bulk = {"upperb", "lowerb"},$/;"	v
bulk	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    bulk = {"upperb", "lowerb"},$/;"	v
bulk	scripts/numerics/analyticalPNP_3D.py	/^    bulk = {"upperb", "lowerb"},$/;"	v
bulkcon	nanopores/models/Howorka.py	/^bulkcon = 3e2,$/;"	v
bulkcon	nanopores/models/Howorka.py	/^bulkcon = bulkcon,$/;"	v
bulkcon	nanopores/models/HoworkaSimple.py	/^bulkcon = 3e2,$/;"	v
bulkcon	nanopores/models/pughpore.py	/^    bulkcon = 1000.,$/;"	v
bulkcon	nanopores/physics/electrolyte.py	/^bulkcon = 300. # bulk concentration of ions [mol\/m**3]$/;"	v
bulkcon	nanopores/physics/howorka.py	/^bulkcon = 300. # bulk concentration of ions [mol\/m**3]$/;"	v
bulkcon	nanopores/physics/pore_dna.py	/^bulkcon = 1e3 # bulk concentration of ions [mol\/m**3]$/;"	v
bulkcon	nanopores/physics/pore_molecule.py	/^bulkcon = 300. # bulk concentration of ions [mol\/m**3]$/;"	v
bulkcon	nanopores/scripts/ahemFPT.py	/^bulkcon = 1000$/;"	v
bulkcon	nanopores/scripts/ahemIV.py	/^bulkcon = 1000$/;"	v
bulkcon	nanopores/scripts/calculate_forces.py	/^bulkcon = 3e2,$/;"	v
bulkcon	scripts/analytical_test_case.py	/^    bulkcon = 300,$/;"	v
bulkcon	scripts/fluorophore_in_top_reservoir.py	/^bulkcon = 10*uM # bulk concentration [mM] [mol\/m**3]$/;"	v
bulkcon	scripts/howorka/forcefield2D.py	/^    bulkcon = 3e2,$/;"	v
bulkcon	scripts/howorka/forcefield3D.py	/^    bulkcon = 3e2,$/;"	v
bulkcon	scripts/howorka/ivcurve.py	/^    bulkcon = 300,$/;"	v
bulkcon	scripts/numerics/Howorka.py	/^bulkcon = 3e2,$/;"	v
bulkcon	scripts/numerics/HoworkaSimple.py	/^bulkcon = 3e2,$/;"	v
bulkcon	scripts/numerics/adap2D.py	/^bulkcon = 3e2,$/;"	v
bulkcon	scripts/numerics/adap2Dpb.py	/^bulkcon = 3e2,$/;"	v
bulkcon	scripts/numerics/adap2Dref.py	/^bulkcon = 3e2,$/;"	v
bulkcon	scripts/numerics/adap3D.py	/^bulkcon = 3e2,$/;"	v
bulkcon	scripts/numerics/adap3Dpb.py	/^bulkcon = 3e2,$/;"	v
bulkcon	scripts/numerics/adap3Dref.py	/^bulkcon = 3e2,$/;"	v
bulkcon	scripts/numerics/anaPNPS_refinement.py	/^    bulkcon = bulkcon,$/;"	v
bulkcon	scripts/numerics/anaPNPS_refinement.py	/^bulkcon = 300.,$/;"	v
bulkcon	scripts/numerics/anaPNPS_refinement_2D.py	/^    bulkcon = bulkcon,$/;"	v
bulkcon	scripts/numerics/anaPNPS_refinement_2D.py	/^bulkcon = 300.,$/;"	v
bulkcon	scripts/numerics/anaPNPS_uniform.py	/^    bulkcon = bulkcon,$/;"	v
bulkcon	scripts/numerics/anaPNPS_uniform.py	/^bulkcon = 300.,$/;"	v
bulkcon	scripts/numerics/analyticalPNPS.py	/^    bulkcon = bulkcon,$/;"	v
bulkcon	scripts/numerics/analyticalPNPS.py	/^bulkcon = 300.,$/;"	v
bulkcon	scripts/numerics/analyticalPNPS_2D.py	/^    bulkcon = bulkcon,$/;"	v
bulkcon	scripts/numerics/analyticalPNPS_2D.py	/^bulkcon = 300.,$/;"	v
bulkcon	scripts/numerics/analyticalPNPS_3D.py	/^    bulkcon = bulkcon,$/;"	v
bulkcon	scripts/numerics/analyticalPNPS_3D.py	/^bulkcon = 300.,$/;"	v
bulkcon	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    bulkcon = 300,$/;"	v
bulkcon	scripts/numerics/analyticalPNP_3D.py	/^    bulkcon = bulkcon,$/;"	v
bulkcon	scripts/numerics/analyticalPNP_3D.py	/^bulkcon = 300,$/;"	v
bulkcon	scripts/numerics/hybrid_vs_newton.py	/^bulkcon = 300.,$/;"	v
bulkcon	scripts/numerics/hybrid_vs_newton.py	/^bulkcon = bulkcon,$/;"	v
bulkcon	scripts/numerics/test_fixedpoint.py	/^bulkcon = 300.,$/;"	v
bulkcon	scripts/numerics/test_fixedpoint.py	/^bulkcon = bulkcon,$/;"	v
bulkcon	scripts/numerics/test_fixedpoint_1D.py	/^    bulkcon = bulkcon,$/;"	v
bulkcon	scripts/numerics/test_fixedpoint_1D.py	/^bulkcon = 300.,$/;"	v
bulkcon	scripts/plot_scripts/IV_ahem.py	/^    bulkcon = 1000.,$/;"	v
bulkcon	scripts/plot_scripts/PMF_Profile_2D.py	/^bulkcon = 3e2,$/;"	v
bulkcon	scripts/plot_scripts/parameter_script.py	/^bulkcon = 1000.,$/;"	v
bulkcon	scripts/pughpore/test_1Dpugh.py	/^    bulkcon = 1000.,$/;"	v
bulkcon	scripts/pughpore/test_pugh.py	/^    bulkcon = 300.,$/;"	v
bulkcon	scripts/survival.py	/^    bulkcon = 1000.,$/;"	v
bulkcon	scripts/test2D.py	/^bulkcon = 3e2,$/;"	v
bulkcon	scripts/test2Dold.py	/^bulkcon = 3e2,$/;"	v
bulkcon	scripts/test3D_GOA.py	/^bulkcon = 3e2,$/;"	v
bulkcon	scripts/test_SimplePNPS.py	/^bulkcon = 3e2,$/;"	v
bulkcon	scripts/test_ahem.py	/^    bulkcon = 1000,$/;"	v
bulkcon	scripts/toy_models/pnp1D.py	/^    bulkcon = 300.,$/;"	v
bulkcon	scripts/toy_models/pnp1Dcyl.py	/^    bulkcon = 300,$/;"	v
bulkconFluo	nanopores/physics/howorka.py	/^bulkconFluo = 0. # bulk concentration of fluorophore [mol\/m**3]$/;"	v
bulkconFluo	nanopores/physics/pore_molecule.py	/^bulkconFluo = 0. # bulk concentration of fluorophore [mol\/m**3]$/;"	v
bulkconFluo	scripts/numerics/adap2Dref.py	/^bulkconFluo = 10e-3, # bulk concentration of fluorophore [mol\/m**3]$/;"	v
bulkconFluo	scripts/test2D.py	/^bulkconFluo = 10e-3, # bulk concentration of fluorophore [mol\/m**3]$/;"	v
bulkconFluo	scripts/test2Dold.py	/^bulkconFluo = 10e-3, # bulk concentration of fluorophore [mol\/m**3]$/;"	v
bulkconduct	nanopores/physics/electrolyte.py	/^bulkconduct = lambda bulkcon, mu: 2.*bulkcon*cFarad*mu # electrolyte bulk conductivity [S\/m]$/;"	v
bulkconduct	nanopores/physics/howorka.py	/^bulkconduct = lambda: 2.*bulkcon*qq*mol*D*qq\/(kB*T)  # 2*c0*cFarad*mu # electrolyte bulk conductivity [S\/m]$/;"	v
bulkconduct	nanopores/physics/pore_dna.py	/^bulkconduct = lambda: 2.*bulkcon*qq*mol*D*qq\/(kB*T)  # electrolyte bulk conductivity [S\/m]$/;"	v
bulkconduct	nanopores/physics/pore_molecule.py	/^bulkconduct = lambda: 2.*bulkcon*qq*mol*D*qq\/(kB*T)  # 2*c0*cFarad*mu # electrolyte bulk conductivity [S\/m]$/;"	v
bulkfluid	nanopores/physics/pore.py	/^    bulkfluid = "D",$/;"	v
bulkfluid	nanopores/physics/pore.py	/^    bulkfluid = eperm*rpermw,$/;"	v
bulkfluid	nanopores/physics/pore_molecule.py	/^    bulkfluid = eperm*rpermw,$/;"	v
bulkfluid	scripts/howorka/largepore.py	/^    bulkfluid = {"bulkfluid_top", "bulkfluid_bottom"},$/;"	v
bulkfluid	scripts/howorka/largepore.py	/^bulkfluid = domain - (dna | membrane | pore)$/;"	v
bulkfluid	scripts/howorka/largepore_dna.py	/^    bulkfluid = {"bulkfluid_top", "bulkfluid_bottom"},$/;"	v
bulkfluid	scripts/howorka/largepore_dna.py	/^bulkfluid = reservoir - membrane - closed_dna | add_bulkfluid$/;"	v
bulkfluid	scripts/numerics/selectivity1D.py	/^    bulkfluid = {"bulkfluidtop", "bulkfluidbottom"},$/;"	v
bulkfluid	scripts/numerics/test_fixedpoint_1D.py	/^    bulkfluid = "fluid",$/;"	v
bulkfluid	scripts/test_box.py	/^bulkfluid = domain - (dna | membrane | pore)$/;"	v
bulkfluid	scripts/toy_models/pnp1D.py	/^    bulkfluid = "fluid",$/;"	v
bulkfluid_bottom	scripts/howorka/largepore.py	/^    bulkfluid_bottom = bulkfluid_bottom,$/;"	v
bulkfluid_bottom	scripts/howorka/largepore.py	/^bulkfluid_bottom = bulkfluid - upperhalf$/;"	v
bulkfluid_bottom	scripts/howorka/largepore_dna.py	/^    bulkfluid_bottom = bulkfluid_bottom,$/;"	v
bulkfluid_bottom	scripts/howorka/largepore_dna.py	/^bulkfluid_bottom = bulkfluid - upperhalf$/;"	v
bulkfluid_bottom	scripts/test_box.py	/^    bulkfluid_bottom = bulkfluid_bottom,$/;"	v
bulkfluid_bottom	scripts/test_box.py	/^bulkfluid_bottom = bulkfluid - upperhalf$/;"	v
bulkfluid_top	scripts/howorka/largepore.py	/^    bulkfluid_top = bulkfluid_top,$/;"	v
bulkfluid_top	scripts/howorka/largepore.py	/^bulkfluid_top = bulkfluid & upperhalf$/;"	v
bulkfluid_top	scripts/howorka/largepore_dna.py	/^    bulkfluid_top = bulkfluid_top,$/;"	v
bulkfluid_top	scripts/howorka/largepore_dna.py	/^bulkfluid_top = bulkfluid & upperhalf$/;"	v
bulkfluid_top	scripts/test_box.py	/^    bulkfluid_top = bulkfluid_top,$/;"	v
bulkfluid_top	scripts/test_box.py	/^bulkfluid_top = bulkfluid & upperhalf$/;"	v
bulkfluidbottom	scripts/numerics/selectivity1D.py	/^    bulkfluidbottom = domain - pore - bulkfluidtop,$/;"	v
bulkfluidtop	scripts/numerics/selectivity1D.py	/^    bulkfluidtop = bulkfluidtop,$/;"	v
bulkfluidtop	scripts/numerics/selectivity1D.py	/^bulkfluidtop = Interval(h, b)$/;"	v
c0	nanopores/physics/electrolyte.py	/^c0 = dict()$/;"	v
c0	nanopores/physics/pore.py	/^c0 = dict($/;"	v
c0	scripts/analytical_test_case.py	/^c0 = phys.bulkcon$/;"	v
c0	scripts/howorka/HoworkaTools.py	/^c0 = N\/Vol # concentration [1\/nm**3]$/;"	v
c0	scripts/howorka/test_selectivity.py	/^c0 = 2*50.*(phys.mol*phys.nm**3) # 50 mM = 50*mol\/m**3 (50*6e23*1e-27 = 3e-2)$/;"	v
c0	scripts/howorka/video.py	/^c0 = N\/Vol # concentration [1\/nm**3]$/;"	v
c0	scripts/numerics/anaPNPS_refinement.py	/^c0 = phys.bulkcon$/;"	v
c0	scripts/numerics/anaPNPS_refinement_2D.py	/^c0 = phys.bulkcon$/;"	v
c0	scripts/numerics/anaPNPS_uniform.py	/^c0 = phys.bulkcon$/;"	v
c0	scripts/numerics/analyticalPNPS.py	/^c0 = phys.bulkcon$/;"	v
c0	scripts/numerics/analyticalPNPS_2D.py	/^c0 = phys.bulkcon$/;"	v
c0	scripts/numerics/analyticalPNPS_3D.py	/^c0 = phys.bulkcon$/;"	v
c0	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^c0 = phys.bulkcon$/;"	v
c0	scripts/numerics/analyticalPNP_3D.py	/^c0 = phys.bulkcon$/;"	v
c0	scripts/numerics/diffusion_with_force_profile.py	/^c0 = 1.6605 # [mol\/m**3] = 1 molecule per (10nm)**3$/;"	v
c0	scripts/numerics/selectivity1D.py	/^c0 = 1.*(phys.mol*phys.nm**3) # = 1 mM = 1*mol\/m**3 $/;"	v
c1	scripts/howorka/largepore_dna.py	/^c1 = [0.,0.,.5*(hpore-h1)]$/;"	v
c2	scripts/howorka/largepore_dna.py	/^c2 = [0.,0.,hpore*.5-h1-(h2-h1)*.5]$/;"	v
c4	scripts/howorka/largepore_dna.py	/^c4 = [0.,0.,-.5*(hpore-h4)]$/;"	v
cFarad	nanopores/physics/electrolyte.py	/^cFarad = qq*mol  # Faraday constant [C\/mol]$/;"	v
cFarad	nanopores/physics/howorka.py	/^cFarad = lambda: qq*mol  # Faraday constant [C\/mol]$/;"	v
cFarad	nanopores/physics/params_physical.py	/^cFarad = qq*mol  # Faraday [C\/mol] cFarad=qq*mol$/;"	v
cFarad	nanopores/physics/pore_dna.py	/^cFarad = lambda: qq*mol  # Faraday constant [C\/mol]$/;"	v
cFarad	nanopores/physics/pore_molecule.py	/^cFarad = lambda: qq*mol  # Faraday constant [C\/mol]$/;"	v
cache	nanopores/tools/fields.py	/^class cache(CacheBase):$/;"	c
cache_forcefield	nanopores/tools/solvers.py	/^class cache_forcefield(fields.CacheBase):$/;"	c
calculate	nanopores/scripts/ahemFPT.py	/^def calculate(**params):$/;"	f
calculate	nanopores/scripts/ahemIV.py	/^def calculate(**params):$/;"	f
calculate2D	nanopores/scripts/calculate_forces.py	/^def calculate2D(clscale=.8, refinement=True, maxcells=10e4, pid="", **params):$/;"	f
calculate_forcefield	nanopores/tools/solvers.py	/^def calculate_forcefield(name, X, calculate, params={}, default={}, nproc=1):$/;"	f
calculate_forces	nanopores/scripts/calculate_forces.py	/^def calculate_forces(x0, pid="", clscale=10.0, refinement=True, maxcells=default_maxcells):$/;"	f
calculate_forces2D	nanopores/scripts/calculate_forces.py	/^def calculate_forces2D(x0, pid="", clscale=.8, refinement=True, maxcells=default_maxcells2D):$/;"	f
calculate_selectivity	scripts/howorka/selectivity.py	/^def calculate_selectivity(F, geo, phys, fluocon=1, t=1e0, steps=100, levels=1):$/;"	f
calculateforce	scripts/plot_forces_How/calculateforce.py	/^def calculateforce(clscale=6., subdomain=None):$/;"	f
calculateforce	scripts/plot_forces_aHem/calculateforce.py	/^def calculateforce(clscale=10., subdomain=None):$/;"	f
calculateforce	scripts/random_walk_aHem/calculateforce.py	/^def calculateforce(clscale=6., subdomain=None):$/;"	f
cb	scripts/howorka/HoworkaTools.py	/^    cb = fig.colorbar(CS, cax=cax, extend="both", orientation="vertical", format=formt)$/;"	v
cb	scripts/howorka/video.py	/^    cb = fig.colorbar(CS, cax=cax, extend="both", orientation="vertical", format=formt)$/;"	v
ccn_compute	scripts/finfet/collocation_methods/ccn_compute.m	/^function [ x, w ] = ccn_compute ( n )$/;"	f
ccn_compute_np	scripts/finfet/collocation_methods/ccn_compute_np.m	/^function [ x, w ] = ccn_compute_np ( n, np, x )$/;"	f
ccn_compute_points	scripts/finfet/collocation_methods/ccn_compute_points.m	/^function x = ccn_compute_points ( n )$/;"	f
ccn_compute_points_np	scripts/finfet/collocation_methods/ccn_compute_points_np.m	/^function x = ccn_compute_points_np ( n, np, p )$/;"	f
ccn_compute_weights	scripts/finfet/collocation_methods/ccn_compute_weights.m	/^function w = ccn_compute_weights ( n )$/;"	f
ccn_compute_weights_np	scripts/finfet/collocation_methods/ccn_compute_weights_np.m	/^function w = ccn_compute_weights_np ( n, np, p )$/;"	f
cdna	scripts/howorka/largepore.py	/^cdna = [0, 0, 0.5*(hdna-hmem)]$/;"	v
center	scripts/analytical_test_case.py	/^    center = domain1D.boundary("left")$/;"	v
center	scripts/numerics/anaPNPS_refinement.py	/^    center = domain1D.boundary("left")$/;"	v
center	scripts/numerics/anaPNPS_refinement_2D.py	/^    center = domain1D.boundary("left")$/;"	v
center	scripts/numerics/anaPNPS_uniform.py	/^    center = domain1D.boundary("left")$/;"	v
center	scripts/numerics/analyticalPNPS.py	/^    center = domain1D.boundary("left")$/;"	v
center	scripts/numerics/analyticalPNPS_2D.py	/^    center = domain1D.boundary("left")$/;"	v
center	scripts/numerics/analyticalPNPS_2D.py	/^    center = domain2D.boundary("left")$/;"	v
center	scripts/numerics/analyticalPNPS_3D.py	/^    center = domain1D.boundary("left")$/;"	v
center	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    center = domain1D.boundary("left")$/;"	v
center	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    center = domain2D.boundary("left")$/;"	v
center	scripts/numerics/analyticalPNP_3D.py	/^    center = domain1D.boundary("left")$/;"	v
center	scripts/toy_models/pnp1Dcyl.py	/^    center = domain.boundary("left")$/;"	v
change_dt	nanopores/tools/transientpde.py	/^    def change_dt(self, dt):$/;"	m	class:TransientLinearPDE
charge	nanopores/physics/howorka.py	/^charge = {"volcharge":volcharge, "surfcharge":surfcharge}$/;"	v
charge	nanopores/physics/pore_dna.py	/^charge = {"volcharge":volcharge, "surfcharge":surfcharge}$/;"	v
charge	nanopores/physics/pore_molecule.py	/^charge = {"volcharge":volcharge, "surfcharge":surfcharge}$/;"	v
chargeddnab	nanopores/physics/pore.py	/^    chargeddnab = "DNAqs",$/;"	v
chargeddnab	scripts/howorka/largepore.py	/^    chargeddnab = {"dnaouterb", "dnainnerb"},$/;"	v
chargeddnab	scripts/howorka/largepore_dna.py	/^    chargeddnab = {"dnaouterb", "dnainnerb"},$/;"	v
chargedmembraneb	nanopores/physics/pore.py	/^    chargedmembraneb = "Membraneqs",$/;"	v
chargedmembraneb	scripts/analytical_test_case.py	/^    chargedmembraneb = "wall",$/;"	v
chargedmembraneb	scripts/numerics/anaPNPS_refinement.py	/^    chargedmembraneb = "wall",$/;"	v
chargedmembraneb	scripts/numerics/anaPNPS_refinement_2D.py	/^    chargedmembraneb = "wall",$/;"	v
chargedmembraneb	scripts/numerics/anaPNPS_uniform.py	/^    chargedmembraneb = "wall",$/;"	v
chargedmembraneb	scripts/numerics/analyticalPNPS.py	/^    chargedmembraneb = "wall",$/;"	v
chargedmembraneb	scripts/numerics/analyticalPNPS_2D.py	/^    chargedmembraneb = "wall",$/;"	v
chargedmembraneb	scripts/numerics/analyticalPNPS_3D.py	/^    chargedmembraneb = "wall",$/;"	v
chargedmembraneb	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    chargedmembraneb = "wall",$/;"	v
chargedmembraneb	scripts/numerics/analyticalPNP_3D.py	/^    chargedmembraneb = "wall",$/;"	v
chargedmembraneb	scripts/numerics/test_fixedpoint_1D.py	/^    chargedmembraneb = membrane.boundary(),$/;"	v
chargedmembraneb	scripts/toy_models/pnp1D.py	/^    chargedmembraneb = membrane.boundary(),$/;"	v
chargedsamb	nanopores/physics/pore.py	/^    chargedsamb = "SAMqs",$/;"	v
chargedsinb	nanopores/physics/pore.py	/^    chargedsinb = "SiNqs",$/;"	v
cheapest	nanopores/models/Howorka.py	/^cheapest = False,$/;"	v
cheapest	nanopores/models/HoworkaSimple.py	/^cheapest = False,$/;"	v
cheapest	nanopores/models/pughpore.py	/^    cheapest = False,$/;"	v
cheapest	scripts/numerics/Howorka.py	/^cheapest = False,$/;"	v
cheapest	scripts/numerics/HoworkaSimple.py	/^cheapest = False,$/;"	v
cheapest	scripts/numerics/adap2D.py	/^                           cheapest=cheapest, **ref)$/;"	v
cheapest	scripts/numerics/adap2D.py	/^cheapest = False,$/;"	v
cheapest	scripts/numerics/adap2Dpb.py	/^cheapest = False,$/;"	v
cheapest	scripts/numerics/adap3D.py	/^    cheapest=cheapest, **ref)$/;"	v
cheapest	scripts/numerics/adap3D.py	/^cheapest = False,$/;"	v
cheapest	scripts/numerics/adap3Dpb.py	/^cheapest = True,$/;"	v
cheapest	scripts/numerics/adap3Dref.py	/^cheapest = True,$/;"	v
cheapest	scripts/pughpore/test_pugh.py	/^                                 cheapest=solverp.cheapest)$/;"	v
cheapest	scripts/pughpore/test_pugh.py	/^    cheapest = False,$/;"	v
chebyshev1_compute	scripts/finfet/collocation_methods/chebyshev1_compute.m	/^function [ x, w ] = chebyshev1_compute ( order )$/;"	f
chebyshev1_integral	scripts/finfet/collocation_methods/chebyshev1_integral.m	/^function exact = chebyshev1_integral ( expon )$/;"	f
chebyshev2_compute	scripts/finfet/collocation_methods/chebyshev2_compute.m	/^function [ x, w ] = chebyshev2_compute ( order )$/;"	f
chebyshev2_integral	scripts/finfet/collocation_methods/chebyshev2_integral.m	/^function exact = chebyshev2_integral ( expon )$/;"	f
check_midpoint	nanopores/geometries/H_cyl_geo/subdomains.py	/^    check_midpoint = True$/;"	v	class:MembraneB
check_midpoint	nanopores/geometries/aHem/subdomains.py	/^    check_midpoint = True$/;"	v	class:MembraneB
check_solve	nanopores/testsuite/checksolve.py	/^def check_solve(p):$/;"	f
circ	scripts/test_features/circle.py	/^circ = Circle(R=.4, center=(.5,.5), frac=0.9)$/;"	v
circb	scripts/test_features/circle.py	/^circb = Boundary(circ)$/;"	v
clenshaw_curtis_compute	scripts/finfet/collocation_methods/clenshaw_curtis_compute.m	/^function [ x, w ] = clenshaw_curtis_compute ( order )$/;"	f
clenshaw_curtis_compute_points	scripts/finfet/collocation_methods/clenshaw_curtis_compute_points.m	/^function points = clenshaw_curtis_compute_points ( order )$/;"	f
clenshaw_curtis_compute_points_np	scripts/finfet/collocation_methods/clenshaw_curtis_compute_points_np.m	/^function points = clenshaw_curtis_compute_points_np ( order, np, p )$/;"	f
clenshaw_curtis_compute_weights	scripts/finfet/collocation_methods/clenshaw_curtis_compute_weights.m	/^function w = clenshaw_curtis_compute_weights ( order )$/;"	f
clenshaw_curtis_compute_weights_np	scripts/finfet/collocation_methods/clenshaw_curtis_compute_weights_np.m	/^function weights = clenshaw_curtis_compute_weights_np ( order, np, p )$/;"	f
close	nanopores/tools/mpipool.py	/^    def close(self):$/;"	m	class:MPIPool
closed_dna	scripts/howorka/largepore.py	/^closed_dna = Box(center=cdna, l=rdna, w=rdna, h=hdna)$/;"	v
closed_dna	scripts/howorka/largepore_dna.py	/^closed_dna = Box(center=zero, l=l0, w=l0, h=hpore)$/;"	v
closed_membrane	scripts/howorka/largepore.py	/^closed_membrane = Box(center=zero, l=R, w=R, h=hmem)$/;"	v
closed_membrane	scripts/howorka/largepore_dna.py	/^closed_membrane = Box(center=cmem, l=R, w=R, h=hmem)$/;"	v
clscale	nanopores/scripts/ahemFPT.py	/^clscale = 10.$/;"	v
clscale	nanopores/scripts/ahemIV.py	/^clscale = 10.$/;"	v
clscale	scripts/debug.py	/^clscale = 2.,$/;"	v
clscale	scripts/finfet/test_wire.py	/^clscale = 1.0 # mesh width scale$/;"	v
clscale	scripts/plot_scripts/IV_ahem.py	/^    clscale = 6.,$/;"	v
clscale	scripts/plot_scripts/parameter_script.py	/^clscale = 12.,$/;"	v
clscale	scripts/test.py	/^    clscale = clscale,$/;"	v
clscale	scripts/test.py	/^clscale = 8.0$/;"	v
clscale	scripts/test2DP.py	/^    clscale = clscale$/;"	v
clscale	scripts/test2DP.py	/^clscale = 1.$/;"	v
cm	nanopores/physics/params_physical.py	/^cm = 1e-2$/;"	v
cm0	scripts/analytical_test_case.py	/^    cm0 = cm0,$/;"	v
cm0	scripts/analytical_test_case.py	/^cm0 = dict(wall = c0*exp(+phi(R)\/UT))$/;"	v
cm0	scripts/numerics/anaPNPS_refinement.py	/^    cm0 = dict($/;"	v
cm0	scripts/numerics/anaPNPS_refinement_2D.py	/^    cm0 = dict($/;"	v
cm0	scripts/numerics/anaPNPS_uniform.py	/^    cm0 = dict($/;"	v
cm0	scripts/numerics/analyticalPNPS.py	/^    cm0 = dict($/;"	v
cm0	scripts/numerics/analyticalPNPS_2D.py	/^    cm0 = dict(wall = c0*exp(+phi(R)\/UT)),$/;"	v
cm0	scripts/numerics/analyticalPNPS_3D.py	/^    cm0 = dict($/;"	v
cm0	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    cm0 = dict(wall = c0*exp(+phi(R)\/UT)),$/;"	v
cm0	scripts/numerics/analyticalPNP_3D.py	/^    cm0 = dict(wall = c0*exp(+phi(R)\/UT)),$/;"	v
cmPB	scripts/analytical_test_case.py	/^def cmPB(x):$/;"	f
cmPB	scripts/numerics/anaPNPS_refinement.py	/^def cmPB(x):$/;"	f
cmPB	scripts/numerics/anaPNPS_refinement_2D.py	/^def cmPB(x):$/;"	f
cmPB	scripts/numerics/anaPNPS_uniform.py	/^def cmPB(x):$/;"	f
cmPB	scripts/numerics/analyticalPNPS.py	/^def cmPB(x):$/;"	f
cmPB	scripts/numerics/analyticalPNPS_2D.py	/^def cmPB(x):$/;"	f
cmPB	scripts/numerics/analyticalPNPS_3D.py	/^def cmPB(x):$/;"	f
cmPB	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^def cmPB(x):$/;"	f
cmPB	scripts/numerics/analyticalPNP_3D.py	/^def cmPB(x):$/;"	f
cmPBEx	scripts/numerics/anaPNPS_refinement.py	/^class cmPBEx(Expression):$/;"	c
cmPBEx	scripts/numerics/anaPNPS_refinement_2D.py	/^class cmPBEx(Expression):$/;"	c
cmPBEx	scripts/numerics/anaPNPS_uniform.py	/^class cmPBEx(Expression):$/;"	c
cmPBEx	scripts/numerics/analyticalPNPS.py	/^class cmPBEx(Expression):$/;"	c
cmPBEx	scripts/numerics/analyticalPNPS_3D.py	/^class cmPBEx(Expression):$/;"	c
cmaps	scripts/howorka/colormaps.py	/^cmaps = {}$/;"	v
cmdiff	scripts/numerics/adap2Dref.py	/^cmdiff = cm([10*nm, -l1]) - cm([10*nm, l1])$/;"	v
cmdiff	scripts/test2D.py	/^cmdiff = cm([10*nm, -l1]) - cm([10*nm, l1])$/;"	v
cmdiff	scripts/test2Dold.py	/^cmdiff = cm([10*nm, -l1]) - cm([10*nm, l1])$/;"	v
cmdiff	scripts/test3D_GOA.py	/^cmdiff = cm([0*nm, 0., -l1]) - cm([0*nm, 0., l1])$/;"	v
cmem	scripts/howorka/largepore_dna.py	/^cmem = [0.,0.,-.5*(hpore-hmem)]$/;"	v
cmflux	nanopores/physics/electrolyte.py	/^cmflux = dict()$/;"	v
cmflux	scripts/numerics/anaPNPS_refinement.py	/^    cmflux = dict(upperb = +JmPB(),$/;"	v
cmflux	scripts/numerics/anaPNPS_refinement_2D.py	/^    cmflux = dict(upperb = +JmPB(),$/;"	v
cmflux	scripts/numerics/anaPNPS_uniform.py	/^    cmflux = dict(upperb = +JmPB(),$/;"	v
cmflux	scripts/numerics/analyticalPNPS_2D.py	/^    cmflux = dict(bulk = JmPB()*n[1]),$/;"	v
cmflux	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    cmflux = dict(bulk = JmPB()*n[1]),$/;"	v
cmflux	scripts/numerics/analyticalPNP_3D.py	/^    cmflux = dict(bulk = JmPB()*n3D[2]),$/;"	v
coeff	scripts/random_walk_aHem/run.py	/^coeff=sqrt(2*D*1e9*tau) # [nm]$/;"	v
collocation	scripts/finfet/collocation.py	/^def collocation(N, order, a0, l, w, h, r):$/;"	f
color	scripts/pughpore/sobol_points.py	/^    color='blue'$/;"	v
combinations	nanopores/scripts/simulation2D.py	/^def combinations(dic, iterkeys):$/;"	f
comm	nanopores/scripts/calculate_forces.py	/^comm = mpi_comm_self()$/;"	v
comm	nanopores/tools/mpipool.py	/^comm = MPI.COMM_WORLD$/;"	v
comm	scripts/plot_scripts/script3DW.py	/^comm = mpi_comm_world()$/;"	v
compCopy	scripts/finfet/collocation_methods/CloneFig.m	/^function compCopy(op, np)$/;"	f
comp_next	scripts/finfet/collocation_methods/comp_next.m	/^function [ a, more, h, t ] = comp_next ( n, k, a, more, h, t )$/;"	f
comptime	scripts/plot_scripts/script2DWelectrodes.py	/^    comptime = t.value(),$/;"	v
compute	nanopores/physics/howorka.py	/^        def compute(geo):$/;"	f	function:Moleculeqv
compute	nanopores/physics/howorka.py	/^    def compute(geo):$/;"	f	function:DNAqsHoworka
compute	nanopores/physics/pore_mol.py	/^    def compute(geo):$/;"	f	function:Moleculeqv
compute	nanopores/physics/pore_molecule.py	/^        def compute(geo):$/;"	f	function:Moleculeqv
compute_boundaries	nanopores/tools/box.py	/^    def compute_boundaries(self, merge=True):$/;"	m	class:BoxCollection
compute_entities	nanopores/tools/box.py	/^    def compute_entities(self):$/;"	m	class:BoxCollection
compvmean	scripts/plot_scripts/script2DWelectrodes.py	/^def compvmean(rz, v, R, n):$/;"	f
concentration	scripts/howorka/selectivity.py	/^def concentration(U, geo):$/;"	f
config	scripts/plot_scripts/script2DW.py	/^config = "2b"$/;"	v
config1f	scripts/plot_scripts/script2DWelectrodes.py	/^config1f = [{"x0": None, "lsam": lsam, "r0": 13*nm -lsam,},$/;"	v
config1f	scripts/plot_scripts/script3DW.py	/^config1f = [{"x0": None, "lsam": lsam, "r0": 13*nm -lsam,},$/;"	v
configl	scripts/plot_scripts/script2DWelectrodes.py	/^configl = [geo_dict,]$/;"	v
configl	scripts/plot_scripts/script3DW.py	/^configl = configs2b$/;"	v
configs2b	scripts/plot_scripts/script2DWelectrodes.py	/^configs2b= [{"x0": None, "lsam": lsam, "r0": 11.5*nm -lsam,},$/;"	v
configs2b	scripts/plot_scripts/script3DW.py	/^configs2b= [{"x0": None, "lsam": lsam, "r0": 11.5*nm -lsam,},$/;"	v
constant	nanopores/tools/geometry.py	/^    def constant(self, name, compute=None):$/;"	m	class:Geometry
construct_alpha	scripts/numerics/force_profiles.py	/^def construct_alpha(a0):$/;"	f
contains	nanopores/tools/box.py	/^    def contains(self, C):$/;"	m	class:csgExpression
contours	scripts/howorka/HoworkaTools.py	/^contours = 10**numpy.arange(-8, numpy.log10(c0), 0.1)$/;"	v
contours	scripts/howorka/HoworkaTools.py	/^contours = numpy.concatenate((numpy.array([0.]), contours)) #numpy.array([0., 1e-5, 1e-4, 1e-3, 1e-2, 1e-1, 1.00]) # contour ranges$/;"	v
contours	scripts/howorka/video.py	/^contours = 10**numpy.arange(-8, numpy.log10(c0), contourstep)$/;"	v
contours	scripts/howorka/video.py	/^contours = numpy.concatenate((numpy.array([0.]), contours)) #numpy.array([0., 1e-5, 1e-4, 1e-3, 1e-2, 1e-1, 1.00]) # contour ranges$/;"	v
contourstep	scripts/howorka/video.py	/^    contourstep = 0.1, # recommended: 0.1 - 1., determines plot speed\/smoothness$/;"	v
convect	scripts/howorka/HoworkaTools.py	/^def convect(geo, phys, Fel, Fdrag, u0, log=False):$/;"	f
convect	scripts/howorka/test_selectivity.py	/^def convect(geo, phys, Fel, Fdrag, u0, t=1e-9, log=False):$/;"	f
convect	scripts/howorka/video.py	/^def convect(geo, phys, Fel, Fdrag, u0, log=False):$/;"	f
convect	scripts/numerics/selectivity1D.py	/^def convect(geo, phys, F, u0, t=1e-9, log=False):$/;"	f
converged0	scripts/numerics/test_bVscheme.py	/^converged0 = H.solve2D_fixedpoint(geo, phys, imax=20, tol=tol)$/;"	v
converged1	scripts/numerics/test_bVscheme.py	/^converged1 = H.solve2D_hybrid(geo, phys, imax=10, tol=tol)$/;"	v
converged2	scripts/numerics/test_bVscheme.py	/^converged2 = H.solve2D_fixedpoint_bVscheme(geo, phys, imax=40, bVstep=bVstep, tol=tol)$/;"	v
converged3	scripts/numerics/test_bVscheme.py	/^converged3 = H.solve2D_hybrid_PB(geo, phys, imax=10, tol=tol)$/;"	v
convergence	nanopores/tools/illposed.py	/^    def convergence(self,tolnewton):$/;"	m	class:IllposedNonlinearSolver
convergencePlot	scripts/convergencePlot.m	/^function convergencePlot()$/;"	f
convert2D	nanopores/tools/utilities.py	/^def convert2D(mesh2D, *forces):$/;"	f
convert3D	nanopores/tools/utilities.py	/^def convert3D(mesh3D, *forces):$/;"	f
coord	scripts/howorka/HoworkaTools.py	/^coord = mesh.coordinates() # numpy array of 2-1 arrays$/;"	v
coord	scripts/howorka/forcefield.py	/^coord = mesh.coordinates() # numpy array of 2-1 arrays$/;"	v
coord	scripts/numerics/force_profiles.py	/^coord = geo.mesh.coordinates()[:, 0] # numpy array$/;"	v
copy	nanopores/tools/box.py	/^    def copy(self):$/;"	m	class:BoxCollection
copy_box	nanopores/tools/axisym.py	/^def copy_box(box):$/;"	f
copy_boxcollection	nanopores/tools/axisym.py	/^def copy_boxcollection(col):$/;"	f
counter	scripts/random_walk_aHem/init_arrays.py	/^counter = np.array([0,0])$/;"	v
counter	scripts/random_walk_aHem/look_at_arrays.py	/^counter=np.load('counter.npy')$/;"	v
counter	scripts/random_walk_aHem/plot_probability.py	/^counter = np.load('counter.npy')$/;"	v
counter	scripts/random_walk_aHem/run.py	/^counter=np.load('counter.npy')$/;"	v
couple_npm	nanopores/physics/simplepnps.py	/^        def couple_npm(upoisson, geo, phys):$/;"	f	function:PNPFixedPoint.__init__
couple_npm	nanopores/physics/simplepnps.py	/^        def couple_npm(upoisson, geo, phys):$/;"	f	function:PNPFixedPointNaive.__init__
couple_npm	nanopores/physics/simplepnps.py	/^        def couple_npm(upoisson, geo, phys):$/;"	f	function:PNPFixedPointNonlinear.__init__
couple_npm	nanopores/physics/simplepnps.py	/^        def couple_npm(upoisson, ustokes, geo, phys):$/;"	f	function:PNPSFixedPoint.__init__
couple_npp	nanopores/physics/simplepnps.py	/^        def couple_npp(upoisson, geo, phys):$/;"	f	function:PNPFixedPoint.__init__
couple_npp	nanopores/physics/simplepnps.py	/^        def couple_npp(upoisson, geo, phys):$/;"	f	function:PNPFixedPointNaive.__init__
couple_npp	nanopores/physics/simplepnps.py	/^        def couple_npp(upoisson, geo, phys):$/;"	f	function:PNPFixedPointNonlinear.__init__
couple_npp	nanopores/physics/simplepnps.py	/^        def couple_npp(upoisson, ustokes, geo, phys):$/;"	f	function:PNPSFixedPoint.__init__
couple_pnp	nanopores/physics/simplepnps.py	/^        def couple_pnp(ustokes):$/;"	f	function:PNPSHybrid.__init__
couple_pnp	scripts/numerics/anaPNPS_refinement.py	/^def couple_pnp(ustokes):$/;"	f
couple_pnp	scripts/numerics/anaPNPS_refinement_2D.py	/^def couple_pnp(ustokes):$/;"	f
couple_pnp	scripts/numerics/anaPNPS_uniform.py	/^def couple_pnp(ustokes):$/;"	f
couple_pnp	scripts/numerics/analyticalPNPS.py	/^def couple_pnp(ustokes):$/;"	f
couple_pnp	scripts/numerics/analyticalPNPS_2D.py	/^def couple_pnp(ustokes):$/;"	f
couple_pnp	scripts/numerics/analyticalPNPS_3D.py	/^def couple_pnp(ustokes):$/;"	f
couple_poisson	nanopores/physics/simplepnps.py	/^        def couple_poisson(unpp, unpm, geo):$/;"	f	function:PNPFixedPoint.__init__
couple_poisson	nanopores/physics/simplepnps.py	/^        def couple_poisson(unpp, unpm, geo):$/;"	f	function:PNPSFixedPoint.__init__
couple_poisson	nanopores/physics/simplepnps.py	/^        def couple_poisson(unpp, unpm, geo, phys):$/;"	f	function:PNPFixedPointNaive.__init__
couple_poisson	nanopores/physics/simplepnps.py	/^        def couple_poisson(upoisson, unpp, unpm, geo):$/;"	f	function:PNPFixedPointNonlinear.__init__
couple_stokes	nanopores/physics/simplepnps.py	/^        def couple_stokes(upnp, phys):$/;"	f	function:PNPSHybrid.__init__
couple_stokes	nanopores/physics/simplepnps.py	/^        def couple_stokes(upoisson, unpp, unpm, phys):$/;"	f	function:PNPSFixedPoint.__init__
couple_stokes	scripts/numerics/anaPNPS_refinement.py	/^def couple_stokes(upnp, phys):$/;"	f
couple_stokes	scripts/numerics/anaPNPS_refinement_2D.py	/^def couple_stokes(upnp, phys):$/;"	f
couple_stokes	scripts/numerics/anaPNPS_uniform.py	/^def couple_stokes(upnp, phys):$/;"	f
couple_stokes	scripts/numerics/analyticalPNPS.py	/^def couple_stokes(upnp, phys):$/;"	f
couple_stokes	scripts/numerics/analyticalPNPS_2D.py	/^def couple_stokes(upnp, phys):$/;"	f
couple_stokes	scripts/numerics/analyticalPNPS_3D.py	/^def couple_stokes(upnp, phys):$/;"	f
couplebVtoQmol	nanopores/physics/howorka.py	/^couplebVtoQmol = False$/;"	v
couplebVtoQmol	nanopores/physics/pore_molecule.py	/^couplebVtoQmol = False$/;"	v
couplebVtoQmol	nanopores/scripts/calculate_forces.py	/^couplebVtoQmol = True,$/;"	v
couplebVtoQmol	scripts/numerics/adap2Dref.py	/^couplebVtoQmol = True,$/;"	v
couplebVtoQmol	scripts/test2D.py	/^couplebVtoQmol = True,$/;"	v
couplebVtoQmol	scripts/test2Dold.py	/^couplebVtoQmol = True,$/;"	v
couplers	scripts/numerics/anaPNPS_refinement.py	/^couplers = dict($/;"	v
couplers	scripts/numerics/anaPNPS_refinement_2D.py	/^couplers = dict($/;"	v
couplers	scripts/numerics/anaPNPS_uniform.py	/^couplers = dict($/;"	v
couplers	scripts/numerics/analyticalPNPS.py	/^couplers = dict($/;"	v
couplers	scripts/numerics/analyticalPNPS_2D.py	/^couplers = dict($/;"	v
couplers	scripts/numerics/analyticalPNPS_3D.py	/^couplers = dict($/;"	v
cp0	scripts/analytical_test_case.py	/^    cp0 = cp0,$/;"	v
cp0	scripts/analytical_test_case.py	/^cp0 = dict(wall = c0*exp(-phi(R)\/UT))$/;"	v
cp0	scripts/numerics/anaPNPS_refinement.py	/^    cp0 = dict($/;"	v
cp0	scripts/numerics/anaPNPS_refinement_2D.py	/^    cp0 = dict($/;"	v
cp0	scripts/numerics/anaPNPS_uniform.py	/^    cp0 = dict($/;"	v
cp0	scripts/numerics/analyticalPNPS.py	/^    cp0 = dict($/;"	v
cp0	scripts/numerics/analyticalPNPS_2D.py	/^    cp0 = dict(wall = c0*exp(-phi(R)\/UT)),$/;"	v
cp0	scripts/numerics/analyticalPNPS_3D.py	/^    cp0 = dict($/;"	v
cp0	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    cp0 = dict(wall = c0*exp(-phi(R)\/UT)),$/;"	v
cp0	scripts/numerics/analyticalPNP_3D.py	/^    cp0 = dict(wall = c0*exp(-phi(R)\/UT)),$/;"	v
cpPB	scripts/analytical_test_case.py	/^def cpPB(x):$/;"	f
cpPB	scripts/numerics/anaPNPS_refinement.py	/^def cpPB(x):$/;"	f
cpPB	scripts/numerics/anaPNPS_refinement_2D.py	/^def cpPB(x):$/;"	f
cpPB	scripts/numerics/anaPNPS_uniform.py	/^def cpPB(x):$/;"	f
cpPB	scripts/numerics/analyticalPNPS.py	/^def cpPB(x):$/;"	f
cpPB	scripts/numerics/analyticalPNPS_2D.py	/^def cpPB(x):$/;"	f
cpPB	scripts/numerics/analyticalPNPS_3D.py	/^def cpPB(x):$/;"	f
cpPB	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^def cpPB(x):$/;"	f
cpPB	scripts/numerics/analyticalPNP_3D.py	/^def cpPB(x):$/;"	f
cpPBEx	scripts/numerics/anaPNPS_refinement.py	/^class cpPBEx(Expression):$/;"	c
cpPBEx	scripts/numerics/anaPNPS_refinement_2D.py	/^class cpPBEx(Expression):$/;"	c
cpPBEx	scripts/numerics/anaPNPS_uniform.py	/^class cpPBEx(Expression):$/;"	c
cpPBEx	scripts/numerics/analyticalPNPS.py	/^class cpPBEx(Expression):$/;"	c
cpPBEx	scripts/numerics/analyticalPNPS_3D.py	/^class cpPBEx(Expression):$/;"	c
cpflux	nanopores/physics/electrolyte.py	/^cpflux = dict()$/;"	v
cpflux	scripts/numerics/anaPNPS_refinement.py	/^    cpflux = dict(upperb = +JpPB(),$/;"	v
cpflux	scripts/numerics/anaPNPS_refinement_2D.py	/^    cpflux = dict(upperb = +JpPB(),$/;"	v
cpflux	scripts/numerics/anaPNPS_uniform.py	/^    cpflux = dict(upperb = +JpPB(),$/;"	v
cpflux	scripts/numerics/analyticalPNPS_2D.py	/^    cpflux = dict(bulk = JpPB()*n[1]),$/;"	v
cpflux	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    cpflux = dict(bulk = JpPB()*n[1]),$/;"	v
cpflux	scripts/numerics/analyticalPNP_3D.py	/^    cpflux = dict(bulk = JpPB()*n3D[2]),$/;"	v
cpore	scripts/howorka/largepore_dna.py	/^cpore = [0.,0.,-.5*h2]$/;"	v
crange	nanopores/tools/utilities.py	/^def crange(a, b, N): # continuous range with step 1\/N$/;"	f
create_geometry	nanopores/tools/axisym.py	/^    def create_geometry(self, lc=.5):$/;"	m	class:CylinderCollection
create_geometry	nanopores/tools/box.py	/^    def create_geometry(self, lc=.5, merge=True):$/;"	m	class:BoxCollection
cross	scripts/analytical_test_case.py	/^    cross = cross,$/;"	v
cross	scripts/analytical_test_case.py	/^cross = Box([0., 0.], [R, 0.])$/;"	v
cross	scripts/numerics/anaPNPS_refinement.py	/^    cross = cross,$/;"	v
cross	scripts/numerics/anaPNPS_refinement.py	/^    cross = cross.boundary("bottom"),$/;"	v
cross	scripts/numerics/anaPNPS_refinement.py	/^cross = Box([0., 0.], [R, hcross])$/;"	v
cross	scripts/numerics/anaPNPS_refinement_2D.py	/^    cross = cross,$/;"	v
cross	scripts/numerics/anaPNPS_refinement_2D.py	/^    cross = cross.boundary("bottom"),$/;"	v
cross	scripts/numerics/anaPNPS_refinement_2D.py	/^cross = Box([0., 0.], [R, hcross])$/;"	v
cross	scripts/numerics/anaPNPS_uniform.py	/^    cross = cross,$/;"	v
cross	scripts/numerics/anaPNPS_uniform.py	/^    cross = cross.boundary("bottom"),$/;"	v
cross	scripts/numerics/anaPNPS_uniform.py	/^cross = Box([0., 0.], [R, hcross])$/;"	v
cross	scripts/numerics/analyticalPNPS.py	/^    cross = cross,$/;"	v
cross	scripts/numerics/analyticalPNPS.py	/^    cross = cross.boundary("bottom"),$/;"	v
cross	scripts/numerics/analyticalPNPS.py	/^cross = Box([0., 0.], [R, hcross])$/;"	v
cross	scripts/numerics/analyticalPNPS_2D.py	/^    cross = cross,$/;"	v
cross	scripts/numerics/analyticalPNPS_2D.py	/^    cross = cross.boundary("bottom"),$/;"	v
cross	scripts/numerics/analyticalPNPS_2D.py	/^cross = Box([0., 0.], [R, hcross])$/;"	v
cross	scripts/numerics/analyticalPNPS_3D.py	/^    cross = cross,$/;"	v
cross	scripts/numerics/analyticalPNPS_3D.py	/^    cross = cross.boundary("bottom"),$/;"	v
cross	scripts/numerics/analyticalPNPS_3D.py	/^cross = Box([0., 0.], [R, hcross])$/;"	v
cross	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    cross = cross,$/;"	v
cross	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    cross = cross.boundary("bottom"),$/;"	v
cross	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^cross = Box([0., 0.], [R, hcross])$/;"	v
cross	scripts/numerics/analyticalPNP_3D.py	/^    cross = cross,$/;"	v
cross	scripts/numerics/analyticalPNP_3D.py	/^    cross = cross.boundary("bottom"),$/;"	v
cross	scripts/numerics/analyticalPNP_3D.py	/^cross = Box([0., 0.], [R, hcross])$/;"	v
cross	scripts/test_features/curved.py	/^    cross = cross$/;"	v
cross	scripts/test_features/curved.py	/^    cross = cross.boundary("bottom"),$/;"	v
cross	scripts/test_features/curved.py	/^cross = Box([0., 0.], [R, hcross])$/;"	v
crossl	nanopores/geometries/finfet.py	/^    crossl = fin.boundary("left"),$/;"	v
crossr	nanopores/geometries/finfet.py	/^    crossr = fin.boundary("right"),$/;"	v
csgExpression	nanopores/tools/box.py	/^class csgExpression(object):$/;"	c
csvfile	scripts/howorka/ivcurve.py	/^csvfile = 'burns16iv.csv'$/;"	v
csvfile	scripts/plot_scripts/IV_curve_2D.py	/^csvfile = '..\/howorkaIV'$/;"	v
csvfile	scripts/plot_scripts/script2DW.py	/^    csvfile = "data\/weiIV\/weiIV1f"$/;"	v
csvfile	scripts/plot_scripts/script2DW.py	/^    csvfile = "data\/weiIV\/weiIVs2bsam" if lsam else "data\/weiIV\/weiIVs2b"$/;"	v
ctot	scripts/howorka/test_selectivity.py	/^ctot = dolfin.assemble(u0*dolfin.Expression("2*pi*x[0]")*geo.dx())$/;"	v
ctot	scripts/numerics/selectivity1D.py	/^ctot = dolfin.assemble(u0*dolfin.Constant(Across)*geo.dx())$/;"	v
cubic_antiderivative	scripts/finfet/collocation_methods/cubic_antiderivative.m	/^function g = cubic_antiderivative ( x )$/;"	f
cubic_integrate	scripts/finfet/collocation_methods/cubic_integrate.m	/^function q = cubic_integrate ( a, b )$/;"	f
cubic_value	scripts/finfet/collocation_methods/cubic_value.m	/^function [ f, d, s, t ] = cubic_value ( x )$/;"	f
current	scripts/howorka/HoworkaTools.py	/^def current(U, geo):$/;"	f
current	scripts/howorka/selectivity.py	/^def current(U, geo):$/;"	f
current	scripts/howorka/test_selectivity.py	/^    current = pde.functionals["J"].values,$/;"	v
current	scripts/howorka/test_selectivity.py	/^def current(U, geo):$/;"	f
current	scripts/howorka/video.py	/^def current(U, geo):$/;"	f
current	scripts/numerics/diffusion_with_force_profile.py	/^def current(geo, phys, c, F):$/;"	f
current	scripts/numerics/selectivity1D.py	/^def current(U, geo, F):$/;"	f
curved	scripts/numerics/H3Drefine.py	/^curved = dict($/;"	v
cyl	nanopores/physics/default.py	/^cyl = False$/;"	v
cyl	scripts/numerics/anaPNPS_refinement.py	/^cyl = Cylinder(R=R, L=2.*Rz)$/;"	v
cyl	scripts/numerics/anaPNPS_refinement_2D.py	/^cyl = Cylinder(R=R, L=2.*Rz)$/;"	v
cyl	scripts/numerics/anaPNPS_uniform.py	/^cyl = Cylinder(R=R, L=2.*Rz)$/;"	v
cyl	scripts/test_features/curved.py	/^cyl = Cylinder(R=R, L=2.*Rz)$/;"	v
d	nanopores/tools/physicsclass.py	/^d = defaultdict(lambda :"other", {$/;"	v
d	scripts/random_walk_aHem/varplots.py	/^d=1.+5.41$/;"	v
dS	nanopores/tools/geometry.py	/^    def dS(self, string=None):$/;"	m	class:Geometry
dS	scripts/stokes_law/stokes_law.py	/^dS = geo.dS("moleculeb")$/;"	v
damp	nanopores/models/pughpore.py	/^    def damp(self, scalar):$/;"	m	class:u1D
damp	nanopores/tools/geometry.py	/^    def damp(self, scalar):$/;"	m	class:PhysicalBC
damp	nanopores/tools/illposed.py	/^    def damp(self, scalar):$/;"	m	class:AdaptableBC
damp	scripts/numerics/anaPNPS_refinement.py	/^damp = 1.,$/;"	v
damp	scripts/numerics/anaPNPS_refinement_2D.py	/^damp = 1.,$/;"	v
damp	scripts/numerics/anaPNPS_uniform.py	/^damp = 1.,$/;"	v
damp	scripts/numerics/analyticalPNPS.py	/^damp = 1.,$/;"	v
damp	scripts/numerics/analyticalPNPS_2D.py	/^damp = 1.,$/;"	v
damp	scripts/numerics/analyticalPNPS_3D.py	/^damp = 1.,$/;"	v
damp	scripts/numerics/analyticalPNP_3D.py	/^damp = 1.,$/;"	v
damp	scripts/numerics/hybrid_vs_newton.py	/^damp = 1.,$/;"	v
damp	scripts/numerics/test_fixedpoint.py	/^damp = 1.,$/;"	v
damp_bcs	nanopores/tools/illposed.py	/^    def damp_bcs(self, scalar): # works only for Constant PhysicalBC or Dampable bc.g$/;"	m	class:AdaptableLinearProblem
damp_bcs	nanopores/tools/illposed.py	/^    def damp_bcs(self, scalar):$/;"	m	class:IllposedLinearSolver
damped	nanopores/tools/illposed.py	/^    def damped(self, scalar):$/;"	m	class:AdaptableBC
data	nanopores/scripts/stokes_diffusivity.py	/^data = { $/;"	v
data	scripts/howorka/test_forcefields.py	/^data = fields.get_fields("force3D", **params)$/;"	v
data	scripts/numerics/linear-robust.py	/^data = tuple(numpy.zeros([M, N], dtype=bool) for k in range(5))$/;"	v
data	scripts/numerics/plot_robustness.py	/^data = [np.array(d) for d in data]$/;"	v
data	scripts/numerics/plot_robustness.py	/^data = nanopores.load_stuff("robustness_fixedpoint")$/;"	v
data	scripts/plot_scripts/IV_ahem.py	/^    data = Data(savedir+"result"+uid+".dat")$/;"	v
data	scripts/plot_scripts/PMFplots.py	/^    data = Data(s% (folder, file))$/;"	v
data	scripts/plot_scripts/script2DW.py	/^    data = [N, hmin, bV, Javg]$/;"	v
data_to_S1	scripts/howorka/forcefields.py	/^def data_to_S1(x, y, mesh, **values):$/;"	f
datadict	scripts/plot_scripts/IV_ahem.py	/^    datadict = data.data$/;"	v
datetime	scripts/plot_scripts/script2DWelectrodes.py	/^    datetime = str(datetime.now()),$/;"	v
debye	nanopores/physics/electrolyte.py	/^debye = lambda bulkcon, kT: dolfin.sqrt(rpermw*eperm*kT\/qq**2\/2\/mol\/bulkcon)  # debye length [m]$/;"	v
debye	nanopores/physics/howorka.py	/^debye = lambda: dolfin.sqrt(rpermw*eperm*kB*T\/qq**2\/2\/mol\/bulkcon)  # debye length [m]$/;"	v
debye	nanopores/physics/pore_dna.py	/^debye = lambda: dolfin.sqrt(rpermw*eperm*kB*T\/qq**2\/2\/mol\/bulkcon)  # debye length [m]$/;"	v
debye	nanopores/physics/pore_molecule.py	/^debye = lambda: dolfin.sqrt(rpermw*eperm*kB*T\/qq**2\/2\/mol\/bulkcon)  # debye length [m]$/;"	v
debye_l	scripts/plot_scripts/script2DWelectrodes.py	/^            debye_l = [aparams["bulkcon"], debye_length]$/;"	v
debye_l	scripts/plot_scripts/script2DWelectrodes.py	/^            debye_l = [pran[i], debye_length]$/;"	v
debye_length	scripts/plot_scripts/script2DWelectrodes.py	/^                            (physical_dict["rpermw"]*physical_dict["eperm"]*physical_dict["UT"]))$/;"	v
debye_length	scripts/plot_scripts/script3DW.py	/^                        (physical_dict["rpermw"]*physical_dict["eperm"]*physical_dict["UT"]))$/;"	v
default	nanopores/models/pughpore.py	/^    default = default$/;"	v	class:Setup
default	nanopores/models/pughpore.py	/^default = nano.Params($/;"	v
default	nanopores/physics/finfet.py	/^    default = "permSi",$/;"	v
default	nanopores/physics/howorka.py	/^    default = 0.,$/;"	v
default	nanopores/physics/pore_molecule.py	/^    default = 0.,$/;"	v
default	nanopores/tools/solvers.py	/^    default = {}$/;"	v	class:Setup
default	scripts/howorka/forcefields.py	/^default = dict($/;"	v
default	scripts/howorka/plot_selectivity.py	/^default = nanopores.user_params(**default)$/;"	v
default	scripts/howorka/selectivity.py	/^default = dict(sel_params, **f_params)$/;"	v
default_dict	scripts/plot_scripts/script2DWelectrodes.py	/^default_dict = dict(geo_dict = geo_dict, physical_dict = physical_dict)$/;"	v
default_dict	scripts/plot_scripts/script3DW.py	/^default_dict = dict(geo_dict = geo_dict, physical_dict = physical_dict)$/;"	v
default_dict	scripts/test2DW.py	/^default_dict = dict(geo_dict = geo_dict, physical_dict = physical_dict)$/;"	v
default_maxcells	nanopores/scripts/calculate_forces.py	/^default_maxcells = 16e4$/;"	v
default_maxcells2D	nanopores/scripts/calculate_forces.py	/^default_maxcells2D = 12e4$/;"	v
defaultp	nanopores/models/pughpore.py	/^defaultp = default.geop | default.physp$/;"	v
defparams	scripts/plot_scripts/script2DWelectrodes.py	/^defparams = dict((k, v) for d in configl for k, v in d.items())$/;"	v
defparams	scripts/plot_scripts/script3DW.py	/^defparams = dict((k, v) for d in configl for k, v in d.items())$/;"	v
deg	scripts/finfet/finfet-levels.py	/^deg = 0$/;"	v
det	scripts/random_walk_aHem/plot_aHem.py	/^def det(a,b,c,d):$/;"	f
dict_union	nanopores/tools/utilities.py	/^def dict_union(*seq):$/;"	f
dif_deriv	scripts/finfet/collocation_methods/dif_deriv.m	/^function [ ndp, xdp, ydp ] = dif_deriv ( nd, xd, yd )$/;"	f
dif_shift_x	scripts/finfet/collocation_methods/dif_shift_x.m	/^function [ xd, yd ] = dif_shift_x ( nd, xd, yd, xv )$/;"	f
dif_shift_zero	scripts/finfet/collocation_methods/dif_shift_zero.m	/^function [ xd, yd ] = dif_shift_zero ( nd, xd, yd )$/;"	f
dif_to_r8poly	scripts/finfet/collocation_methods/dif_to_r8poly.m	/^function c = dif_to_r8poly ( ntab, xtab, diftab )$/;"	f
dif_vals	scripts/finfet/collocation_methods/dif_vals.m	/^function yv = dif_vals ( nd, xd, yd, nv, xv )$/;"	f
diff	scripts/howorka/test_forcefields.py	/^def diff(x, y):$/;"	f
diff	scripts/plot_scripts/script2DWelectrodes.py	/^diff = project(v1+f_vmeanp-von1, FunctionSpace(geo1.mesh, "CG",1))$/;"	v
diffusion_factor	nanopores/physics/howorka.py	/^diffusion_factor = { # diffusivity of ions relative to bulk$/;"	v
diffusion_factor	nanopores/physics/pore_dna.py	/^diffusion_factor = { # diffusivity of ions relative to bulk$/;"	v
diffusion_factor	nanopores/physics/pore_molecule.py	/^diffusion_factor = { # diffusivity of ions relative to bulk$/;"	v
dim	nanopores/geometries/Cyl2D/params_geo.py	/^dim = 2$/;"	v
dim	nanopores/geometries/H_cyl_geo/params_geo.py	/^dim = 3$/;"	v
dim	nanopores/geometries/H_cyl_geo/params_geo_old.py	/^dim = 3$/;"	v
dim	nanopores/geometries/H_geo/params_geo.py	/^dim = 2$/;"	v
dim	nanopores/geometries/H_geo/params_geo_old.py	/^dim = 2$/;"	v
dim	nanopores/geometries/P_geo/params_geo.py	/^dim = 2$/;"	v
dim	nanopores/geometries/W_2D_geo/params_geo.py	/^dim = 2$/;"	v
dim	nanopores/geometries/W_3D_geo/params_geo.py	/^dim = 3$/;"	v
dim	nanopores/geometries/aHem/params_geo.py	/^dim = 3$/;"	v
dim	nanopores/physics/default.py	/^def dim(geo):$/;"	f
dim	scripts/howorka/largepore.py	/^    dim = 3,$/;"	v
dim	scripts/howorka/largepore_dna.py	/^    dim = 3,$/;"	v
direct	nanopores/tools/solvermethods.py	/^direct = dict($/;"	v
direct_reuse	nanopores/tools/solvermethods.py	/^direct_reuse = dict($/;"	v
dist	nanopores/geometries/Nanowire/subdomains.py	/^def dist(x, x0):$/;"	f
dist	nanopores/physics/finfet.py	/^    def dist(x, x0):$/;"	f	function:add_dopants
distbp	nanopores/physics/params_physical.py	/^distbp = 0.34*nm  # distance between two base pairs for dsDNA -keyser.pdf$/;"	v
distbp	scripts/misc/chargeDNA.py	/^distbp = 0.34*nm  # distance between two base pairs for dsDNA$/;"	v
div	nanopores/physics/default.py	/^def div(lscale):$/;"	f
div	nanopores/physics/pore_dna.py	/^def div():$/;"	f
div0	nanopores/physics/default.py	/^    def div0(u):$/;"	f	function:div
div0	nanopores/physics/pore_dna.py	/^    def div0(u):$/;"	f	function:div
dna	nanopores/geometries/pughpore.py	/^    dna = domain.getsubdomain("dna")$/;"	v
dna	scripts/howorka/largepore.py	/^    dna = dna,$/;"	v
dna	scripts/howorka/largepore.py	/^dna = closed_dna - pore$/;"	v
dna	scripts/howorka/largepore_dna.py	/^    dna = dna,$/;"	v
dna	scripts/howorka/largepore_dna.py	/^dna = closed_dna - enter_1 - enter_2 - enter_3 - substract_dna$/;"	v
dna	scripts/test_axisym.py	/^    dna = dna,$/;"	v
dna	scripts/test_axisym.py	/^dna = Box([r0, -l0\/2], [r1, l0\/2])$/;"	v
dna	scripts/test_box.py	/^    dna = dna,$/;"	v
dna	scripts/test_box.py	/^dna = Box([r0, -l0\/2], [r1, l0\/2])$/;"	v
dnab	scripts/howorka/largepore.py	/^    dnab = {"chargeddnab", "dnaedgeb"},$/;"	v
dnab	scripts/howorka/largepore_dna.py	/^    dnab = {"chargeddnab", "dnaupperb", "dnalowerb"},$/;"	v
dnab	scripts/test_axisym.py	/^    dnab = dna.boundary() - membrane.boundary("left"),$/;"	v
dnab	scripts/test_box.py	/^    dnab = dna.boundary() - membrane.boundary("left"),$/;"	v
dnaedgeb	scripts/howorka/largepore.py	/^        dnaedgeb = dnaedgeb,$/;"	v
dnaedgeb	scripts/howorka/largepore.py	/^    dnaedgeb = dnaedgeb,$/;"	v
dnaedgeb	scripts/howorka/largepore.py	/^dnaedgeb = closed_dna.boundary("top", "bottom") - pore$/;"	v
dnainnerb	nanopores/geometries/pughpore.py	/^        dnainnerb = domain.getboundary("dnainnerb"),$/;"	v
dnainnerb	scripts/howorka/largepore.py	/^        dnainnerb = dnainnerb,$/;"	v
dnainnerb	scripts/howorka/largepore.py	/^    dnainnerb = dnainnerb,$/;"	v
dnainnerb	scripts/howorka/largepore.py	/^dnainnerb = pore.boundary("front", "back", "left", "right")$/;"	v
dnainnerb	scripts/howorka/largepore_dna.py	/^        dnainnerb = dnainnerb,$/;"	v
dnainnerb	scripts/howorka/largepore_dna.py	/^    dnainnerb = dnainnerb,$/;"	v
dnainnerb	scripts/howorka/largepore_dna.py	/^dnainnerb = enter_1.boundary("front", "back", "left", "right") | enter_2.boundary("front", "back", "left", "right") | enter_3.boundary("front", "back", "left", "right")$/;"	v
dnalowerb	nanopores/geometries/pughpore.py	/^        dnalowerb = domain.getboundary("dnalowerb"),$/;"	v
dnalowerb	scripts/howorka/largepore_dna.py	/^        dnalowerb = dnalowerb,$/;"	v
dnalowerb	scripts/howorka/largepore_dna.py	/^    dnalowerb = dnalowerb,$/;"	v
dnalowerb	scripts/howorka/largepore_dna.py	/^dnalowerb = substract_mem.boundary("bottom") - enter_3$/;"	v
dnamemb	scripts/howorka/largepore.py	/^dnamemb = dnaouterb & closed_membrane$/;"	v
dnaouterb	nanopores/geometries/pughpore.py	/^        dnaouterb = domain.getboundary("dnaouterb"),$/;"	v
dnaouterb	scripts/howorka/largepore.py	/^        dnaouterb = dnaouterb,$/;"	v
dnaouterb	scripts/howorka/largepore.py	/^    dnaouterb = dnaouterb,$/;"	v
dnaouterb	scripts/howorka/largepore.py	/^dnaouterb = closed_dna.boundary("front", "back", "left", "right")$/;"	v
dnaouterb	scripts/howorka/largepore.py	/^dnaouterb = dnaouterb - dnamemb$/;"	v
dnaouterb	scripts/howorka/largepore_dna.py	/^            substract_mem_spanning.boundary("front", "back", "left", "right")$/;"	v
dnaouterb	scripts/howorka/largepore_dna.py	/^        dnaouterb = dnaouterb,$/;"	v
dnaouterb	scripts/howorka/largepore_dna.py	/^    dnaouterb = dnaouterb,$/;"	v
dnaouterb	scripts/howorka/largepore_dna.py	/^dnaouterb = dnaouterb | (substract_mem.boundary("front", "back", "right", "left") - membrane.boundary())$/;"	v
dnaouterb	scripts/howorka/largepore_dna.py	/^dnaouterb = dnaouterb | (substract_mem_spanning.boundary("top") - substract_mem.boundary("top"))$/;"	v
dnaqsdamp	nanopores/models/Howorka.py	/^dnaqsdamp = .25,$/;"	v
dnaqsdamp	nanopores/models/Howorka.py	/^dnaqsdamp = dnaqsdamp,$/;"	v
dnaqsdamp	nanopores/models/HoworkaSimple.py	/^dnaqsdamp = .25,$/;"	v
dnaqsdamp	nanopores/models/HoworkaSimple.py	/^dnaqsdamp = dnaqsdamp,$/;"	v
dnaqsdamp	nanopores/models/pughpore.py	/^    dnaqsdamp = .5,$/;"	v
dnaqsdamp	nanopores/physics/howorka.py	/^dnaqsdamp = 1. # DNA charge damping$/;"	v
dnaqsdamp	nanopores/physics/pore.py	/^dnaqsdamp = 1. # DNA charge damping$/;"	v
dnaqsdamp	nanopores/physics/pore_dna.py	/^dnaqsdamp = 1. # DNA charge damping$/;"	v
dnaqsdamp	nanopores/physics/pore_molecule.py	/^dnaqsdamp = 1. # DNA charge damping$/;"	v
dnaqsdamp	nanopores/scripts/calculate_forces.py	/^dnaqsdamp = 0.1$/;"	v
dnaqsdamp	nanopores/scripts/calculate_forces.py	/^dnaqsdamp = dnaqsdamp,$/;"	v
dnaqsdamp	scripts/debug.py	/^dnaqsdamp = [0.1, 0.2],$/;"	v
dnaqsdamp	scripts/howorka/forcefield.py	/^    dnaqsdamp = 0.5,$/;"	v
dnaqsdamp	scripts/howorka/forcefield2D.py	/^    dnaqsdamp = 0.5,$/;"	v
dnaqsdamp	scripts/howorka/forcefield3D.py	/^    dnaqsdamp = 0.5,$/;"	v
dnaqsdamp	scripts/howorka/forcefield3D.py	/^    dnaqsdamp = dnaqsdamp,$/;"	v
dnaqsdamp	scripts/howorka/ivcurve.py	/^    dnaqsdamp = [0.2, 0.35, 0.5],$/;"	v
dnaqsdamp	scripts/howorka/selectivity.py	/^    dnaqsdamp = 1.,$/;"	v
dnaqsdamp	scripts/howorka/selectivity.py	/^    dnaqsdamp = p.dnaqsdamp,$/;"	v
dnaqsdamp	scripts/numerics/Howorka.py	/^dnaqsdamp = .25,$/;"	v
dnaqsdamp	scripts/numerics/Howorka.py	/^dnaqsdamp = dnaqsdamp,$/;"	v
dnaqsdamp	scripts/numerics/HoworkaSimple.py	/^dnaqsdamp = .25,$/;"	v
dnaqsdamp	scripts/numerics/HoworkaSimple.py	/^dnaqsdamp = dnaqsdamp,$/;"	v
dnaqsdamp	scripts/numerics/adap2D.py	/^dnaqsdamp = .25,$/;"	v
dnaqsdamp	scripts/numerics/adap2Dpb.py	/^dnaqsdamp = 1.,$/;"	v
dnaqsdamp	scripts/numerics/adap2Dref.py	/^dnaqsdamp = 1.,$/;"	v
dnaqsdamp	scripts/numerics/adap3D.py	/^dnaqsdamp = .25,$/;"	v
dnaqsdamp	scripts/numerics/adap3Dpb.py	/^dnaqsdamp = 1.,$/;"	v
dnaqsdamp	scripts/numerics/adap3Dref.py	/^dnaqsdamp = 1.,$/;"	v
dnaqsdamp	scripts/numerics/hybrid_vs_newton.py	/^dnaqsdamp = .25,$/;"	v
dnaqsdamp	scripts/numerics/hybrid_vs_newton.py	/^dnaqsdamp = dnaqsdamp,$/;"	v
dnaqsdamp	scripts/numerics/test_bVscheme.py	/^dnaqsdamp = 1.,$/;"	v
dnaqsdamp	scripts/numerics/test_fixedpoint.py	/^dnaqsdamp = .25,$/;"	v
dnaqsdamp	scripts/numerics/test_fixedpoint.py	/^dnaqsdamp = dnaqsdamp,$/;"	v
dnaqsdamp	scripts/pughpore/test_pugh.py	/^    dnaqsdamp = .5,$/;"	v
dnaqsdamp	scripts/test2D.py	/^dnaqsdamp = 1.,$/;"	v
dnaqsdamp	scripts/test2Dold.py	/^dnaqsdamp = 0.1,$/;"	v
dnaqsdamp	scripts/test3D_GOA.py	/^dnaqsdamp = 0.,$/;"	v
dnaqsdamp	scripts/test3D_GOA.py	/^dnaqsdamp = 0.5,$/;"	v
dnaqsdamp	scripts/test_SimplePNPS.py	/^dnaqsdamp = .25$/;"	v
dnaqsdamp	scripts/test_features/howorka3D.py	/^dnaqsdamp = 0.5,$/;"	v
dnaupperb	nanopores/geometries/pughpore.py	/^        dnaupperb = domain.getboundary("dnaupperb"),$/;"	v
dnaupperb	scripts/howorka/largepore_dna.py	/^        dnaupperb = dnaupperb,$/;"	v
dnaupperb	scripts/howorka/largepore_dna.py	/^    dnaupperb = dnaupperb,$/;"	v
dnaupperb	scripts/howorka/largepore_dna.py	/^dnaupperb = closed_dna.boundary("top") - enter_1$/;"	v
dnaupperb	scripts/howorka/largepore_dna.py	/^dnaupperb = dnaupperb | enter_1.boundary("bottom") - enter_2$/;"	v
dnaupperb	scripts/howorka/largepore_dna.py	/^dnaupperb = dnaupperb | enter_2.boundary("bottom") - enter_3$/;"	v
dofs	nanopores/tools/pdesystem.py	/^    def dofs(self):$/;"	m	class:PDESystem
dofs	scripts/numerics/adap3Dref.py	/^dofs = pnps.dofs()$/;"	v
domain	nanopores/geometries/pughpore.py	/^    domain = get_domain()$/;"	v
domain	scripts/howorka/largepore.py	/^domain = reservoir$/;"	v
domain	scripts/howorka/largepore_dna.py	/^domain = reservoir$/;"	v
domain	scripts/numerics/force_profiles.py	/^domain = nanopores.Interval(a, b)$/;"	v
domain	scripts/numerics/selectivity1D.py	/^domain = Interval(a, b)$/;"	v
domain	scripts/numerics/test_fixedpoint_1D.py	/^domain = Interval(-h\/2, h\/2)$/;"	v
domain	scripts/test_axisym.py	/^domain = Box([0, -Rz], [Rx, Rz]) #| Box([0+1., -Rz+1.], [Rx+1., Rz+1.])$/;"	v
domain	scripts/test_axisym.py	/^domain = rotate_z(domain, nrot=3)$/;"	v
domain	scripts/test_box.py	/^domain = Box([0, -Rz], [Rx, Rz])$/;"	v
domain	scripts/test_features/circle.py	/^domain = Box([0., 0.], [1., 1.])$/;"	v
domain	scripts/test_features/curved.py	/^domain = Box([0., -Rz], [R, Rz])$/;"	v
domain	scripts/test_features/curved.py	/^domain = rotate_z(domain)$/;"	v
domain	scripts/toy_models/pnp1D.py	/^domain = Interval(-h\/2, h\/2)$/;"	v
domain	scripts/toy_models/pnp1Dcyl.py	/^domain = Interval(0., R)$/;"	v
domain1D	scripts/analytical_test_case.py	/^domain1D = Interval(0., R)$/;"	v
domain1D	scripts/numerics/anaPNPS_refinement.py	/^domain1D = Interval(0., R)$/;"	v
domain1D	scripts/numerics/anaPNPS_refinement_2D.py	/^domain1D = Interval(0., R)$/;"	v
domain1D	scripts/numerics/anaPNPS_uniform.py	/^domain1D = Interval(0., R)$/;"	v
domain1D	scripts/numerics/analyticalPNPS.py	/^domain1D = Interval(0., R)$/;"	v
domain1D	scripts/numerics/analyticalPNPS_2D.py	/^domain1D = Interval(0., R)$/;"	v
domain1D	scripts/numerics/analyticalPNPS_3D.py	/^domain1D = Interval(0., R)$/;"	v
domain1D	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^domain1D = Interval(0., R)$/;"	v
domain1D	scripts/numerics/analyticalPNP_3D.py	/^domain1D = Interval(0., R)$/;"	v
domain2D	scripts/analytical_test_case.py	/^domain2D = Box([0., -Rz], [R, Rz])$/;"	v
domain2D	scripts/numerics/anaPNPS_refinement.py	/^domain2D = Box([0., -Rz], [R, Rz])$/;"	v
domain2D	scripts/numerics/anaPNPS_refinement_2D.py	/^domain2D = Box([0., -Rz], [R, Rz])$/;"	v
domain2D	scripts/numerics/anaPNPS_uniform.py	/^domain2D = Box([0., -Rz], [R, Rz])$/;"	v
domain2D	scripts/numerics/analyticalPNPS.py	/^domain2D = Box([0., -Rz], [R, Rz])$/;"	v
domain2D	scripts/numerics/analyticalPNPS_2D.py	/^domain2D = Box([0., -Rz], [R, Rz])$/;"	v
domain2D	scripts/numerics/analyticalPNPS_3D.py	/^domain2D = Box([0., -Rz], [R, Rz])$/;"	v
domain2D	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^domain2D = Box([0., -Rz], [R, Rz])$/;"	v
domain2D	scripts/numerics/analyticalPNP_3D.py	/^domain2D = Box([0., -Rz], [R, Rz])$/;"	v
domain2D	scripts/test_axisym.py	/^domain2D = domain$/;"	v
domain3D	scripts/numerics/anaPNPS_refinement.py	/^domain3D = rotate_z(domain2D)$/;"	v
domain3D	scripts/numerics/anaPNPS_refinement_2D.py	/^domain3D = rotate_z(domain2D)$/;"	v
domain3D	scripts/numerics/anaPNPS_uniform.py	/^domain3D = rotate_z(domain2D)$/;"	v
domain3D	scripts/numerics/analyticalPNPS.py	/^domain3D = rotate_z(domain2D)$/;"	v
domain3D	scripts/numerics/analyticalPNPS_3D.py	/^domain3D = rotate_z(domain2D)$/;"	v
domain3D	scripts/numerics/analyticalPNP_3D.py	/^domain3D = rotate_z(domain2D)$/;"	v
domscale	nanopores/scripts/ahemFPT.py	/^domscale = 1.$/;"	v
domscale	nanopores/scripts/ahemIV.py	/^domscale = 1.$/;"	v
domscale	scripts/plot_scripts/IV_ahem.py	/^    domscale = 1,$/;"	v
domscale	scripts/plot_scripts/parameter_script.py	/^domscale = [12, 14], #nanopores.crange(1, 10, 1),$/;"	v
done	scripts/random_walk_aHem/run.py	/^done=np.sum(counter)$/;"	v
dopants	nanopores/geometries/finfet.py	/^def dopants(Ndop=Ndop):$/;"	f
dopants	nanopores/physics/finfet.py	/^    dopants = "Ddopant",$/;"	v
dopants	nanopores/physics/finfet.py	/^    dopants = "nDdopant",$/;"	v
dopants	nanopores/physics/finfet.py	/^    dopants = "permDopant",$/;"	v
dopants	nanopores/physics/finfet.py	/^dopants = [] # list of dopant coordinates$/;"	v
dopants	scripts/finfet/collocation.py	/^def dopants(Ndop, order=2):$/;"	f
dopants	scripts/finfet/finfet.py	/^    dopants=dops,$/;"	v
dops	scripts/finfet/finfet.py	/^dops = dopants(Ndop)[0]$/;"	v
drag	scripts/stokes_law/stokes_drag_comparison.py	/^drag = [exp(2.*x\/(1.-x)) for x in lam]$/;"	v
drag0	scripts/stokes_law/stokes_drag_comparison.py	/^drag0 = TT[:,1]$/;"	v
drag0rho	scripts/stokes_law/stokes_drag_comparison.py	/^drag0rho = drag0[::-1]$/;"	v
dragrho	scripts/stokes_law/stokes_drag_comparison.py	/^dragrho = [exp(2.\/x) for x in rho]$/;"	v
drain	nanopores/geometries/finfet.py	/^    drain = drain,$/;"	v
drain	nanopores/geometries/finfet.py	/^drain = Box(center=[(lw + lb)\/2, 0, 0], l=lb, w=wb, h=hb)$/;"	v
drainb	nanopores/geometries/finfet.py	/^    drainb = drain.boundary("right"),$/;"	v
drainb	nanopores/physics/finfet.py	/^    drainb = "vD",$/;"	v
drange	scripts/plot_scripts/PMF_Profile_2D.py	/^def drange(start, stop, step):$/;"	f
drange	scripts/plot_scripts/current_trace_2D.py	/^def drange(start, stop, step):$/;"	f
drange	scripts/plot_scripts/script2DW.py	/^def drange(start, stop, step):$/;"	f
ds	nanopores/tools/geometry.py	/^    def ds(self, string=None):$/;"	m	class:Geometry
dt	nanopores/scripts/test_survival.py	/^dt = 1e-4$/;"	v
dt	nanopores/scripts/test_survival.py	/^dt = 1e-5$/;"	v
dt	nanopores/tools/transientpde.py	/^    dt = 1 # default time step [s]$/;"	v	class:TransientLinearPDE
dt	scripts/survival.py	/^dt = t*frac$/;"	v
dt	scripts/test_ahem.py	/^dt = t\/100$/;"	v
du	scripts/numerics/implicit_vs_explicit.py	/^du = Function(U)$/;"	v
dv	scripts/numerics/implicit_vs_explicit.py	/^dv = Function(V)$/;"	v
dx	nanopores/tools/geometry.py	/^    def dx(self, string=None):$/;"	m	class:Geometry
dx	scripts/finfet/finfet.py	/^dx = geo.dx("fin")$/;"	v
dx	scripts/finfet/test_wire.py	/^dx = geo.dx("core")$/;"	v
edge_residual_indicator	nanopores/tools/errorest.py	/^def edge_residual_indicator(mesh,flux,force=Constant(0.0)):$/;"	f
end	scripts/random_walk_aHem/run.py	/^end=time()$/;"	v
enter_1	scripts/howorka/largepore_dna.py	/^enter_1 = Box(center=c1, l=l1, w=l1, h=h1)$/;"	v
enter_2	scripts/howorka/largepore_dna.py	/^enter_2 = Box(center=c2, l=l2, w=l2, h=h2-h1)$/;"	v
enter_3	scripts/howorka/largepore_dna.py	/^enter_3 = Box(center=cpore, l=l3, w=l3, h=hpore-h2)$/;"	v
entities_to_gmsh	nanopores/tools/balls.py	/^    def entities_to_gmsh(self, lc=.5, merge=True): $/;"	m	class:BallCollection
entities_to_gmsh	nanopores/tools/box.py	/^    def entities_to_gmsh(self, lc=.5, merge=True):        $/;"	m	class:BoxCollection
entities_to_gmsh	nanopores/tools/box.py	/^def entities_to_gmsh(entities, indexsets, esets, lc=.5):$/;"	f
entities_to_gmsh_merge	nanopores/tools/box.py	/^    def entities_to_gmsh_merge(self, lc):$/;"	m	class:BoxCollection
entities_to_gmsh_nomerge	nanopores/tools/box.py	/^    def entities_to_gmsh_nomerge(self, lc):$/;"	m	class:BoxCollection
entity_to_gmsh	nanopores/tools/box.py	/^    def entity_to_gmsh(self, e, dim, lc, gmshself=True):$/;"	m	class:BoxCollection
eperm	nanopores/physics/params_physical.py	/^eperm = 8.854e-12  # electrical permittivity [F\/m]$/;"	v
eps	nanopores/physics/pnps.py	/^        def eps(u): return sym(grad(u))$/;"	f	function:StokesProblemEqualOrder.forms
eps	nanopores/physics/pnps2Dnewton.py	/^        def eps(uu): return Constant(2.)*sym(grad(uu))$/;"	f	function:SimplePNPSProblem.forms
eps	nanopores/physics/simplepnps.py	/^        def eps(u): return sym(grad(u))$/;"	f	function:SimpleStokesProblem.forms
eps	nanopores/physics/simplepnps.py	/^        def eps(u): return sym(grad(u))$/;"	f	function:SimpleStokesProblem.precondition
eps	scripts/fluorophore_in_top_reservoir.py	/^eps = geo.pwconst("permittivity")$/;"	v
eps	scripts/howorka/test_forcefields.py	/^    eps = 0.1,$/;"	v
eps	scripts/numerics/anaPNPS_refinement.py	/^eps = phys.permittivity["water"]$/;"	v
eps	scripts/numerics/anaPNPS_refinement_2D.py	/^eps = phys.permittivity["water"]$/;"	v
eps	scripts/numerics/anaPNPS_uniform.py	/^eps = phys.permittivity["water"]$/;"	v
eps	scripts/numerics/analyticalPNPS.py	/^eps = phys.permittivity["water"]$/;"	v
eps	scripts/numerics/analyticalPNPS_2D.py	/^eps = phys.permittivity["water"]$/;"	v
eps	scripts/numerics/analyticalPNPS_3D.py	/^eps = phys.permittivity["water"]$/;"	v
eps	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^eps = phys.permittivity["water"]$/;"	v
eps	scripts/numerics/analyticalPNP_3D.py	/^eps = phys.permittivity["water"]$/;"	v
eps	scripts/numerics/implicit_vs_explicit.py	/^eps = phys.eperm*phys.rpermw$/;"	v
eps	scripts/pughpore/test_ff.py	/^eps = 5.$/;"	v
epsilon	scripts/finfet/collocation.py	/^epsilon = 0.0$/;"	v
err	scripts/FPTscript.py	/^def err(y, y_): return linalg.norm(y-y_)\/linalg.norm(y)$/;"	f
err	scripts/finfet/MLSC.py	/^def err(uh):$/;"	f
err	scripts/finfet/finfet-levels.py	/^def err(uh):$/;"	f
error	nanopores/tools/coupled.py	/^def error(u, uold):$/;"	f
error_on_nonconvergence	nanopores/physics/exittime.py	/^            error_on_nonconvergence = False,$/;"	v	class:ExitTimeProblem
error_on_nonconvergence	nanopores/physics/exittime.py	/^            error_on_nonconvergence = False,$/;"	v	class:SurvivalProblem
error_on_nonconvergence	nanopores/physics/pnps.py	/^            error_on_nonconvergence = False,$/;"	v	class:StokesProblem
error_on_nonconvergence	nanopores/physics/poisson.py	/^            error_on_nonconvergence = False,$/;"	v	class:PoissonProblem
error_on_nonconvergence	nanopores/tools/solvermethods.py	/^        error_on_nonconvergence = False,$/;"	v
error_on_nonconvergence	nanopores/tools/solvermethods.py	/^        error_on_nonconvergence = True, #False,$/;"	v
error_on_nonconvergence	scripts/numerics/adap3D.py	/^    error_on_nonconvergence = False, #True,$/;"	v
errors	scripts/finfet/MLSC.py	/^errors = [err(uh) for uh in interpolands]$/;"	v
errors	scripts/finfet/finfet-levels.py	/^errors = [err(uh) for uh in solutions]$/;"	v
est2D	scripts/numerics/plot_anaPNPS_refinement.py	/^est2D = load("anaPNPS_2D")$/;"	v
est3D	scripts/numerics/plot_anaPNPS_refinement.py	/^est3D = load("anaPNPS_3D")$/;"	v
estimate	nanopores/physics/pnps.py	/^    def estimate(self):$/;"	m	class:LinearPB
estimate	nanopores/physics/pnps.py	/^    def estimate(self):$/;"	m	class:LinearPBGoalOriented
estimate	nanopores/physics/pnps.py	/^    def estimate(self):$/;"	m	class:PNPS
estimate	nanopores/physics/pnps2D.py	/^    def estimate(self):$/;"	m	class:LinearPBAxisym
estimate	nanopores/physics/pnps2D.py	/^    def estimate(self):$/;"	m	class:LinearPBAxisymGoalOriented
estimate	nanopores/physics/pnps2D.py	/^    def estimate(self):$/;"	m	class:PNPSAxisym
estimate	nanopores/physics/pnps2D.py	/^    def estimate(self):$/;"	m	class:PoissonAxisym
estimate	nanopores/physics/pnps2Dnewton.py	/^    def estimate(self):$/;"	m	class:PNPSAxisymNewton
estimate	nanopores/physics/poisson.py	/^    def estimate(self):$/;"	m	class:Poisson
estimate	nanopores/physics/simplepnps.py	/^    def estimate(self):$/;"	m	class:SimpleLinearPBGO
estimate	nanopores/tools/pdesystem.py	/^    estimate = estimate_zz #uniform$/;"	v	class:PDESystem
estimate0	nanopores/physics/pnps2D.py	/^    def estimate0(self):$/;"	m	class:LinearPBAxisymGoalOriented
estimate_cheap	nanopores/physics/pnps.py	/^    def estimate_cheap(self):$/;"	m	class:LinearPBGoalOriented
estimate_cheap	nanopores/physics/pnps2D.py	/^    def estimate_cheap(self):$/;"	m	class:LinearPBAxisymGoalOriented
estimate_cheap	nanopores/physics/simplepnps.py	/^    def estimate_cheap(self):$/;"	m	class:SimpleLinearPBGO
estimate_uniform	nanopores/tools/pdesystem.py	/^    def estimate_uniform(self):$/;"	m	class:PDESystem
estimate_zz	nanopores/physics/pnps.py	/^    def estimate_zz(self):$/;"	m	class:PNPS
estimate_zz	nanopores/tools/pdesystem.py	/^    def estimate_zz(self):$/;"	m	class:PDESystem
estimators	scripts/numerics/plot_adaptivity_results.py	/^    estimators = load("adap%s" %dim)$/;"	v
estimators_cheap	scripts/numerics/plot_adaptivity_results.py	/^    estimators_cheap = load("adap%scheap" %dim)$/;"	v
estimators_unif	scripts/numerics/plot_adaptivity_results.py	/^    estimators_unif = load("adap%suniform" %dim)$/;"	v
eta	nanopores/physics/params_physical.py	/^eta = 1e-3  # fluid viscosity [Pa s]$/;"	v
eta	nanopores/scripts/stokes_diffusivity.py	/^eta = 1e-3$/;"	v
eta	scripts/numerics/anaPNPS_refinement.py	/^eta = phys.eta$/;"	v
eta	scripts/numerics/anaPNPS_refinement_2D.py	/^eta = phys.eta$/;"	v
eta	scripts/numerics/anaPNPS_uniform.py	/^eta = phys.eta$/;"	v
eta	scripts/numerics/analyticalPNPS.py	/^eta = phys.eta$/;"	v
eta	scripts/numerics/analyticalPNPS_2D.py	/^eta = phys.eta$/;"	v
eta	scripts/numerics/analyticalPNPS_3D.py	/^eta = phys.eta$/;"	v
eta	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^eta = phys.eta$/;"	v
eta	scripts/numerics/analyticalPNP_3D.py	/^eta = phys.eta$/;"	v
eta	scripts/pughpore/randomwalk/run.py	/^eta = physp.eta$/;"	v
eta	scripts/stokes_law/stokes_law.py	/^eta = 1e-3  # fluid viscosity [Pa*s]$/;"	v
eta	scripts/stokes_law/stokes_law_2D_stats.py	/^eta = 1e-3  # fluid viscosity [Pa*s]$/;"	v
etp	nanopores/scripts/test_survival.py	/^etp = LinearPDE(geo, ExitTimeProblem, phys, F=F)$/;"	v
etp	scripts/survival.py	/^etp = LinearPDE(geo, ExitTimeProblem, phys, F=F)$/;"	v
etp	scripts/test_ahem.py	/^etp = LinearPDE(geo, ExitTimeProblem, phys, F=F, exitb=exitb)$/;"	v
etp_noF	nanopores/scripts/test_survival.py	/^etp_noF = LinearPDE(geo, ExitTimeProblem, phys, F=Constant((0.0,0.0,0.0)))$/;"	v
etp_noF	scripts/test_ahem.py	/^etp_noF = LinearPDE(geo, ExitTimeProblem, phys, F=Constant((0.,0.,0.)), exitb=exitb)$/;"	v
eval	nanopores/models/pughpore.py	/^    def eval(self, value, x):$/;"	m	class:u1D
eval	nanopores/tools/box.py	/^    def eval(self): # is designed to return a set$/;"	m	class:csgExpression
eval	nanopores/tools/utilities.py	/^        def eval(self, value, x):$/;"	m	class:convert2D.Convert2DExpression
eval	nanopores/tools/utilities.py	/^        def eval(self, value, x):$/;"	m	class:convert3D.Convert3DExpression
eval	nanopores/tools/utilities.py	/^    def eval(self, value, x):$/;"	m	class:uCross
eval	nanopores/tools/utilities.py	/^    def eval(self, value, x):$/;"	m	class:uCrossVector
eval	scripts/analytical_test_case.py	/^    def eval(self, value, x):$/;"	m	class:Jm
eval	scripts/analytical_test_case.py	/^    def eval(self, value, x):$/;"	m	class:Jp
eval	scripts/analytical_test_case.py	/^    def eval(self, value, x):$/;"	m	class:Potential
eval	scripts/howorka/eikonal.py	/^        def eval(self, value, x):$/;"	m	class:boundary_force.Potential
eval	scripts/howorka/forcefields.py	/^        def eval(self, value, x):$/;"	m	class:lambda_to_S1.expr
eval	scripts/howorka/test_forcefields.py	/^        def eval(self, value, x):$/;"	m	class:S1.expr
eval	scripts/numerics/adap3Dref.py	/^    def eval(self, value, x):$/;"	m	class:w3D
eval	scripts/numerics/anaPNPS_refinement.py	/^    def eval(self, value, x):$/;"	m	class:JmPB
eval	scripts/numerics/anaPNPS_refinement.py	/^    def eval(self, value, x):$/;"	m	class:JpPB
eval	scripts/numerics/anaPNPS_refinement.py	/^    def eval(self, value, x):$/;"	m	class:cmPBEx
eval	scripts/numerics/anaPNPS_refinement.py	/^    def eval(self, value, x):$/;"	m	class:cpPBEx
eval	scripts/numerics/anaPNPS_refinement.py	/^    def eval(self, value, x):$/;"	m	class:pPBEx
eval	scripts/numerics/anaPNPS_refinement.py	/^    def eval(self, value, x):$/;"	m	class:vPB
eval	scripts/numerics/anaPNPS_refinement_2D.py	/^    def eval(self, value, x):$/;"	m	class:JmPB
eval	scripts/numerics/anaPNPS_refinement_2D.py	/^    def eval(self, value, x):$/;"	m	class:JpPB
eval	scripts/numerics/anaPNPS_refinement_2D.py	/^    def eval(self, value, x):$/;"	m	class:cmPBEx
eval	scripts/numerics/anaPNPS_refinement_2D.py	/^    def eval(self, value, x):$/;"	m	class:cpPBEx
eval	scripts/numerics/anaPNPS_refinement_2D.py	/^    def eval(self, value, x):$/;"	m	class:pPBEx
eval	scripts/numerics/anaPNPS_refinement_2D.py	/^    def eval(self, value, x):$/;"	m	class:vPB
eval	scripts/numerics/anaPNPS_uniform.py	/^    def eval(self, value, x):$/;"	m	class:JmPB
eval	scripts/numerics/anaPNPS_uniform.py	/^    def eval(self, value, x):$/;"	m	class:JpPB
eval	scripts/numerics/anaPNPS_uniform.py	/^    def eval(self, value, x):$/;"	m	class:cmPBEx
eval	scripts/numerics/anaPNPS_uniform.py	/^    def eval(self, value, x):$/;"	m	class:cpPBEx
eval	scripts/numerics/anaPNPS_uniform.py	/^    def eval(self, value, x):$/;"	m	class:pPBEx
eval	scripts/numerics/anaPNPS_uniform.py	/^    def eval(self, value, x):$/;"	m	class:vPB
eval	scripts/numerics/analyticalPNPS.py	/^    def eval(self, value, x):$/;"	m	class:JmPB
eval	scripts/numerics/analyticalPNPS.py	/^    def eval(self, value, x):$/;"	m	class:JpPB
eval	scripts/numerics/analyticalPNPS.py	/^    def eval(self, value, x):$/;"	m	class:cmPBEx
eval	scripts/numerics/analyticalPNPS.py	/^    def eval(self, value, x):$/;"	m	class:cpPBEx
eval	scripts/numerics/analyticalPNPS.py	/^    def eval(self, value, x):$/;"	m	class:pPBEx
eval	scripts/numerics/analyticalPNPS.py	/^    def eval(self, value, x):$/;"	m	class:vPB
eval	scripts/numerics/analyticalPNPS_2D.py	/^    def eval(self, value, x):$/;"	m	class:JmPB
eval	scripts/numerics/analyticalPNPS_2D.py	/^    def eval(self, value, x):$/;"	m	class:JpPB
eval	scripts/numerics/analyticalPNPS_2D.py	/^    def eval(self, value, x):$/;"	m	class:vPB
eval	scripts/numerics/analyticalPNPS_3D.py	/^    def eval(self, value, x):$/;"	m	class:JmPB
eval	scripts/numerics/analyticalPNPS_3D.py	/^    def eval(self, value, x):$/;"	m	class:JpPB
eval	scripts/numerics/analyticalPNPS_3D.py	/^    def eval(self, value, x):$/;"	m	class:cmPBEx
eval	scripts/numerics/analyticalPNPS_3D.py	/^    def eval(self, value, x):$/;"	m	class:cpPBEx
eval	scripts/numerics/analyticalPNPS_3D.py	/^    def eval(self, value, x):$/;"	m	class:pPBEx
eval	scripts/numerics/analyticalPNPS_3D.py	/^    def eval(self, value, x):$/;"	m	class:vPB
eval	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    def eval(self, value, x):$/;"	m	class:JmPB
eval	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    def eval(self, value, x):$/;"	m	class:JpPB
eval	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    def eval(self, value, x):$/;"	m	class:vPB
eval	scripts/numerics/analyticalPNP_3D.py	/^    def eval(self, value, x):$/;"	m	class:JmPB
eval	scripts/numerics/analyticalPNP_3D.py	/^    def eval(self, value, x):$/;"	m	class:JpPB
eval	scripts/numerics/analyticalPNP_3D.py	/^    def eval(self, value, x):$/;"	m	class:pPBEx
eval	scripts/numerics/analyticalPNP_3D.py	/^    def eval(self, value, x):$/;"	m	class:vPB
eval	scripts/numerics/implicit_vs_explicit.py	/^    def eval(self, value, x):$/;"	m	class:vAna
eval_cell	nanopores/tools/geometry.py	/^    def eval_cell(self, values, x, cell):$/;"	m	class:Dict2Expression
evalsets	nanopores/tools/box.py	/^    def evalsets(self): # indexset for every dimension$/;"	m	class:csgExpression
evaluate	nanopores/tools/illposed.py	/^    def evaluate(self):$/;"	m	class:Functional
evaluate	nanopores/tools/pdesystem.py	/^    def evaluate(self, f):$/;"	m	class:PDESystem
ex	scripts/random_walk_aHem/varplots.py	/^ex=np.array([expected(xaxis[i]) for i in range(1,xaxis.shape[0])])$/;"	v
ex	scripts/random_walk_aHem/varplots.py	/^ex=np.insert(ex,0,d)$/;"	v
exactMqv	nanopores/physics/howorka.py	/^exactMqv = False$/;"	v
exactMqv	nanopores/physics/pore_molecule.py	/^exactMqv = False$/;"	v
exactMqv	scripts/numerics/adap2Dpb.py	/^exactMqv = not adaptq,$/;"	v
exactMqv	scripts/numerics/adap3D.py	/^exactMqv = not adaptq,$/;"	v
exactMqv	scripts/numerics/adap3Dpb.py	/^exactMqv = not adaptq,$/;"	v
exactMqv	scripts/numerics/adap3Dref.py	/^exactMqv = not adaptq,$/;"	v
excludes	nanopores/tools/box.py	/^    def excludes(self, C):$/;"	m	class:csgExpression
exists	nanopores/tools/fields.py	/^def exists(name, **params):$/;"	f
exit1	scripts/test_ahem.py	/^exit1 = {"upperb"}$/;"	v
exit2	scripts/test_ahem.py	/^exit2 = {"upperb", "lowerb"}$/;"	v
exit_i	nanopores/scripts/ahemFPT.py	/^exit_i = 1$/;"	v
exit_i	nanopores/scripts/ahemIV.py	/^exit_i = 1$/;"	v
exit_i	nanopores/scripts/test_survival.py	/^    exit_i = None,$/;"	v
exit_i	scripts/survival.py	/^    exit_i = 0,$/;"	v
exit_i	scripts/test_ahem.py	/^    exit_i = None,$/;"	v
exit_times	nanopores/scripts/test_survival.py	/^def exit_times(tau):$/;"	f
exit_times	scripts/survival.py	/^def exit_times(tau):$/;"	f
exit_times	scripts/test_ahem.py	/^def exit_times(tau):$/;"	f
exitprop	scripts/random_walk_aHem/plot_probability.py	/^exitprop = np.zeros(fineness)$/;"	v
exittime	scripts/random_walk_aHem/plot_probability.py	/^exittime = np.linspace(0.,1.,fineness)*maxtime$/;"	v
expected	scripts/random_walk_aHem/varplots.py	/^def expected(t):$/;"	f
explicit	scripts/numerics/implicit_vs_explicit.py	/^def explicit():$/;"	f
expr	scripts/howorka/forcefields.py	/^    class expr(dolfin.Expression):$/;"	c	function:lambda_to_S1
expr	scripts/howorka/test_forcefields.py	/^    class expr(dolfin.Expression):$/;"	c	function:S1
expr	scripts/numerics/matplotfem2d.py	/^    expr = dolfin.Expression("sin(x[0])")$/;"	v
extend_from	nanopores/tools/functions1D.py	/^    def extend_from(self, f, a0, b0, left=0., right=0.):$/;"	m	class:Geometry1D
extrapolate	nanopores/tools/illposed.py	/^    def extrapolate(self):$/;"	m	class:Functional
f	nanopores/geometries/aHem/params_geo.py	/^f = 0.5*nm$/;"	v
f	nanopores/scripts/simulation2D.py	/^        def f(**x):$/;"	f	function:simulate
f	nanopores/scripts/simulation2D.py	/^    def f(params): return method(**params)$/;"	f	function:iterate_in_parallel
f	nanopores/tools/functions1D.py	/^    f = geo.function_from_lambda(numpy.sin)$/;"	v	class:Geometry1D
f	scripts/howorka/test_forcefields.py	/^    def f(x1): # single-eval interpoland$/;"	f	function:interpoland
f	scripts/random_walk_aHem/varplots.py	/^def f(x,t):$/;"	f
f0	scripts/plot_scripts/PMF_Profile_2D.py	/^    f0 = f$/;"	v
f_dict	scripts/plot_scripts/IV_curve_2D.py	/^    f_dict = pnps.get_functionals()$/;"	v
f_dict	scripts/plot_scripts/script2DW.py	/^    f_dict = pnps.get_functionals()$/;"	v
f_dict	scripts/plot_scripts/script2DWelectrodes.py	/^        f_dict = pnps.get_functionals()$/;"	v
f_params	scripts/howorka/selectivity.py	/^f_params = dict($/;"	v
f_vmeanp	scripts/plot_scripts/script2DWelectrodes.py	/^f_vmeanp = Constant(vmeanp)$/;"	v
fac	scripts/pughpore/sobol_points.py	/^fac = np.array([.5*l0*1.2,.5*l0,.5*l1-rMolecule,.5*l1-rMolecule,.5*l2-rMolecule,.5*l3-rMolecule,.5*l3-rMolecule,.5*l3-rMolecule,.5*l3-rMolecule,.5*l3-rMolecule])$/;"	v
fejer2_compute	scripts/finfet/collocation_methods/fejer2_compute.m	/^function [ x, w ] = fejer2_compute ( order )$/;"	f
fejer2_compute_points	scripts/finfet/collocation_methods/fejer2_compute_points.m	/^function points = fejer2_compute_points ( order )$/;"	f
fejer2_compute_points_np	scripts/finfet/collocation_methods/fejer2_compute_points_np.m	/^function points = fejer2_compute_points_np ( order, np, p )$/;"	f
fejer2_compute_weights	scripts/finfet/collocation_methods/fejer2_compute_weights.m	/^function w = fejer2_compute_weights ( order )$/;"	f
fejer2_compute_weights_np	scripts/finfet/collocation_methods/fejer2_compute_weights_np.m	/^function w = fejer2_compute_weights_np ( order, np, p )$/;"	f
fem2contour	scripts/numerics/matplotfem2d.py	/^def fem2contour(u):$/;"	f
ff	nanopores/tools/functions1D.py	/^        def ff(z):$/;"	f	function:Geometry1D.extend_from
field	scripts/pughpore/plotJ.py	/^    field = f.get_fields("pughcenter", bulkcon=1e3, Qmol=8, h=h)$/;"	v
fieldsplit	nanopores/physics/pnps.py	/^        fieldsplit = False, #True,$/;"	v	class:StokesProblem
fieldsplit	nanopores/tools/solvermethods.py	/^    fieldsplit = False, #True,$/;"	v
fig	scripts/analytical_test_case.py	/^fig = plot1D({"PB":phi}, (0., R, 101), "x", dim=1, axlabels=("r [nm]", "potential [V]"))$/;"	v
fig	scripts/analytical_test_case.py	/^fig = plot1D({"c+ PB":cpPB, "c- PB":cmPB}, (0., R, 101), "x", dim=1, axlabels=("r [nm]", "concentration [mol\/m**3]"))$/;"	v
fig	scripts/howorka/ivcurve.py	/^fig = plt.gcf()$/;"	v
fig	scripts/numerics/anaPNPS_refinement.py	/^fig = plt.figure("anaPNPS", figsize=figsize)$/;"	v
fig	scripts/numerics/analyticalPNPS.py	/^fig = plt.figure("hybrid", figsize=figsize)$/;"	v
fig	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^fig = plot1D({"p PB":pPB}, (0., R, 101), "x", dim=1, axlabels=("r [nm]", "velocity [m\/s]"))$/;"	v
fig	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^fig = plot1D({"p PNP (2D)":p}, (0., R, 101), "x", dim=2, axlabels=("r [nm]", "velocity [m\/s]"), fig=fig)$/;"	v
fig	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^fig = plot1D({"uz PB":uPB}, (0., R, 101), "x", dim=1, axlabels=("r [nm]", "velocity [m\/s]"))$/;"	v
fig	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^fig = plot1D({"uz PNP (2D)":u[1]}, (0., R, 101), "x", dim=2, axlabels=("r [nm]", "velocity [m\/s]"), fig=fig)$/;"	v
fig	scripts/numerics/diffusion_with_force_profile.py	/^        fig = plt.gcf()$/;"	v
fig	scripts/numerics/plot_adaptivity_results.py	/^    fig = plt.gcf()$/;"	v
fig	scripts/numerics/plot_anaPNPS_refinement.py	/^fig = plt.figure("refinement", figsize=figsize)$/;"	v
fig	scripts/numerics/plot_fixedpoint.py	/^fig = plt.gcf()$/;"	v
fig	scripts/numerics/plot_robustness.py	/^fig = plt.gcf()$/;"	v
fig	scripts/pughpore/sobol_points.py	/^    fig = plt.figure()$/;"	v
fig	scripts/random_walk_aHem/varplots.py	/^fig=plt.figure(figsize=(18,5))$/;"	v
fig1	scripts/howorka/plot_forcefield.py	/^    fig1 = plt.figure("Fel")$/;"	v
fig2	scripts/howorka/plot_forcefield.py	/^    fig2 = plt.figure("Fdrag")$/;"	v
figsize	scripts/numerics/anaPNPS_refinement.py	/^figsize = 5*0.8, 4*0.8$/;"	v
figsize	scripts/numerics/analyticalPNPS.py	/^figsize = 5*0.8, 4*0.8$/;"	v
figsize	scripts/numerics/plot_anaPNPS_refinement.py	/^figsize = 5*0.8, 4*0.8$/;"	v
figures	scripts/numerics/diffusion_with_force_profile.py	/^figures = os.path.expanduser("~") + "\/papers\/pnps-numerics\/figures\/"    $/;"	v
figures	scripts/numerics/selectivity1D.py	/^figures = os.path.expanduser("~") + "\/papers\/pnps-numerics\/figures\/"    $/;"	v
files	scripts/plot_scripts/PMFplots.py	/^files = [f for f in os.listdir(folder) if f.startswith("PMF") and f.endswith(".dat")]$/;"	v
filestr	scripts/plot_scripts/script2DWelectrodes.py	/^filestr = timeidstr+".json"$/;"	v
fin	nanopores/geometries/finfet.py	/^    fin = fin,$/;"	v
fin	nanopores/geometries/finfet.py	/^fin = Box(center=[0, 0, 0], l=lw, w=ww, h=hw)$/;"	v
fin	nanopores/physics/finfet.py	/^    fin = "Dfin",$/;"	v
fin	nanopores/physics/finfet.py	/^    fin = "nDfin",$/;"	v
fineness	scripts/random_walk_aHem/plot_probability.py	/^fineness = 1e4$/;"	v
finfet	nanopores/geometries/finfet.py	/^finfet = fin | source | drain | oxide | gate$/;"	v
finish	nanopores/tools/transientpde.py	/^    def finish(self):$/;"	m	class:TimeDependentPlotter
finish_plots	nanopores/physics/exittime.py	/^    def finish_plots(self):$/;"	m	class:SuccessfulExit
finish_plots	nanopores/tools/transientpde.py	/^    def finish_plots(self):$/;"	m	class:TransientLinearPDE
firstfunction	nanopores/tools/illposed.py	/^    def firstfunction(self):$/;"	m	class:Functional
fit	scripts/FPTscript.py	/^def fit(x, y, k): return polyval(polyfit(x, y, k), x)$/;"	f
fixedpoint	nanopores/physics/simplepnps.py	/^    def fixedpoint(self, bVstep=0.025, ipnp=4):$/;"	m	class:PNPSFixedPointbV
fixedpoint	nanopores/physics/simplepnps.py	/^    def fixedpoint(self, ipnp=2):$/;"	m	class:PNPSFixedPoint
fixedpoint	nanopores/tools/coupled.py	/^    def fixedpoint(self, tol=None, damp=None):$/;"	m	class:CoupledSolver
fixedpoint	scripts/numerics/plot_fixedpoint.py	/^fixedpoint = load("fixedpoint")$/;"	v
fluid	scripts/howorka/largepore.py	/^    fluid = {"bulkfluid", "pore"},$/;"	v
fluid	scripts/howorka/largepore_dna.py	/^    fluid = {"bulkfluid", "pore"},$/;"	v
fluid	scripts/numerics/anaPNPS_refinement.py	/^    fluid = {"main", "cross"},$/;"	v
fluid	scripts/numerics/anaPNPS_refinement_2D.py	/^    fluid = {"main", "cross"},$/;"	v
fluid	scripts/numerics/anaPNPS_uniform.py	/^    fluid = {"main", "cross"},$/;"	v
fluid	scripts/numerics/analyticalPNPS.py	/^    fluid = {"main", "cross"},$/;"	v
fluid	scripts/numerics/analyticalPNPS_2D.py	/^    fluid = {"main", "cross"},$/;"	v
fluid	scripts/numerics/analyticalPNPS_3D.py	/^    fluid = {"main", "cross"},$/;"	v
fluid	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    fluid = {"main", "cross"},$/;"	v
fluid	scripts/numerics/analyticalPNP_3D.py	/^    fluid = {"main", "cross"},$/;"	v
fluid	scripts/numerics/selectivity1D.py	/^    fluid = {"bulkfluid", "pore"},$/;"	v
fluid	scripts/numerics/test_fixedpoint_1D.py	/^    fluid = domain - membrane,$/;"	v
fluid	scripts/test_axisym.py	/^    fluid = domain - (dna | membrane | pore),$/;"	v
fluid	scripts/toy_models/pnp1D.py	/^    fluid = domain - membrane,$/;"	v
fluocon	scripts/howorka/selectivity.py	/^    fluocon = 100., # initial concentration [mM] in upper reservoir$/;"	v
fmt	scripts/howorka/HoworkaTools.py	/^def fmt(x, pos):$/;"	f
fmt	scripts/howorka/plot_forcefield.py	/^def fmt(x, pos):$/;"	f
fmt	scripts/howorka/test_forcefields.py	/^def fmt(x, pos):$/;"	f
fmt	scripts/howorka/video.py	/^def fmt(x, pos):$/;"	f
fmt	scripts/plot_forces_aHem/combine2.py	/^def fmt(x, pos):$/;"	f
fmt	scripts/plot_forces_aHem/ppt.py	/^def fmt(x, pos):$/;"	f
fname	scripts/numerics/PMF.py	/^fname = folder + "%s_Q%.1f.eps" % ("%s", Qmol)$/;"	v
fname	scripts/plot_scripts/IV_curve_2D.py	/^fname = ("data\/%s_N%sdnad%.2frD%.2f" %(csvfile, N, phys.dnaqsdamp, phys.rDPore) )$/;"	v
fname	scripts/plot_scripts/PMF_Profile_2D.py	/^fname = "PMF2D%.2fnm.eps" %(params["rMolecule"]*1e9,)$/;"	v
fname	scripts/plot_scripts/current_trace_2D.py	/^fname = "current_%dmV_%de_%.2fnm.eps" %(int(phys_params["bV"]*1000), int(phys_params["Qmol"]\/qq), params["rMolecule"]*1e9)$/;"	v
fname	scripts/plot_scripts/script2DW.py	/^fname = ("%s_N%s_lsam%.1f_r0factor%.2f" %(csvfile, N, lsam*1e9, r0factor) )$/;"	v
fname	scripts/stokes_law/stokes_law_2D_stats.py	/^    fname = "confinement_%s.eps" %s$/;"	v
fname	scripts/stokes_law/stokes_law_2D_stats.py	/^    fname = "confinement_%s_loglog.eps" %s$/;"	v
fname	scripts/stokes_law/stokes_law_2D_stats.py	/^    fname = "confinement_%s_semilogx.eps" %s$/;"	v
folder	scripts/numerics/PMF.py	/^folder = os.path.expanduser("~") + "\/papers\/pnps-numerics\/figure_material\/PMF\/"$/;"	v
folder	scripts/numerics/force_profiles.py	/^folder = os.path.expanduser("~") + "\/papers\/pnps-numerics\/data\/forces\/"$/;"	v
folder	scripts/plot_scripts/PMFplots.py	/^folder = s% (gitrepo, "np-sim\/simulations")$/;"	v
forcefieldS1	scripts/howorka/forcefields.py	/^def forcefieldS1(overwrite=False, implicit=False, **params):$/;"	f
forcefieldS1_explicit	scripts/howorka/forcefields.py	/^def forcefieldS1_explicit(overwrite=False, **params):$/;"	f
forcefieldS1_implicit	scripts/howorka/forcefields.py	/^def forcefieldS1_implicit(overwrite=False, **params):$/;"	f
forces	nanopores/physics/pnps.py	/^    def forces(self):$/;"	m	class:PNPS
forces	scripts/plot_scripts/PMFplots.py	/^forces = ["Fbarevol2","Fp2","Fshear2"]$/;"	v
forms	nanopores/physics/convdiff.py	/^    def forms(V, geo, phys, u, F, f=None, dt=None, steady=False, cyl=False):$/;"	m	class:ConvectionDiffusionProblem
forms	nanopores/physics/exittime.py	/^    def forms(V, geo, phys, F):$/;"	m	class:ExitTimeProblem
forms	nanopores/physics/exittime.py	/^    def forms(V, geo, phys, u, F, dt=None, steady=False):$/;"	m	class:SurvivalProblem
forms	nanopores/physics/pb.py	/^    def forms(V, geo, phys):$/;"	m	class:LinearNonstandardPBProblem
forms	nanopores/physics/pb.py	/^    def forms(V, geo, phys, u):$/;"	m	class:NonstandardPBProblem
forms	nanopores/physics/pb.py	/^    def forms(V, geo, phys, u):$/;"	m	class:PoissonProblem
forms	nanopores/physics/pnps.py	/^    def forms(V, geo, f):$/;"	m	class:LinearPBProblem
forms	nanopores/physics/pnps.py	/^    def forms(W, geo, f):$/;"	m	class:StokesProblem
forms	nanopores/physics/pnps.py	/^    def forms(W, geo, f):$/;"	m	class:StokesProblemEqualOrder
forms	nanopores/physics/pnps2D.py	/^    def forms(V, geo, f):$/;"	m	class:LinearPBProblemAxisym
forms	nanopores/physics/pnps2D.py	/^    def forms(V, geo, f):$/;"	m	class:PoissonProblemAxisym
forms	nanopores/physics/pnps2D.py	/^    def forms(W, geo, f):$/;"	m	class:StokesProblemAxisym
forms	nanopores/physics/pnps2D.py	/^    def forms(W, geo, f):$/;"	m	class:StokesProblemAxisymEqualOrder
forms	nanopores/physics/pnps2Dnewton.py	/^    def forms(V, geo, phys, u, cyl=False, beta=0.01):$/;"	m	class:SimplePNPSProblem
forms	nanopores/physics/poisson.py	/^    def forms(V, geo, f):$/;"	m	class:PoissonProblem
forms	nanopores/physics/poisson.py	/^    def forms(V, geo, f):$/;"	m	class:PoissonProblemAxisym
forms	nanopores/physics/poisson.py	/^    def forms(V, geo, f):$/;"	m	class:PoissonProblemPureNeumannAxisym
forms	nanopores/physics/simplepnps.py	/^    def forms(V, geo, phys, cyl=False):$/;"	m	class:SimpleLinearPBProblem
forms	nanopores/physics/simplepnps.py	/^    def forms(V, geo, phys, f=None, cyl=False, beta=.01, conservative=True):$/;"	m	class:SimpleStokesProblem
forms	nanopores/physics/simplepnps.py	/^    def forms(V, geo, phys, f=None, dxf=None, cyl=False):$/;"	m	class:SimplePoissonProblem
forms	nanopores/physics/simplepnps.py	/^    def forms(V, geo, phys, u, cp, cm, dx_ions, cyl=False):$/;"	m	class:LinearSGPoissonProblem
forms	nanopores/physics/simplepnps.py	/^    def forms(V, geo, phys, u, cyl=False):$/;"	m	class:SimplePBProblem
forms	nanopores/physics/simplepnps.py	/^    def forms(V, geo, phys, u, uold, cp, cm, dx_ions, cyl=False):$/;"	m	class:SGPoissonProblem
forms	nanopores/physics/simplepnps.py	/^    def forms(V, geo, phys, u, ustokes=None, cyl=False):$/;"	m	class:SimplePNPProblem
forms	nanopores/physics/simplepnps.py	/^    def forms(V, geo, phys, z, E, D=None, ustokes=None, cyl=False):$/;"	m	class:SimpleNernstPlanckProblem
forms	scripts/numerics/diffusion_with_force_profile.py	/^    def forms(V, geo, phys, F):$/;"	m	class:DiffusionProblem1D
formt	scripts/howorka/HoworkaTools.py	/^formt = matplotlib.ticker.FuncFormatter(fmt)$/;"	v
formt	scripts/howorka/video.py	/^formt = matplotlib.ticker.FuncFormatter(fmt)$/;"	v
formt	scripts/plot_forces_aHem/combine2.py	/^formt = matplotlib.ticker.FuncFormatter(fmt)$/;"	v
formt	scripts/plot_forces_aHem/ppt.py	/^formt = matplotlib.ticker.FuncFormatter(fmt)$/;"	v
fpcolors	scripts/numerics/plot_robustness.py	/^fpcolors = ["#0000ff", "#6666ff", "#ccccff", "w"]$/;"	v
fpdata	scripts/numerics/plot_robustness.py	/^fpdata = [$/;"	v
fplabels	scripts/numerics/plot_robustness.py	/^fplabels = [$/;"	v
frac	nanopores/models/Howorka.py	/^frac = 0.5,$/;"	v
frac	nanopores/models/HoworkaSimple.py	/^frac = 0.5,$/;"	v
frac	nanopores/models/pughpore.py	/^    frac = 0.2,$/;"	v
frac	scripts/numerics/Howorka.py	/^frac = 0.5,$/;"	v
frac	scripts/numerics/HoworkaSimple.py	/^frac = 0.5,$/;"	v
frac	scripts/numerics/adap2D.py	/^frac = 0.5,$/;"	v
frac	scripts/numerics/adap2D.py	/^frac = 1. if uniform else frac$/;"	v
frac	scripts/numerics/adap3D.py	/^frac = .2,$/;"	v
frac	scripts/numerics/adap3D.py	/^frac = 1. if uniform else frac$/;"	v
frac	scripts/numerics/adap3Dpb.py	/^frac = .5,$/;"	v
frac	scripts/numerics/adap3Dref.py	/^frac = .5,$/;"	v
frac	scripts/pughpore/test_pugh.py	/^    frac = 0.2,$/;"	v
frac	scripts/survival.py	/^frac = .01$/;"	v
frac3D	nanopores/models/Howorka.py	/^frac3D = 0.2,$/;"	v
front	nanopores/tools/box.py	/^    front = 2,$/;"	v
fs	scripts/numerics/adap2Dref.py	/^    fs = pnps.get_functionals()$/;"	v
fs	scripts/numerics/adap3Dref.py	/^fs = pnps.get_functionals()$/;"	v
fs	scripts/plot_scripts/PMF_Profile_2D.py	/^    fs = pnps.get_functionals()$/;"	v
fs	scripts/test2D.py	/^    fs = pnps.get_functionals()$/;"	v
fs	scripts/test2Dold.py	/^    fs = pnps.get_functionals()$/;"	v
fs	scripts/test3D_GOA.py	/^    fs = pnps.get_functionals()$/;"	v
func	scripts/plot_scripts/IV_ahem.py	/^    func = lambda i: i - amV\/(r+R) - r*I0\/(r+R)*(numpy.exp((amV-R*i)\/V0)-1)$/;"	v
function2values	scripts/howorka/HoworkaTools.py	/^def function2values(u):$/;"	f
function2values	scripts/howorka/video.py	/^def function2values(u):$/;"	f
function_from_lambda	nanopores/tools/functions1D.py	/^    def function_from_lambda(self, f):$/;"	m	class:Geometry1D
function_from_lambda	scripts/howorka/HoworkaTools.py	/^def function_from_lambda(f):$/;"	f
function_from_lambda	scripts/howorka/forcefield.py	/^def function_from_lambda(f):$/;"	f
function_from_lambda	scripts/numerics/force_profiles.py	/^def function_from_lambda(f):$/;"	f
function_from_values	nanopores/tools/functions1D.py	/^    def function_from_values(self, values):$/;"	m	class:Geometry1D
function_from_values	scripts/howorka/HoworkaTools.py	/^def function_from_values(values):$/;"	f
function_from_values	scripts/howorka/forcefield.py	/^def function_from_values(values):$/;"	f
function_from_values	scripts/numerics/force_profiles.py	/^def function_from_values(values):$/;"	f
function_space	nanopores/tools/geometry.py	/^    def function_space(self):$/;"	m	class:PhysicalBC
fv	scripts/howorka/test_forcefields.py	/^    def fv(x1): # vectorized interpoland$/;"	f	function:interpoland
g	scripts/random_walk_aHem/varplots.py	/^def g(x,t):$/;"	f
g2	scripts/random_walk_aHem/varplots.py	/^def g2(x,t):$/;"	f
gamma	scripts/pughpore/diffusion.py	/^gamma = abs(F[2])$/;"	v
gamma	scripts/random_walk_aHem/run.py	/^gamma=(6*pi*0.5*visc) #friction [microgramm\/s]$/;"	v
gate	nanopores/geometries/finfet.py	/^    gate = gate - oxide,$/;"	v
gate	nanopores/geometries/finfet.py	/^gate = Box(center=[0, 0, (t1 + t2)\/2], l=ll, w= ww + 2*(t1 + t2), h= hw + (t1 + t2))$/;"	v
gate	nanopores/physics/finfet.py	/^    gate = 0.,$/;"	v
gateb	nanopores/geometries/finfet.py	/^    gateb = gate.boundary("top", "front", "back"),$/;"	v
gateb	nanopores/physics/finfet.py	/^    gateb = "vG",$/;"	v
gather_currents	scripts/numerics/diffusion_with_force_profile.py	/^def gather_currents(name, c0):$/;"	f
gather_currents	scripts/numerics/selectivity1D.py	/^def gather_currents(name, rMol, DPore=1.):$/;"	f
gauss	scripts/howorka/interpolation_points.py	/^gauss = np.polynomial.legendre.leggauss$/;"	v
gegenbauer_compute	scripts/finfet/collocation_methods/gegenbauer_compute.m	/^function [ x, w ] = gegenbauer_compute ( order, alpha )$/;"	f
gegenbauer_integral	scripts/finfet/collocation_methods/gegenbauer_integral.m	/^function value = gegenbauer_integral ( expon, alpha )$/;"	f
gegenbauer_recur	scripts/finfet/collocation_methods/gegenbauer_recur.m	/^function [ p2, dp2, p1 ] = gegenbauer_recur ( x, order, alpha, c )$/;"	f
gegenbauer_root	scripts/finfet/collocation_methods/gegenbauer_root.m	/^function [ x, dp2, p1 ] = gegenbauer_root ( x, order, alpha, c )$/;"	f
gen_hermite_compute	scripts/finfet/collocation_methods/gen_hermite_compute.m	/^function [ x, w ] = gen_hermite_compute ( n, alpha )$/;"	f
gen_hermite_compute_points	scripts/finfet/collocation_methods/gen_hermite_compute_points.m	/^function points = gen_hermite_compute_points ( order, alpha )$/;"	f
gen_hermite_compute_points_np	scripts/finfet/collocation_methods/gen_hermite_compute_points_np.m	/^function points = gen_hermite_compute_points_np ( order, np, p )$/;"	f
gen_hermite_compute_weights	scripts/finfet/collocation_methods/gen_hermite_compute_weights.m	/^function weights = gen_hermite_compute_weights ( order, alpha )$/;"	f
gen_hermite_compute_weights_np	scripts/finfet/collocation_methods/gen_hermite_compute_weights_np.m	/^function w = gen_hermite_compute_weights_np ( order, np, p )$/;"	f
gen_hermite_dr_compute	scripts/finfet/collocation_methods/gen_hermite_dr_compute.m	/^function [ x, w ] = gen_hermite_dr_compute ( order, alpha )$/;"	f
gen_hermite_integral	scripts/finfet/collocation_methods/gen_hermite_integral.m	/^function value = gen_hermite_integral ( expon, alpha )$/;"	f
gen_laguerre_compute_points	scripts/finfet/collocation_methods/gen_laguerre_compute_points.m	/^function points = gen_laguerre_compute_points ( order, alpha )$/;"	f
gen_laguerre_compute_points_np	scripts/finfet/collocation_methods/gen_laguerre_compute_points_np.m	/^function points = gen_laguerre_compute_points_np ( order, np, p )$/;"	f
gen_laguerre_compute_weights	scripts/finfet/collocation_methods/gen_laguerre_compute_weights.m	/^function weights = gen_laguerre_compute_weights ( order, alpha )$/;"	f
gen_laguerre_compute_weights_np	scripts/finfet/collocation_methods/gen_laguerre_compute_weights_np.m	/^function w = gen_laguerre_compute_weights_np ( order, np, p )$/;"	f
gen_laguerre_integral	scripts/finfet/collocation_methods/gen_laguerre_integral.m	/^function exact = gen_laguerre_integral ( expon, alpha )$/;"	f
gen_laguerre_ss_compute	scripts/finfet/collocation_methods/gen_laguerre_ss_compute.m	/^function [ x, w ] = gen_laguerre_ss_compute ( order, alpha )$/;"	f
gen_laguerre_ss_recur	scripts/finfet/collocation_methods/gen_laguerre_ss_recur.m	/^function [ p2, dp2, p1 ] = gen_laguerre_ss_recur ( x, order, alpha, b, c )$/;"	f
gen_laguerre_ss_root	scripts/finfet/collocation_methods/gen_laguerre_ss_root.m	/^function [ x, dp2, p1 ] = gen_laguerre_ss_root ( x, order, alpha, b, c )$/;"	f
generate_mesh	nanopores/geo2xml.py	/^def generate_mesh(clscale, gid, xml=True, pid="", dim=3, optimize=True, **params):$/;"	f
generic_fixedpoint	nanopores/tools/coupled.py	/^    def generic_fixedpoint(self, tol=None, damp=None):$/;"	m	class:CoupledSolver
geo	nanopores/geometries/pughpore.py	/^    geo = get_geo(lc=4.)$/;"	v
geo	nanopores/scripts/test_geometry_3D.py	/^geo = geo_from_name(geo_name, **params)$/;"	v
geo	nanopores/scripts/test_survival.py	/^geo = geo_from_xml("aHem")$/;"	v
geo	nanopores/testsuite/test_2D.py	/^geo = geo_from_name(name)$/;"	v
geo	nanopores/testsuite/test_2D_with_molecule.py	/^geo = geo_from_name(geo_name, x0=x0)$/;"	v
geo	nanopores/testsuite/test_3D.py	/^geo = geo_from_name(name)$/;"	v
geo	nanopores/testsuite/test_3D_with_molecule.py	/^geo = geo_from_name(name3D, x0=x0)$/;"	v
geo	nanopores/tools/functions1D.py	/^    geo = Geometry1D(0, 2*numpy.pi, 50)$/;"	v	class:Geometry1D
geo	scripts/finfet/finfet.py	/^geo = finfet.create_geometry(lc=.5)$/;"	v
geo	scripts/finfet/test_wire.py	/^    geo = geo_from_name(geo_name, mesh=mesh, check_midpoint=True, xi=xi, **geo_params)$/;"	v
geo	scripts/fluorophore_in_top_reservoir.py	/^    geo = geo,$/;"	v
geo	scripts/fluorophore_in_top_reservoir.py	/^geo = Geometry($/;"	v
geo	scripts/howorka/largepore.py	/^    geo = domain.create_geometry(lc=2., merge=merge)$/;"	v
geo	scripts/howorka/largepore.py	/^    geo = solid.create_geometry(lc=2., merge=merge)$/;"	v
geo	scripts/howorka/largepore_dna.py	/^    geo = domain.create_geometry(lc=2.)$/;"	v
geo	scripts/numerics/H3Dgeometry.py	/^geo = geo_from_name(geo_name, **geo_params)$/;"	v
geo	scripts/numerics/H3Drefine.py	/^geo = geo_from_name(geo_name, **geo_params)$/;"	v
geo	scripts/numerics/adap2D.py	/^geo = geo_from_name(geo_name, **geo_params)$/;"	v
geo	scripts/numerics/adap2Dpb.py	/^geo = geo_from_name(geo_name, **geo_params)$/;"	v
geo	scripts/numerics/adap2Dref.py	/^geo = geo_from_name(geo_name, **geo_params)$/;"	v
geo	scripts/numerics/adap2Dref.py	/^geo = pb.geo$/;"	v
geo	scripts/numerics/adap3D.py	/^geo = geo_from_name(geo_name, **geo_params)$/;"	v
geo	scripts/numerics/adap3Dpb.py	/^geo = geo_from_name(geo_name, **geo_params)$/;"	v
geo	scripts/numerics/adap3Dref.py	/^geo = geo_from_name(geo_name, **geo_params)$/;"	v
geo	scripts/numerics/force_profiles.py	/^geo = domain.create_geometry(lc=(b-a)\/(Nz-1))$/;"	v
geo	scripts/numerics/hybrid_vs_newton.py	/^geo = geo_from_name(geo_name, **geo_params)$/;"	v
geo	scripts/numerics/matplotfem2d.py	/^    geo = HoworkaTools.geo$/;"	v
geo	scripts/numerics/selectivity1D.py	/^geo = geo1D.geo$/;"	v
geo	scripts/numerics/test_fixedpoint.py	/^geo = geo_from_name(geo_name, **geo_params)$/;"	v
geo	scripts/numerics/test_fixedpoint_1D.py	/^geo = domain.create_geometry(lc=.1)$/;"	v
geo	scripts/plot_scripts/IV_curve_2D.py	/^geo = geo_from_name(geo_name, **geo_params)$/;"	v
geo	scripts/plot_scripts/PMF_Profile_2D.py	/^    geo = geo_from_name(geo_name, x0 = x0, **params)$/;"	v
geo	scripts/plot_scripts/PMF_Profile_2D.py	/^    geo = pb.geo$/;"	v
geo	scripts/plot_scripts/current_trace_2D.py	/^    geo = geo_from_name(geo_name, x0 = x0, **params)$/;"	v
geo	scripts/plot_scripts/script2DW.py	/^geo = geo_from_name(geo_name, **geo_params)$/;"	v
geo	scripts/plot_scripts/script2DWelectrodes.py	/^        geo = Geometry(None, mesh, subdomains, boundaries, physical_domain, physical_boundary, synonymes, aparams)$/;"	v
geo	scripts/plot_scripts/script3DW.py	/^geo = geo_from_name(geo_name, mesh=mesh, **defparams)$/;"	v
geo	scripts/pughpore/test_pugh.py	/^geo = pughpore.get_geo(solverp.h, **geop)$/;"	v
geo	scripts/random_walk_aHem/run.py	/^geo = geo_from_xml("aHem")$/;"	v
geo	scripts/stokes_law/stokes_law.py	/^geo = geo_from_name(name, r=r, l=ly*2, R=lx)$/;"	v
geo	scripts/survival.py	/^geo = geo_from_xml("aHem")$/;"	v
geo	scripts/test.py	/^geo = geo_from_name(geo_name, **geo_params)$/;"	v
geo	scripts/test2D.py	/^geo = geo_from_name(geo_name, **geo_params)$/;"	v
geo	scripts/test2D.py	/^geo = pb.geo$/;"	v
geo	scripts/test2DP.py	/^geo = geo_from_name(geo_name, **geo_params)$/;"	v
geo	scripts/test2DP.py	/^geo = pb.geo$/;"	v
geo	scripts/test2DW.py	/^geo = geo_from_name(geo_name, **geo_params)$/;"	v
geo	scripts/test2Dnewton.py	/^geo = geo_from_name(geo_name, **geo_params)$/;"	v
geo	scripts/test2Dold.py	/^geo = geo_from_name(geo_name, **geo_params)$/;"	v
geo	scripts/test2Dold.py	/^geo = pb.geo$/;"	v
geo	scripts/test3D_GOA.py	/^geo = geo_from_name(geo_name, **geo_params)$/;"	v
geo	scripts/test3D_GOA.py	/^geo = pb.geo$/;"	v
geo	scripts/test3D_GOA.py	/^geo = pb0.geo$/;"	v
geo	scripts/test_SimplePNPS.py	/^geo = geo_from_name(geo_name, **geo_params)$/;"	v
geo	scripts/test_ahem.py	/^geo = geo_from_xml("aHem")$/;"	v
geo	scripts/test_axisym.py	/^geo = domain.create_geometry(lc=lc)$/;"	v
geo	scripts/test_box.py	/^geo = domain.create_geometry(lc=.5*lc, merge=True)$/;"	v
geo	scripts/test_features/box.py	/^geo = square.create_geometry(lc=.2)$/;"	v
geo	scripts/test_features/box.py	/^geo = square2.create_geometry(lc=.2, merge=False)$/;"	v
geo	scripts/test_features/circle.py	/^geo = Geometry(mesh=submesh, boundaries=boundaries,$/;"	v
geo	scripts/test_features/circle.py	/^geo = domain.create_geometry(lc=h)$/;"	v
geo	scripts/test_features/curved.py	/^geo = domain.create_geometry(lc=h)$/;"	v
geo	scripts/test_ions_on_dna.py	/^geo = geo_from_name(name)$/;"	v
geo	scripts/toy_models/pnp1D.py	/^geo = domain.create_geometry(lc=.01)  $/;"	v
geo	scripts/toy_models/pnp1Dcyl.py	/^geo = domain.create_geometry(lc=.01)  $/;"	v
geo1	scripts/plot_scripts/script2DWelectrodes.py	/^geo1 = Geometry(None, mesh1, subdomains1, boundaries1, physical_domain1, physical_boundary1, synonymes, params1)$/;"	v
geo1D	scripts/analytical_test_case.py	/^geo1D = domain1D.create_geometry(lc=.01) $/;"	v
geo1D	scripts/numerics/anaPNPS_refinement.py	/^geo1D = domain1D.create_geometry(lc=.001) $/;"	v
geo1D	scripts/numerics/anaPNPS_refinement_2D.py	/^geo1D = domain1D.create_geometry(lc=.001) $/;"	v
geo1D	scripts/numerics/anaPNPS_uniform.py	/^geo1D = domain1D.create_geometry(lc=.001) $/;"	v
geo1D	scripts/numerics/analyticalPNPS.py	/^geo1D = domain1D.create_geometry(lc=.001) $/;"	v
geo1D	scripts/numerics/analyticalPNPS_2D.py	/^geo1D = domain1D.create_geometry(lc=.001) $/;"	v
geo1D	scripts/numerics/analyticalPNPS_3D.py	/^geo1D = domain1D.create_geometry(lc=.001) $/;"	v
geo1D	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^geo1D = domain1D.create_geometry(lc=.001) $/;"	v
geo1D	scripts/numerics/analyticalPNP_3D.py	/^geo1D = domain1D.create_geometry(lc=.001) $/;"	v
geo1D	scripts/numerics/selectivity1D.py	/^geo1D = Geometry1D(N=N, domain=domain)$/;"	v
geo2D	scripts/analytical_test_case.py	/^geo2D = domain2D.create_geometry(lc=.1)$/;"	v
geo2D	scripts/numerics/adap3D.py	/^geo2D = geo_from_name("H_geo", **geo_params)$/;"	v
geo2D	scripts/numerics/adap3Dpb.py	/^geo2D = geo_from_name("H_geo", **geo_params)$/;"	v
geo2D	scripts/numerics/adap3Dref.py	/^geo2D = geo_from_name("H_geo", **geo_params)$/;"	v
geo2D	scripts/numerics/anaPNPS_refinement.py	/^geo2D = domain2D.create_geometry(lc=h2D)$/;"	v
geo2D	scripts/numerics/anaPNPS_refinement_2D.py	/^geo2D = domain2D.create_geometry(lc=h2D)$/;"	v
geo2D	scripts/numerics/analyticalPNPS.py	/^geo2D = domain2D.create_geometry(lc=h2D)$/;"	v
geo2D	scripts/numerics/analyticalPNPS_2D.py	/^geo2D = domain2D.create_geometry(lc=h2D)$/;"	v
geo2D	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^geo2D = domain2D.create_geometry(lc=initialh)$/;"	v
geo3D	scripts/numerics/anaPNPS_refinement.py	/^geo3D = domain3D.create_geometry(lc=h3D)$/;"	v
geo3D	scripts/numerics/anaPNPS_refinement_2D.py	/^geo3D = domain3D.create_geometry(lc=h3D)$/;"	v
geo3D	scripts/numerics/analyticalPNPS.py	/^geo3D = domain3D.create_geometry(lc=h3D)$/;"	v
geo3D	scripts/numerics/analyticalPNPS_3D.py	/^geo3D = domain3D.create_geometry(lc=h3D)$/;"	v
geo3D	scripts/numerics/analyticalPNP_3D.py	/^geo3D = domain3D.create_geometry(lc=h3D)$/;"	v
geo_debug	nanopores/models/mysolve.py	/^def geo_debug(geo):$/;"	f
geo_debug	scripts/numerics/mysolve.py	/^def geo_debug(geo):$/;"	f
geo_dict	scripts/plot_scripts/script2DW.py	/^geo_dict = import_vars("nanopores.geometries.%s.params_geo" %geo_name)$/;"	v
geo_dict	scripts/plot_scripts/script2DWelectrodes.py	/^geo_dict = import_vars("nanopores.%s.params_geo" %geo_name)$/;"	v
geo_dict	scripts/plot_scripts/script3DW.py	/^geo_dict = import_vars("nanopores.%s.params_geo" %geo_name)$/;"	v
geo_dict	scripts/test2DW.py	/^geo_dict = import_vars("nanopores.geometries.%s.params_geo" %geo_name)$/;"	v
geo_from_meshdir	nanopores/tools/box.py	/^def geo_from_meshdir(DIR=MESHDIR):$/;"	f
geo_from_name	nanopores/tools/geometry.py	/^def geo_from_name(name, mesh=None, check_midpoint=False, **params):$/;"	f
geo_from_subdomains	nanopores/tools/geometry.py	/^def geo_from_subdomains(mesh, module, check_midpoint=False, **params):$/;"	f
geo_from_xml	nanopores/tools/geometry.py	/^def geo_from_xml(name):$/;"	f
geo_from_xml_threadsafe	nanopores/tools/geometry.py	/^def geo_from_xml_threadsafe(name, reuse_mesh=False, clscale=None, **params):$/;"	f
geo_name	nanopores/models/Howorka.py	/^geo_name = "H_geo"$/;"	v
geo_name	nanopores/models/HoworkaSimple.py	/^geo_name = "H_geo"$/;"	v
geo_name	nanopores/scripts/ahemFPT.py	/^geo_name = "aHem"$/;"	v
geo_name	nanopores/scripts/ahemIV.py	/^geo_name = "aHem"$/;"	v
geo_name	nanopores/scripts/calculate_forces.py	/^geo_name = "H_cyl_geo"$/;"	v
geo_name	nanopores/scripts/test_geometry_3D.py	/^geo_name = "H_cyl_geo"$/;"	v
geo_name	nanopores/testsuite/test_2D_with_molecule.py	/^geo_name = "H_geo"$/;"	v
geo_name	scripts/finfet/test_wire.py	/^geo_name = "Nanowire"$/;"	v
geo_name	scripts/numerics/H3Dgeometry.py	/^geo_name = "H_cyl_geo"$/;"	v
geo_name	scripts/numerics/H3Drefine.py	/^geo_name = "H_cyl_geo"$/;"	v
geo_name	scripts/numerics/Howorka.py	/^geo_name = "H_geo"$/;"	v
geo_name	scripts/numerics/HoworkaSimple.py	/^geo_name = "H_geo"$/;"	v
geo_name	scripts/numerics/adap2D.py	/^geo_name = "H_geo"$/;"	v
geo_name	scripts/numerics/adap2Dpb.py	/^geo_name = "H_geo"$/;"	v
geo_name	scripts/numerics/adap2Dref.py	/^geo_name = "H_geo"$/;"	v
geo_name	scripts/numerics/adap3D.py	/^geo_name = "H_cyl_geo"$/;"	v
geo_name	scripts/numerics/adap3Dpb.py	/^geo_name = "H_cyl_geo"$/;"	v
geo_name	scripts/numerics/adap3Dref.py	/^geo_name = "H_cyl_geo"$/;"	v
geo_name	scripts/numerics/hybrid_vs_newton.py	/^geo_name = "H_geo"$/;"	v
geo_name	scripts/numerics/test_fixedpoint.py	/^geo_name = "H_geo"$/;"	v
geo_name	scripts/plot_scripts/IV_curve_2D.py	/^geo_name = "H_geo"$/;"	v
geo_name	scripts/plot_scripts/PMF_Profile_2D.py	/^geo_name = "H_geo"$/;"	v
geo_name	scripts/plot_scripts/current_trace_2D.py	/^geo_name = "H_geo"$/;"	v
geo_name	scripts/plot_scripts/script2DW.py	/^geo_name = "W_2D_geo"$/;"	v
geo_name	scripts/plot_scripts/script2DWelectrodes.py	/^    geo_name = geo_name,$/;"	v
geo_name	scripts/plot_scripts/script2DWelectrodes.py	/^geo_name = "W_2D_geo"$/;"	v
geo_name	scripts/plot_scripts/script3DW.py	/^geo_name = "W_3D_geo"$/;"	v
geo_name	scripts/test.py	/^geo_name = "H_cyl_geo"$/;"	v
geo_name	scripts/test2D.py	/^geo_name = "H_geo"$/;"	v
geo_name	scripts/test2DP.py	/^geo_name = "P_geo"$/;"	v
geo_name	scripts/test2DW.py	/^geo_name = "W_2D_geo"$/;"	v
geo_name	scripts/test2Dnewton.py	/^geo_name = "H_geo"$/;"	v
geo_name	scripts/test2Dold.py	/^geo_name = "H_geo"$/;"	v
geo_name	scripts/test3D_GOA.py	/^geo_name = "H_cyl_geo"$/;"	v
geo_name	scripts/test_SimplePNPS.py	/^geo_name = "H_geo"$/;"	v
geo_name2D	nanopores/scripts/calculate_forces.py	/^geo_name2D = "H_geo"$/;"	v
geo_name3D	nanopores/models/Howorka.py	/^geo_name3D = "H_cyl_geo"$/;"	v
geo_params	nanopores/models/Howorka.py	/^def geo_params(z0, rMolecule, Rx, Ry): $/;"	f
geo_params	nanopores/models/HoworkaSimple.py	/^def geo_params(z0): $/;"	f
geo_params	nanopores/scripts/test_survival.py	/^geo_params = dict($/;"	v
geo_params	scripts/finfet/test_wire.py	/^geo_params = dict(l = l*1e-9, r_eff = r_eff*1e-9, lc = 10e-9)$/;"	v
geo_params	scripts/howorka/ivcurve.py	/^geo_params = dict(z0=None, rMolecule=rMolecule, Rx=Rx, Ry=Ry)$/;"	v
geo_params	scripts/numerics/H3Dgeometry.py	/^geo_params = dict($/;"	v
geo_params	scripts/numerics/H3Drefine.py	/^geo_params = dict($/;"	v
geo_params	scripts/numerics/Howorka.py	/^def geo_params(z0, rMolecule, Rx, Ry): $/;"	f
geo_params	scripts/numerics/HoworkaSimple.py	/^def geo_params(z0): $/;"	f
geo_params	scripts/numerics/adap2D.py	/^geo_params = dict($/;"	v
geo_params	scripts/numerics/adap2Dpb.py	/^geo_params = dict($/;"	v
geo_params	scripts/numerics/adap2Dref.py	/^geo_params = dict($/;"	v
geo_params	scripts/numerics/adap3D.py	/^geo_params = dict($/;"	v
geo_params	scripts/numerics/adap3Dpb.py	/^geo_params = dict($/;"	v
geo_params	scripts/numerics/adap3Dref.py	/^geo_params = dict($/;"	v
geo_params	scripts/numerics/hybrid_vs_newton.py	/^geo_params = dict($/;"	v
geo_params	scripts/numerics/test_fixedpoint.py	/^geo_params = dict($/;"	v
geo_params	scripts/plot_scripts/IV_curve_2D.py	/^geo_params = dict($/;"	v
geo_params	scripts/plot_scripts/script2DW.py	/^    geo_params = {"x0": None, "lsam": lsam, "r0": (11.5*nm -lsam)*r0factor,}$/;"	v
geo_params	scripts/plot_scripts/script2DW.py	/^    geo_params = {"x0": None, "lsam": lsam, "r0": (13*nm -lsam)*r0factor,}$/;"	v
geo_params	scripts/survival.py	/^geo_params = dict($/;"	v
geo_params	scripts/test.py	/^geo_params = dict($/;"	v
geo_params	scripts/test2D.py	/^geo_params = dict($/;"	v
geo_params	scripts/test2DP.py	/^geo_params = {"x0": [0.,0.,0.]}  # any parameter change here will not affect mesh generation yet$/;"	v
geo_params	scripts/test2DW.py	/^geo_params = {"x0": None, #[0,0,0],$/;"	v
geo_params	scripts/test2Dnewton.py	/^geo_params = {"x0":None} #import_vars("params_nice_2D")$/;"	v
geo_params	scripts/test2Dold.py	/^geo_params = dict($/;"	v
geo_params	scripts/test3D_GOA.py	/^geo_params = dict($/;"	v
geo_params	scripts/test_SimplePNPS.py	/^geo_params = dict($/;"	v
geo_params	scripts/test_ahem.py	/^geo_params = dict($/;"	v
geo_params2D	scripts/numerics/adap3D.py	/^geo_params2D = dict($/;"	v
geo_params2D	scripts/numerics/adap3Dpb.py	/^geo_params2D = dict($/;"	v
geo_params2D	scripts/numerics/adap3Dref.py	/^geo_params2D = dict($/;"	v
geo_params3D	nanopores/models/Howorka.py	/^def geo_params3D(x0, rMolecule, Rx, Ry, lcpore): $/;"	f
geo_sub	nanopores/scripts/test_geometry_3D.py	/^    geo_sub = geo_from_subdomains(submesh,$/;"	v
geop	nanopores/models/pughpore.py	/^geop = nano.Params($/;"	v
geop	scripts/pughpore/randomwalk/run.py	/^geop = nano.Params(pughpore.params)$/;"	v
geop	scripts/pughpore/test_1Dpugh.py	/^geop = nano.Params($/;"	v
geop	scripts/pughpore/test_pugh.py	/^geop = nano.Params($/;"	v
get_boundaries	nanopores/geometries/H_cyl_geo/subdomains.py	/^def get_boundaries(mesh, x0):$/;"	f
get_boundaries	nanopores/geometries/aHem/subdomains.py	/^def get_boundaries(mesh, x0):$/;"	f
get_code	nanopores/py4gmsh/basic.py	/^def get_code():$/;"	f
get_crosssections2D	nanopores/geometries/H_cyl_geo/subdomains.py	/^def get_crosssections2D(mesh, x0):$/;"	f
get_crosssections2D	nanopores/geometries/aHem/subdomains.py	/^def get_crosssections2D(mesh, x0):$/;"	f
get_domain	nanopores/geometries/pughpore.py	/^def get_domain(lc=1., **newparams):$/;"	f
get_entry	nanopores/tools/fields.py	/^    def get_entry(self, name, entry, **params):$/;"	m	class:Header
get_entry	nanopores/tools/fields.py	/^def get_entry(name, entry, **params):$/;"	f
get_field	nanopores/tools/fields.py	/^    def get_field(self, name, field, **params):$/;"	m	class:Header
get_field	nanopores/tools/fields.py	/^def get_field(name, field, **params):$/;"	f
get_fields	nanopores/tools/fields.py	/^    def get_fields(self, name, **params):$/;"	m	class:Header
get_fields	nanopores/tools/fields.py	/^def get_fields(name, **params):$/;"	f
get_file	nanopores/tools/fields.py	/^    def get_file(self, name, params):$/;"	m	class:Header
get_file_params	nanopores/tools/fields.py	/^    def get_file_params(self, name, params):$/;"	m	class:Header
get_forces	nanopores/models/pughpore.py	/^def get_forces(setup, pnps):$/;"	f
get_functional	nanopores/tools/pdesystem.py	/^    def get_functional(self, Jstr):$/;"	m	class:PDESystem
get_functionals	nanopores/tools/pdesystem.py	/^    def get_functionals(self, Jlist=None):$/;"	m	class:PDESystem
get_geo	nanopores/geometries/Cyl2D/py4geo.py	/^def get_geo(**params):$/;"	f
get_geo	nanopores/geometries/H_cyl_geo/py4geo.py	/^def get_geo(x0 = None, crosssections = True, **params):$/;"	f
get_geo	nanopores/geometries/H_geo/py4geo.py	/^def get_geo(**params):$/;"	f
get_geo	nanopores/geometries/Nanowire/py4geo.py	/^def get_geo(**params):$/;"	f
get_geo	nanopores/geometries/P_geo/py4geo.py	/^def get_geo(**params):$/;"	f
get_geo	nanopores/geometries/W_2D_geo/py4geo.py	/^def get_geo(**params):$/;"	f
get_geo	nanopores/geometries/W_3D_geo/py4geo.py	/^def get_geo(x0 = None, **params):$/;"	f
get_geo	nanopores/geometries/aHem/py4geo.py	/^def get_geo(x0 = None, crosssections = True, exit_i = None, **params):$/;"	f
get_geo	nanopores/geometries/pughpore.py	/^def get_geo(lc=1., **newparams):$/;"	f
get_geo1D	nanopores/geometries/pughpore.py	/^def get_geo1D(lc=0.01, **newparams):$/;"	f
get_mesh	nanopores/tools/utilities.py	/^def get_mesh(geo_name, mesh_name = "mesh\/mesh.xml"):$/;"	f
get_meta	nanopores/py4gmsh/basic.py	/^def get_meta():$/;"	f
get_points	nanopores/tools/protocol.py	/^    def get_points(self, N, read=True):$/;"	m	class:Data
get_porepartitions	nanopores/geometries/H_cyl_geo/subdomains.py	/^def get_porepartitions(mesh, x0):$/;"	f
get_porepartitions	nanopores/geometries/aHem/subdomains.py	/^def get_porepartitions(mesh, x0):$/;"	f
get_remaining	nanopores/tools/protocol.py	/^def get_remaining(data):$/;"	f
get_subdomain	nanopores/geometries/H_cyl_geo/subdomains.py	/^def get_subdomain(mesh, x0):$/;"	f
get_subdomain	nanopores/geometries/aHem/subdomains.py	/^def get_subdomain(mesh, x0):$/;"	f
get_subindices	nanopores/tools/protocol.py	/^def get_subindices(data, I):$/;"	f
getboundary	nanopores/tools/box.py	/^    def getboundary(self, name):$/;"	m	class:BoxCollection
getsubdomain	nanopores/tools/box.py	/^    def getsubdomain(self, name):$/;"	m	class:BoxCollection
gitrepo	scripts/plot_scripts/PMFplots.py	/^    gitrepo = f.next().strip()$/;"	v
gmres	nanopores/tools/solvermethods.py	/^gmres = dict($/;"	v
gmsh_ball_surfs	nanopores/tools/balls.py	/^def gmsh_ball_surfs(ball, lc):$/;"	f
goal	scripts/numerics/adap2Dref.py	/^goal = (lambda v : phys.Fbare(v, 1) + phys.CurrentPB(v)) if geo.parameter("x0") else (lambda v : phys.CurrentPB(v))$/;"	v
goal	scripts/plot_scripts/IV_curve_2D.py	/^goal = (lambda v : phys.Fbare(v, 1) + phys.CurrentPB(v)) if geo_params["x0"] else (lambda v : phys.CurrentPB(v))$/;"	v
goal	scripts/plot_scripts/script2DW.py	/^goal = (lambda v : phys.Fbare(v, 1) + phys.CurrentPB(v)) if geo_params["x0"] else (lambda v : phys.CurrentPB(v))$/;"	v
goal	scripts/pughpore/test_pugh.py	/^goal = phys.CurrentPB$/;"	v
goal	scripts/test2D.py	/^goal = (lambda v : phys.Fbare(v, 0) + phys.Fbare(v, 1)) if geo.parameter("x0") else (lambda v : phys.CurrentPB(v))$/;"	v
goal	scripts/test2Dold.py	/^goal = (lambda v : phys.Fbare(v, 1)) if geo.parameter("x0") else (lambda v : phys.CurrentPB(v))$/;"	v
goal	scripts/test3D_GOA.py	/^goal = (lambda v : phys.Fbare(v, 2) + phys.CurrentPB(v)) if geo.parameter("x0") else (lambda v : phys.CurrentPB(v))$/;"	v
goodexit	nanopores/scripts/ahemFPT.py	/^goodexit = {"exit"}$/;"	v
goodexit	nanopores/scripts/ahemIV.py	/^goodexit = {"exit"}$/;"	v
goodexit	scripts/survival.py	/^goodexit = {"exit"}$/;"	v
grad	nanopores/physics/default.py	/^def grad(lscale):$/;"	f
grad	nanopores/physics/pore_dna.py	/^def grad():$/;"	f
grad	scripts/finfet/finfet.py	/^grad = phys.grad$/;"	v
grad	scripts/numerics/anaPNPS_refinement.py	/^grad = phys2D.grad$/;"	v
grad	scripts/numerics/anaPNPS_refinement_2D.py	/^grad = phys2D.grad$/;"	v
grad	scripts/numerics/analyticalPNPS.py	/^grad = phys2D.grad$/;"	v
grad	scripts/numerics/analyticalPNPS_2D.py	/^grad = phys.grad$/;"	v
grad	scripts/numerics/analyticalPNPS_3D.py	/^grad = phys.grad$/;"	v
grad	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^grad = phys.grad$/;"	v
grad	scripts/numerics/analyticalPNP_3D.py	/^grad = phys.grad$/;"	v
grad0	nanopores/physics/default.py	/^    def grad0(u):$/;"	f	function:grad
grad0	nanopores/physics/pore_dna.py	/^    def grad0(u):$/;"	f	function:grad
ground	scripts/howorka/largepore.py	/^    ground = "upperb",$/;"	v
ground	scripts/howorka/largepore_dna.py	/^    ground = "upperb",$/;"	v
gs	scripts/plot_forces_aHem/combine.py	/^gs=gridspec.GridSpec(1, 2, width_ratios=[1,1])$/;"	v
gs	scripts/plot_forces_aHem/combine2.py	/^gs=gridspec.GridSpec(1, 2, width_ratios=[1,1])$/;"	v
h	nanopores/geometries/Nanowire/params_geo.py	/^h = 253*nm$/;"	v
h	nanopores/models/Howorka.py	/^h = .5,$/;"	v
h	nanopores/models/HoworkaSimple.py	/^h = .5,$/;"	v
h	nanopores/models/pughpore.py	/^    h = 2.,$/;"	v
h	scripts/finfet/MLSC.py	/^h = 1.,$/;"	v
h	scripts/fluorophore_in_top_reservoir.py	/^h = 1e-1*mm$/;"	v
h	scripts/howorka/forcefield2D.py	/^    h = 1.,$/;"	v
h	scripts/howorka/forcefield2D.py	/^    h = h,$/;"	v
h	scripts/howorka/forcefield3D.py	/^    h = 1.,$/;"	v
h	scripts/howorka/interpolation_points.py	/^    h = 0.5,$/;"	v
h	scripts/howorka/selectivity.py	/^    h = 4.,$/;"	v
h	scripts/howorka/selectivity.py	/^    h = p.h,$/;"	v
h	scripts/numerics/H3Dgeometry.py	/^h = 1.,$/;"	v
h	scripts/numerics/H3Drefine.py	/^h = 3.,$/;"	v
h	scripts/numerics/Howorka.py	/^h = .5,$/;"	v
h	scripts/numerics/HoworkaSimple.py	/^h = .5,$/;"	v
h	scripts/numerics/adap2D.py	/^h = 1.,$/;"	v
h	scripts/numerics/adap2Dpb.py	/^h = 1.,$/;"	v
h	scripts/numerics/adap3D.py	/^h = 1.,$/;"	v
h	scripts/numerics/adap3Dpb.py	/^h = 2.,$/;"	v
h	scripts/numerics/adap3Dref.py	/^h = 1.,$/;"	v
h	scripts/numerics/hybrid_vs_newton.py	/^h = .5,$/;"	v
h	scripts/numerics/linear-robust.py	/^h = .5,$/;"	v
h	scripts/numerics/selectivity1D.py	/^h = 0.5*Howorka.params_geo.l0 # half pore length$/;"	v
h	scripts/numerics/test_bVscheme.py	/^h = .5,$/;"	v
h	scripts/numerics/test_fixedpoint.py	/^h = .5,$/;"	v
h	scripts/numerics/test_fixedpoint_1D.py	/^h = 20.$/;"	v
h	scripts/pughpore/diffusion.py	/^    h = 2.,$/;"	v
h	scripts/pughpore/test_pugh.py	/^    h = 2.,$/;"	v
h	scripts/pughpore/test_pugh.py	/^    h = up.h,$/;"	v
h	scripts/test_features/circle.py	/^h = .4$/;"	v
h	scripts/test_features/curved.py	/^h = 1.$/;"	v
h	scripts/test_features/howorka3D.py	/^h = 1.,$/;"	v
h	scripts/toy_models/pnp1D.py	/^h = 20.$/;"	v
h1	nanopores/geometries/pughpore.py	/^    h1 = 46.-35.-2.5,$/;"	v
h1	scripts/howorka/largepore_dna.py	/^h1 = h2-2.5$/;"	v
h1	scripts/pughpore/sobol_points.py	/^h1 = up.h1$/;"	v
h2	nanopores/geometries/pughpore.py	/^    h2 = 46.-35.,$/;"	v
h2	scripts/howorka/largepore_dna.py	/^h2 = hpore-35. $/;"	v
h2	scripts/pughpore/sobol_points.py	/^h2 = up.h2$/;"	v
h2D	scripts/numerics/adap3D.py	/^h2D = .2,$/;"	v
h2D	scripts/numerics/adap3Dpb.py	/^h2D = 1.,$/;"	v
h2D	scripts/numerics/adap3Dref.py	/^h2D = .2,$/;"	v
h2D	scripts/numerics/anaPNPS_refinement.py	/^h2D = 1.,$/;"	v
h2D	scripts/numerics/anaPNPS_refinement_2D.py	/^h2D = .5,$/;"	v
h2D	scripts/numerics/anaPNPS_uniform.py	/^h2D = 1.,$/;"	v
h2D	scripts/numerics/analyticalPNPS.py	/^h2D = .2,$/;"	v
h2D	scripts/numerics/analyticalPNPS_2D.py	/^h2D = .05,$/;"	v
h2D	scripts/numerics/analyticalPNPS_3D.py	/^h2D = .1,$/;"	v
h2D	scripts/numerics/analyticalPNP_3D.py	/^h2D = .1,$/;"	v
h3D	nanopores/models/Howorka.py	/^h3D = 2.,$/;"	v
h3D	scripts/howorka/forcefield3D.py	/^    h3D = 8.,$/;"	v
h3D	scripts/numerics/anaPNPS_refinement.py	/^h3D = 1.,$/;"	v
h3D	scripts/numerics/anaPNPS_refinement_2D.py	/^h3D = .5,$/;"	v
h3D	scripts/numerics/anaPNPS_uniform.py	/^h3D = 1.,$/;"	v
h3D	scripts/numerics/analyticalPNPS.py	/^h3D = .2,$/;"	v
h3D	scripts/numerics/analyticalPNPS_3D.py	/^h3D = .5,$/;"	v
h3D	scripts/numerics/analyticalPNP_3D.py	/^h3D = .5,$/;"	v
h3D	scripts/test_features/howorka3D.py	/^h3D = 8.,$/;"	v
h4	nanopores/geometries/pughpore.py	/^    h4 = 10.,$/;"	v
h4	scripts/howorka/largepore_dna.py	/^h4 = 10.$/;"	v
h4	scripts/pughpore/sobol_points.py	/^h4 = up.h4$/;"	v
hReservoir	nanopores/physics/howorka.py	/^hReservoir = 0.01 # height of cylindrical upper reservoir$/;"	v
hReservoir	nanopores/physics/pore_molecule.py	/^hReservoir = 0.01 # height of cylindrical upper reservoir$/;"	v
hReservoir	scripts/numerics/adap2Dref.py	/^hReservoir = 10*nm, # height of cylindrical upper reservoir [nm]$/;"	v
hReservoir	scripts/test2D.py	/^hReservoir = 10*nm, # height of cylindrical upper reservoir [nm]$/;"	v
hReservoir	scripts/test2Dold.py	/^hReservoir = 1e-8, # height of cylindrical upper reservoir [m]$/;"	v
h_core	nanopores/geometries/Nanowire/params_geo.py	/^h_core = 50*nm$/;"	v
h_layer	nanopores/geometries/Nanowire/params_geo.py	/^h_layer = 8*nm$/;"	v
h_side	nanopores/geometries/Nanowire/params_geo.py	/^h_side = 145*nm$/;"	v
h_wire	nanopores/geometries/Nanowire/params_geo.py	/^h_wire = h_core + h_layer$/;"	v
hbond	scripts/random_walk_aHem/plot_aHem.py	/^hbond=X_aHem_2d$/;"	v
hbond	scripts/random_walk_aHem/plot_aHem.py	/^hbond=hbond+shift$/;"	v
hbond	scripts/random_walk_aHem/run.py	/^hbond=np.load('hbond.npy')$/;"	v
hbond2	scripts/random_walk_aHem/plot_aHem.py	/^hbond2=hbond*1.2$/;"	v
hc_compute_weights_from_points	scripts/finfet/collocation_methods/hc_compute_weights_from_points.m	/^function w = hc_compute_weights_from_points ( m, x )$/;"	f
hcc_compute	scripts/finfet/collocation_methods/hcc_compute.m	/^function [ x, w ] = hcc_compute ( n )$/;"	f
hcc_compute_np	scripts/finfet/collocation_methods/hcc_compute_np.m	/^function [ x, w ] = hcc_compute_np ( n, np, p )$/;"	f
hcc_compute_points	scripts/finfet/collocation_methods/hcc_compute_points.m	/^function x = hcc_compute_points ( n )$/;"	f
hcc_compute_points_np	scripts/finfet/collocation_methods/hcc_compute_points_np.m	/^function x = hcc_compute_points_np ( n, np, p )$/;"	f
hcc_compute_weights	scripts/finfet/collocation_methods/hcc_compute_weights.m	/^function w = hcc_compute_weights ( n )$/;"	f
hcc_compute_weights_np	scripts/finfet/collocation_methods/hcc_compute_weights_np.m	/^function w = hcc_compute_weights_np ( n, np, p )$/;"	f
hce_compute	scripts/finfet/collocation_methods/hce_compute.m	/^function [ x, w ] = hce_compute ( n )$/;"	f
hce_compute_np	scripts/finfet/collocation_methods/hce_compute_np.m	/^function [ x, w ] = hce_compute_np ( n, np, p )$/;"	f
hce_compute_points	scripts/finfet/collocation_methods/hce_compute_points.m	/^function x = hce_compute_points ( n )$/;"	f
hce_compute_points_np	scripts/finfet/collocation_methods/hce_compute_points_np.m	/^function x = hce_compute_points_np ( n, np, p )$/;"	f
hce_compute_weights	scripts/finfet/collocation_methods/hce_compute_weights.m	/^function w = hce_compute_weights ( n )$/;"	f
hce_compute_weights_np	scripts/finfet/collocation_methods/hce_compute_weights_np.m	/^function w = hce_compute_weights_np ( n, np, p )$/;"	f
hcross	scripts/numerics/anaPNPS_refinement.py	/^hcross = 1. # [nm] height of crossection$/;"	v
hcross	scripts/numerics/anaPNPS_refinement_2D.py	/^hcross = .5 # [nm] height of crossection$/;"	v
hcross	scripts/numerics/anaPNPS_uniform.py	/^hcross = 1. # [nm] height of crossection$/;"	v
hcross	scripts/numerics/analyticalPNPS.py	/^hcross = .2 # [nm] height of crossection$/;"	v
hcross	scripts/numerics/analyticalPNPS_2D.py	/^hcross = .2$/;"	v
hcross	scripts/numerics/analyticalPNPS_3D.py	/^hcross = .2$/;"	v
hcross	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^hcross = .2$/;"	v
hcross	scripts/numerics/analyticalPNP_3D.py	/^hcross = .2$/;"	v
hcross	scripts/test_features/curved.py	/^hcross = .2$/;"	v
hdata_to_dif	scripts/finfet/collocation_methods/hdata_to_dif.m	/^function [ xd, yd ] = hdata_to_dif ( n, x, y, yp )$/;"	f
hdna	scripts/howorka/largepore.py	/^hdna = 20$/;"	v
hermite_compute	scripts/finfet/collocation_methods/hermite_compute.m	/^function [ x, w ] = hermite_compute ( n )$/;"	f
hermite_compute_points	scripts/finfet/collocation_methods/hermite_compute_points.m	/^function x = hermite_compute_points ( order )$/;"	f
hermite_compute_points_np	scripts/finfet/collocation_methods/hermite_compute_points_np.m	/^function x = hermite_compute_points_np ( order, np, p )$/;"	f
hermite_compute_weights	scripts/finfet/collocation_methods/hermite_compute_weights.m	/^function w = hermite_compute_weights ( order )$/;"	f
hermite_compute_weights_np	scripts/finfet/collocation_methods/hermite_compute_weights_np.m	/^function w = hermite_compute_weights_np ( order, np, p )$/;"	f
hermite_genz_keister_lookup	scripts/finfet/collocation_methods/hermite_genz_keister_lookup.m	/^function [ x, w ] = hermite_genz_keister_lookup ( n )$/;"	f
hermite_genz_keister_lookup_points	scripts/finfet/collocation_methods/hermite_genz_keister_lookup_points.m	/^function x = hermite_genz_keister_lookup_points ( n )$/;"	f
hermite_genz_keister_lookup_points_np	scripts/finfet/collocation_methods/hermite_genz_keister_lookup_points_np.m	/^function x = hermite_genz_keister_lookup_points_np ( n, np, p )$/;"	f
hermite_genz_keister_lookup_weights	scripts/finfet/collocation_methods/hermite_genz_keister_lookup_weights.m	/^function w = hermite_genz_keister_lookup_weights ( n )$/;"	f
hermite_genz_keister_lookup_weights_np	scripts/finfet/collocation_methods/hermite_genz_keister_lookup_weights_np.m	/^function w = hermite_genz_keister_lookup_weights_np ( n, np, p )$/;"	f
hermite_gk18_lookup_points	scripts/finfet/collocation_methods/hermite_gk18_lookup_points.m	/^function x = hermite_gk18_lookup_points ( n )$/;"	f
hermite_gk22_lookup_points	scripts/finfet/collocation_methods/hermite_gk22_lookup_points.m	/^function x = hermite_gk22_lookup_points ( n )$/;"	f
hermite_gk24_lookup_points	scripts/finfet/collocation_methods/hermite_gk24_lookup_points.m	/^function x = hermite_gk24_lookup_points ( n )$/;"	f
hermite_integral	scripts/finfet/collocation_methods/hermite_integral.m	/^function value = hermite_integral ( n )$/;"	f
hermite_interpolant	scripts/finfet/collocation_methods/hermite_interpolant.m	/^function [ xd, yd, xdp, ydp ] = hermite_interpolant ( n, x, y, yp )$/;"	f
hermite_interpolant_rule	scripts/finfet/collocation_methods/hermite_interpolant_rule.m	/^function w = hermite_interpolant_rule ( n, a, b, x )$/;"	f
hermite_interpolant_value	scripts/finfet/collocation_methods/hermite_interpolant_value.m	/^function [ yv, yvp ] = hermite_interpolant_value ( nd, xd, yd, xdp, ydp, nv, ...$/;"	f
hermite_lookup_point	scripts/finfet/collocation_methods/hermite_lookup_points.m	/^function points = hermite_lookup_point ( order )$/;"	f
hermite_lookup_weights	scripts/finfet/collocation_methods/hermite_lookup_weights.m	/^function w = hermite_lookup_weights ( order )$/;"	f
hermite_ss_compute	scripts/finfet/collocation_methods/hermite_ss_compute.m	/^function [ x, w ] = hermite_ss_compute ( order )$/;"	f
hermite_ss_recur	scripts/finfet/collocation_methods/hermite_ss_recur.m	/^function [ p2, dp2, p1 ] = hermite_ss_recur ( x, order )$/;"	f
hermite_ss_root	scripts/finfet/collocation_methods/hermite_ss_root.m	/^function [ x, dp2, p1 ] = hermite_ss_root ( x, order )$/;"	f
hexp	scripts/numerics/PMF.py	/^hexp = .5,$/;"	v
hexp	scripts/numerics/force_profiles.py	/^hexp = .5,$/;"	v
hexp	scripts/numerics/implicit_vs_explicit.py	/^hexp = .2,$/;"	v
hfun_new	scripts/finfet/collocation_methods/hfun_new.m	/^function h = hfun_new( x, y )$/;"	f
himp	scripts/numerics/PMF.py	/^himp = .2,$/;"	v
himp	scripts/numerics/force_profiles.py	/^himp = .2,$/;"	v
himp	scripts/numerics/implicit_vs_explicit.py	/^himp = .2,$/;"	v
hmem	nanopores/geometries/pughpore.py	/^    hmem = 2.2,$/;"	v
hmem	scripts/howorka/largepore.py	/^hmem = 2$/;"	v
hmem	scripts/howorka/largepore_dna.py	/^hmem = 2.2$/;"	v
hmem	scripts/numerics/test_fixedpoint_1D.py	/^hmem = 3.$/;"	v
hmem	scripts/pughpore/sobol_points.py	/^hmem = up.hmem$/;"	v
hmem	scripts/toy_models/pnp1D.py	/^hmem = 3.$/;"	v
hmin	scripts/plot_scripts/IV_curve_2D.py	/^hmin = geo.mesh.hmin()$/;"	v
hmin	scripts/plot_scripts/script2DW.py	/^hmin = geo.mesh.hmin()$/;"	v
hmin	scripts/plot_scripts/script2DWelectrodes.py	/^        hmin = geo.mesh.hmin()$/;"	v
hmin	scripts/plot_scripts/script3DW.py	/^    hmin = geo.mesh.hmin(),$/;"	v
hmin	scripts/test.py	/^    hmin = geo.mesh.hmin(),$/;"	v
hmin	scripts/test2DP.py	/^    hmin = pnps.geo.mesh.hmin(),$/;"	v
homogenized	nanopores/tools/geometry.py	/^    def homogenized(self): # TODO: arbitrary tensors$/;"	m	class:PhysicalBC
hout	scripts/howorka/interpolation_points.py	/^    hout = 1.,    $/;"	v
hplot	scripts/finfet/MLSC.py	/^def hplot(name, h, err, xlab="", ylab="", hstr="h", rate=None, fit=True, fig=True):$/;"	f
hplot	scripts/finfet/finfet-levels.py	/^def hplot(name, h, err, xlab="", ylab="", rate=None, fig=True):$/;"	f
hpore	nanopores/geometries/pughpore.py	/^    hpore = 46,$/;"	v
hpore	scripts/howorka/largepore_dna.py	/^hpore = 46$/;"	v
hpore	scripts/pughpore/sobol_points.py	/^hpore = up.hpore$/;"	v
hs	scripts/finfet/finfet-levels.py	/^hs = 2., 1.5, 1.2, 1., .8, .6, .5, .25$/;"	v
hs	scripts/finfet/finfet-levels.py	/^hs = hs[:-1]$/;"	v
hybrid	scripts/numerics/plot_fixedpoint.py	/^hybrid = load("hybrid")$/;"	v
hybrid_solve	nanopores/models/mysolve.py	/^def hybrid_solve(self, tol=None, damp=None):$/;"	f
hybrid_solve	scripts/numerics/mysolve.py	/^def hybrid_solve(self, tol=None, damp=None):$/;"	f
hycolors	scripts/numerics/plot_robustness.py	/^hycolors = ["#ff0000", "#ffaaaa", "w"]$/;"	v
hydata	scripts/numerics/plot_robustness.py	/^hydata = [$/;"	v
hylabels	scripts/numerics/plot_robustness.py	/^hylabels = [$/;"	v
i	scripts/howorka/HoworkaTools.py	/^i = 0   $/;"	v
i	scripts/howorka/video.py	/^i = 0   $/;"	v
i4_choose	scripts/finfet/collocation_methods/i4_choose.m	/^function value = i4_choose ( n, k )$/;"	f
i4_log_2	scripts/finfet/collocation_methods/i4_log_2.m	/^function value = i4_log_2 ( i )$/;"	f
i4mat_transpose_print	scripts/finfet/collocation_methods/i4mat_transpose_print.m	/^function i4mat_transpose_print ( m, n, a, title )$/;"	f
i4mat_transpose_print_some	scripts/finfet/collocation_methods/i4mat_transpose_print_some.m	/^function i4mat_transpose_print_some ( m, n, a, ilo, jlo, ihi, jhi, title )$/;"	f
i4mat_write	scripts/finfet/collocation_methods/i4mat_write.m	/^function i4mat_write ( output_filename, m, n, table )$/;"	f
i4vec_min_mv	scripts/finfet/collocation_methods/i4vec_min_mv.m	/^function w = i4vec_min_mv ( m, n, u, v )$/;"	f
i4vec_print	scripts/finfet/collocation_methods/i4vec_print.m	/^function i4vec_print ( n, a, title )$/;"	f
ifig	scripts/numerics/PMF.py	/^ifig = 0$/;"	v
illposed	nanopores/physics/pb.py	/^        illposed = False,$/;"	v	class:LinearNonstandardPBProblem
illposed	nanopores/physics/pb.py	/^        illposed = False,$/;"	v	class:NonstandardPBProblem
ilu	nanopores/physics/exittime.py	/^                ilu = dict(fill_level = 1)))$/;"	v	class:ExitTimeProblem
ilu	nanopores/physics/exittime.py	/^                ilu = dict(fill_level = 1)))$/;"	v	class:SurvivalProblem
ilu	nanopores/physics/pb.py	/^                ilu = dict(fill_level = 1)))$/;"	v	class:LinearNonstandardPBProblem
ilu	nanopores/physics/pb.py	/^                ilu = dict(fill_level = 1)))$/;"	v	class:NonstandardPBProblem
ilu	nanopores/physics/pnps.py	/^                ilu = dict(fill_level = 2)))$/;"	v	class:StokesProblem
ilu	nanopores/physics/pnps2D.py	/^                ilu = dict(fill_level = 1)))$/;"	v	class:PNPProblemAxisym
ilu	nanopores/physics/pnps2D.py	/^                ilu = dict(fill_level = 1)))$/;"	v	class:StokesProblemAxisym
ilu	nanopores/physics/pnps2Dnewton.py	/^                ilu = dict(fill_level = 1)))$/;"	v	class:PNPSProblemAxisym
ilu	nanopores/physics/poisson.py	/^                ilu = dict(fill_level = 1)))$/;"	v	class:PoissonProblem
ilu	nanopores/tools/solvermethods.py	/^            ilu = dict(fill_level = 1)))$/;"	v
imax	nanopores/models/HoworkaSimple.py	/^imax = 10,$/;"	v
imax	nanopores/models/pughpore.py	/^    imax = 30,$/;"	v
imax	nanopores/physics/pnps.py	/^    imax = 50$/;"	v	class:PNPS
imax	nanopores/tools/pdesystem.py	/^    imax = 100$/;"	v	class:PDESystem
imax	scripts/numerics/hybrid_vs_newton.py	/^imax = 10,$/;"	v
imax	scripts/numerics/test_fixedpoint.py	/^imax = 10,$/;"	v
imax	scripts/numerics/test_fixedpoint_1D.py	/^imax = 10,$/;"	v
imax	scripts/pughpore/test_pugh.py	/^    imax = 30,$/;"	v
imaxfp	scripts/numerics/test_fixedpoint.py	/^imaxfp = 20,$/;"	v
imaxh	scripts/numerics/HoworkaSimple.py	/^imaxh = 10,$/;"	v
implicit	scripts/howorka/selectivity.py	/^    implicit = False,$/;"	v
implicit	scripts/howorka/selectivity.py	/^    implicit = p.implicit,$/;"	v
implicit	scripts/numerics/implicit_vs_explicit.py	/^def implicit():$/;"	f
import_synonymes	nanopores/tools/geometry.py	/^    def import_synonymes(self, synonymes, conservative=False):$/;"	m	class:Geometry
import_vars	nanopores/tools/utilities.py	/^def import_vars(mod):$/;"	f
imtqlx	scripts/finfet/collocation_methods/imtqlx.m	/^function [ d, z ] = imtqlx ( n, d, e, z )$/;"	f
in_rect_xz	nanopores/geometries/Nanowire/subdomains.py	/^def in_rect_xz(x, C, w, h):$/;"	f
increment	nanopores/tools/illposed.py	/^    def increment(self):$/;"	m	class:AdaptableNonlinearProblem
indicator	nanopores/tools/geometry.py	/^    def indicator(self, string, DG=False, callable=False):$/;"	m	class:Geometry
indicator_poretop	scripts/random_walk_aHem/run.py	/^def indicator_poretop(vec):$/;"	f
indicator_poretop_geo	scripts/random_walk_aHem/run.py	/^indicator_poretop_geo = geo.indicator("poretop",callable=True)$/;"	v
inewton	scripts/numerics/anaPNPS_refinement.py	/^inewton = 1,$/;"	v
inewton	scripts/numerics/anaPNPS_uniform.py	/^inewton = 1,$/;"	v
inewton	scripts/numerics/test_fixedpoint_1D.py	/^inewton = 10,$/;"	v
inferno	scripts/howorka/colormaps.py	/^inferno = cmaps['inferno']$/;"	v
init_cells	scripts/test.py	/^init_cells = geo.mesh.num_cells()$/;"	v
init_code	nanopores/py4gmsh/basic.py	/^def init_code():$/;"	f
init_geo	nanopores/models/pughpore.py	/^    def init_geo(self):$/;"	m	class:Setup
init_geo	nanopores/tools/solvers.py	/^    def init_geo(self): $/;"	m	class:Setup
init_params	nanopores/tools/solvers.py	/^    def init_params(self, params, **paramsets):$/;"	m	class:Setup
init_phys	nanopores/models/pughpore.py	/^    def init_phys(self):$/;"	m	class:Setup
init_phys	nanopores/tools/solvers.py	/^    def init_phys(self):$/;"	m	class:Setup
initial_ions	nanopores/physics/howorka.py	/^initial_ions = {$/;"	v
initial_ions	nanopores/physics/pore_dna.py	/^initial_ions = {$/;"	v
initial_ions	nanopores/physics/pore_molecule.py	/^initial_ions = {$/;"	v
initial_u	nanopores/physics/convdiff.py	/^    def initial_u(V, u0=None, steady=False):$/;"	m	class:ConvectionDiffusionProblem
initial_u	nanopores/physics/exittime.py	/^    def initial_u(V, u0=0.):$/;"	m	class:SurvivalProblem
initial_u	nanopores/physics/pnps2Dnewton.py	/^    def initial_u(V, geo, phys):$/;"	m	class:SimplePNPSProblem
initial_u	nanopores/physics/simplepnps.py	/^    def initial_u(V, geo, phys, v0=None):$/;"	m	class:SimplePNPProblem
initial_u	nanopores/physics/simplepnps.py	/^    def initial_u(V, phys):$/;"	m	class:SimpleNernstPlanckProblem
initial_u	scripts/numerics/diffusion_with_force_profile.py	/^    def initial_u(V, c0):$/;"	m	class:DiffusionProblem1D
initialh	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^initialh = .1$/;"	v
innerdna	scripts/numerics/H3Drefine.py	/^innerdna = Cylinder(R=geo.params["r0"], L=geo.params["l0"])$/;"	v
innerdna	scripts/numerics/adap3D.py	/^innerdna = Cylinder(R=geo.params["r0"], L=geo.params["l0"])$/;"	v
innerdna	scripts/numerics/adap3Dpb.py	/^innerdna = Cylinder(R=geo.params["r0"], L=geo.params["l0"])$/;"	v
innerdna	scripts/numerics/adap3Dref.py	/^innerdna = Cylinder(R=geo.params["r0"], L=geo.params["l0"])$/;"	v
innerdnab	scripts/numerics/H3Drefine.py	/^    innerdnab = innerdna.snap,$/;"	v
innerdnab	scripts/numerics/adap3D.py	/^    innerdnab = innerdna.snap,$/;"	v
innerdnab	scripts/numerics/adap3Dpb.py	/^    innerdnab = innerdna.snap,$/;"	v
innerdnab	scripts/numerics/adap3Dref.py	/^    innerdnab = innerdna.snap,$/;"	v
inside	nanopores/geometries/Cyl2D/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:Fluid
inside	nanopores/geometries/Cyl2D/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:Lower
inside	nanopores/geometries/Cyl2D/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:Molecule
inside	nanopores/geometries/Cyl2D/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:MoleculeB
inside	nanopores/geometries/Cyl2D/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:Side
inside	nanopores/geometries/Cyl2D/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:Upper
inside	nanopores/geometries/H_cyl_geo/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:BulkFluid
inside	nanopores/geometries/H_cyl_geo/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:ChargedDNAB
inside	nanopores/geometries/H_cyl_geo/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:CrossBottom2D
inside	nanopores/geometries/H_cyl_geo/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:CrossCenterBottom2D
inside	nanopores/geometries/H_cyl_geo/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:CrossCenterTop2D
inside	nanopores/geometries/H_cyl_geo/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:CrossTop2D
inside	nanopores/geometries/H_cyl_geo/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:DNA
inside	nanopores/geometries/H_cyl_geo/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:InnerDNAB
inside	nanopores/geometries/H_cyl_geo/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:LowerB
inside	nanopores/geometries/H_cyl_geo/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:Membrane
inside	nanopores/geometries/H_cyl_geo/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:MembraneB
inside	nanopores/geometries/H_cyl_geo/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:MembraneDNAB
inside	nanopores/geometries/H_cyl_geo/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:Molecule
inside	nanopores/geometries/H_cyl_geo/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:MoleculeB
inside	nanopores/geometries/H_cyl_geo/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:OuterDNAB
inside	nanopores/geometries/H_cyl_geo/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:OuterMembraneB
inside	nanopores/geometries/H_cyl_geo/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:PoreBottom
inside	nanopores/geometries/H_cyl_geo/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:PoreCenter
inside	nanopores/geometries/H_cyl_geo/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:PoreTop
inside	nanopores/geometries/H_cyl_geo/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:SideB
inside	nanopores/geometries/H_cyl_geo/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:UnchargedDNAB
inside	nanopores/geometries/H_cyl_geo/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:UpperB
inside	nanopores/geometries/H_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.ChargedDNAinB
inside	nanopores/geometries/H_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.ChargedDNAoutB
inside	nanopores/geometries/H_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.CrossBottom2D
inside	nanopores/geometries/H_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.CrossCenterBottom2D
inside	nanopores/geometries/H_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.CrossCenterTop2D
inside	nanopores/geometries/H_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.CrossTop2D
inside	nanopores/geometries/H_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.LeftFluidB
inside	nanopores/geometries/H_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.LowerB
inside	nanopores/geometries/H_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.MembraneB
inside	nanopores/geometries/H_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.MoleculeB
inside	nanopores/geometries/H_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.RightFluidB
inside	nanopores/geometries/H_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.UnchargedDNAB
inside	nanopores/geometries/H_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.UpperB
inside	nanopores/geometries/H_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.BulkFluidBottom
inside	nanopores/geometries/H_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.BulkFluidTop
inside	nanopores/geometries/H_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.DNA
inside	nanopores/geometries/H_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.Membrane
inside	nanopores/geometries/H_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.Molecule
inside	nanopores/geometries/H_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.PoreBottom
inside	nanopores/geometries/H_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.PoreCenter
inside	nanopores/geometries/H_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.PoreTop
inside	nanopores/geometries/Nanowire/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:Core
inside	nanopores/geometries/Nanowire/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:CoreB
inside	nanopores/geometries/Nanowire/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:Dopants
inside	nanopores/geometries/Nanowire/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:Fluid
inside	nanopores/geometries/Nanowire/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:Lower
inside	nanopores/geometries/Nanowire/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:Oxide
inside	nanopores/geometries/Nanowire/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:OxideB
inside	nanopores/geometries/Nanowire/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:Upper
inside	nanopores/geometries/P_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.ChargedDNAB
inside	nanopores/geometries/P_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.CrossCenterBottom2D
inside	nanopores/geometries/P_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.CrossCenterTop2D
inside	nanopores/geometries/P_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.InnerMembraneB
inside	nanopores/geometries/P_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.LeftFluidB
inside	nanopores/geometries/P_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.LowerB
inside	nanopores/geometries/P_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.OpeningMembraneB
inside	nanopores/geometries/P_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.OuterMembraneB
inside	nanopores/geometries/P_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.RightFluidB
inside	nanopores/geometries/P_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.UnchargedDNAB
inside	nanopores/geometries/P_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.UpperB
inside	nanopores/geometries/P_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.BulkFluid
inside	nanopores/geometries/P_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.DNA
inside	nanopores/geometries/P_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.Membrane
inside	nanopores/geometries/P_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.PoreCenter
inside	nanopores/geometries/W_2D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.CenterSAMB
inside	nanopores/geometries/W_2D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.LeftFluidB
inside	nanopores/geometries/W_2D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.LowerAuB
inside	nanopores/geometries/W_2D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.LowerB
inside	nanopores/geometries/W_2D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.LowerSAMB
inside	nanopores/geometries/W_2D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.LowerSiNB
inside	nanopores/geometries/W_2D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.MoleculeB
inside	nanopores/geometries/W_2D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.OuterSAMB
inside	nanopores/geometries/W_2D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.OuterSiNB
inside	nanopores/geometries/W_2D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.RightFluidB
inside	nanopores/geometries/W_2D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.UpperB
inside	nanopores/geometries/W_2D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.UpperSAMB
inside	nanopores/geometries/W_2D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.BulkFluid
inside	nanopores/geometries/W_2D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.MembraneAu
inside	nanopores/geometries/W_2D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.MembraneSAM
inside	nanopores/geometries/W_2D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.MembraneSiN
inside	nanopores/geometries/W_2D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.Molecule
inside	nanopores/geometries/W_2D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.PoreBottom
inside	nanopores/geometries/W_2D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.PoreCenter
inside	nanopores/geometries/W_2D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.PoreTop
inside	nanopores/geometries/W_3D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.CenterSAMB
inside	nanopores/geometries/W_3D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.FluidB
inside	nanopores/geometries/W_3D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.LowerAuB
inside	nanopores/geometries/W_3D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.LowerB
inside	nanopores/geometries/W_3D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.LowerSAMB
inside	nanopores/geometries/W_3D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.LowerSiNB
inside	nanopores/geometries/W_3D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.MoleculeB
inside	nanopores/geometries/W_3D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.OuterSAMB
inside	nanopores/geometries/W_3D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.OuterSiNB
inside	nanopores/geometries/W_3D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.UpperB
inside	nanopores/geometries/W_3D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:boundaries_list.UpperSAMB
inside	nanopores/geometries/W_3D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.BulkFluid
inside	nanopores/geometries/W_3D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.MembraneAu
inside	nanopores/geometries/W_3D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.MembraneSAM
inside	nanopores/geometries/W_3D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.MembraneSiN
inside	nanopores/geometries/W_3D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.Molecule
inside	nanopores/geometries/W_3D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.PoreBottom
inside	nanopores/geometries/W_3D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.PoreCenter
inside	nanopores/geometries/W_3D_geo/subdomains.py	/^        def inside(self, x, on_boundary):$/;"	m	class:subdomain_list.PoreTop
inside	nanopores/geometries/aHem/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:BulkFluid
inside	nanopores/geometries/aHem/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:ChargedDNAB
inside	nanopores/geometries/aHem/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:CrossBottom2D
inside	nanopores/geometries/aHem/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:CrossCenterBottom2D
inside	nanopores/geometries/aHem/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:CrossCenterTop2D
inside	nanopores/geometries/aHem/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:CrossTop2D
inside	nanopores/geometries/aHem/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:DNA
inside	nanopores/geometries/aHem/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:LowerB
inside	nanopores/geometries/aHem/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:Membrane
inside	nanopores/geometries/aHem/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:MembraneB
inside	nanopores/geometries/aHem/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:Molecule
inside	nanopores/geometries/aHem/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:MoleculeB
inside	nanopores/geometries/aHem/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:PoreBottom
inside	nanopores/geometries/aHem/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:PoreCenter
inside	nanopores/geometries/aHem/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:PoreTop
inside	nanopores/geometries/aHem/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:SideB
inside	nanopores/geometries/aHem/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:UnchargedDNAB
inside	nanopores/geometries/aHem/subdomains.py	/^    def inside(self, x, on_boundary):$/;"	m	class:UpperB
inside	nanopores/geometries/curved.py	/^    def inside(self, x, _):$/;"	m	class:Boundary
inside	nanopores/geometries/curved.py	/^    def inside(self, x, _):$/;"	m	class:Circle
inside	nanopores/geometries/curved.py	/^    def inside(self, x, _):$/;"	m	class:Cylinder
inside	nanopores/geometries/curved.py	/^    def inside(self, x, _):$/;"	m	class:Sphere
inside	nanopores/physics/finfet.py	/^        def inside(self, x, on_boundary):$/;"	m	class:add_dopants.Dopants
inside	nanopores/tools/utilities.py	/^        def inside(self, x, on_boundary):$/;"	m	class:plot_sliced.Back
inside	scripts/fluorophore_in_top_reservoir.py	/^    def inside(self, x, on):$/;"	m	class:Bottom
inside	scripts/fluorophore_in_top_reservoir.py	/^    def inside(self, x, on):$/;"	m	class:Center
inside	scripts/fluorophore_in_top_reservoir.py	/^    def inside(self, x, on):$/;"	m	class:CenterBlock
inside	scripts/fluorophore_in_top_reservoir.py	/^    def inside(self, x, on):$/;"	m	class:CenterLine
inside	scripts/fluorophore_in_top_reservoir.py	/^    def inside(self, x, on):$/;"	m	class:Left
inside	scripts/fluorophore_in_top_reservoir.py	/^    def inside(self, x, on):$/;"	m	class:Top
inside	scripts/fluorophore_in_top_reservoir.py	/^    def inside(self, x, on):$/;"	m	class:TopBlock
inside_dopant	nanopores/geometries/Nanowire/subdomains.py	/^def inside_dopant(x, x0):$/;"	f
interpoland	scripts/howorka/test_forcefields.py	/^def interpoland(x, y, eps=1.):$/;"	f
interpolands	scripts/finfet/MLSC.py	/^interpolands = []$/;"	v
interpolate	scripts/finfet/MLSC.py	/^def interpolate(h, order):$/;"	f
interpolate_forcefieldS1_explicit	scripts/howorka/forcefields.py	/^def interpolate_forcefieldS1_explicit(**params):$/;"	f
interprete	nanopores/tools/geometry.py	/^    def interprete(self, string):$/;"	m	class:Geometry
intersection	nanopores/tools/box.py	/^def intersection(seq):$/;"	f
invscale	nanopores/physics/default.py	/^def invscale(lscale):$/;"	f
iparent	nanopores/tools/utilities.py	/^        iparent = bb.compute_first_entity_collision(cell.midpoint())$/;"	v	class:plot_sliced.Back
ipicard	scripts/numerics/anaPNPS_refinement.py	/^ipicard = 30,$/;"	v
ipicard	scripts/numerics/anaPNPS_uniform.py	/^ipicard = 30,$/;"	v
is_linear	nanopores/tools/pdesystem.py	/^    is_linear = False$/;"	v	class:GeneralNonlinearProblem
is_linear	nanopores/tools/pdesystem.py	/^    is_linear = True$/;"	v	class:GeneralLinearProblem
is_master	nanopores/tools/mpipool.py	/^    def is_master(self):$/;"	m	class:MPIPool
isclear	scripts/howorka/HoworkaTools.py	/^    isclear = False$/;"	v
isclear	scripts/howorka/HoworkaTools.py	/^isclear = True$/;"	v
isclear	scripts/howorka/video.py	/^    isclear = False$/;"	v
isclear	scripts/howorka/video.py	/^isclear = True$/;"	v
items	scripts/numerics/diffusion_with_force_profile.py	/^items = (0.25, "r025"), (0.5, "r05"), (0.75, "r075")$/;"	v
items	scripts/numerics/selectivity1D.py	/^items = (0.25, "r025", 0.51), (0.5, "r05", 0.17), (0.75, "r075", 0.027)$/;"	v
iterate_in_parallel	nanopores/scripts/simulation2D.py	/^def iterate_in_parallel(method, nproc=1, iterkeys=None, **params):$/;"	f
iterated_aitken	nanopores/tools/illposed.py	/^def iterated_aitken(l):$/;"	f
iterative	nanopores/physics/exittime.py	/^        iterative = False,$/;"	v	class:ExitTimeProblem
iterative	nanopores/physics/exittime.py	/^        iterative = False,$/;"	v	class:SurvivalProblem
iterative	nanopores/physics/pb.py	/^        iterative = True,$/;"	v	class:LinearNonstandardPBProblem
iterative	nanopores/physics/pb.py	/^        iterative = True,$/;"	v	class:NonstandardPBProblem
iterative	nanopores/physics/pnps.py	/^        iterative = True,$/;"	v	class:StokesProblem
iterative	nanopores/physics/pnps2D.py	/^        iterative = False,$/;"	v	class:PNPProblemAxisym
iterative	nanopores/physics/pnps2D.py	/^        iterative = False,$/;"	v	class:StokesProblemAxisym
iterative	nanopores/physics/pnps2Dnewton.py	/^        iterative = False,$/;"	v	class:PNPSProblemAxisym
iterative	nanopores/physics/poisson.py	/^        iterative = True,$/;"	v	class:PoissonProblem
iterative	nanopores/scripts/ahemFPT.py	/^iterative = True$/;"	v
iterative	nanopores/scripts/ahemIV.py	/^iterative = True$/;"	v
iterative	nanopores/tools/solvermethods.py	/^    iterative = False,$/;"	v
iterative	nanopores/tools/solvermethods.py	/^    iterative = True,$/;"	v
iterative	scripts/numerics/anaPNPS_refinement.py	/^iterative = True,$/;"	v
iterative	scripts/numerics/anaPNPS_refinement_2D.py	/^iterative = True,$/;"	v
iterative	scripts/numerics/anaPNPS_uniform.py	/^iterative = True,$/;"	v
iterative	scripts/numerics/analyticalPNPS.py	/^iterative = True,$/;"	v
iterative	scripts/numerics/analyticalPNPS_3D.py	/^iterative = True,$/;"	v
iterative	scripts/numerics/hybrid_vs_newton.py	/^iterative = False,$/;"	v
iterative	scripts/numerics/test_fixedpoint.py	/^    iterative=iterative)$/;"	v
iterative	scripts/numerics/test_fixedpoint.py	/^iterative = False,$/;"	v
iterative	scripts/plot_scripts/IV_ahem.py	/^    iterative = True,)$/;"	v
iterative	scripts/plot_scripts/parameter_script.py	/^iterative = True,$/;"	v
j0	scripts/finfet/test_wire.py	/^j0 = Jp + Jn$/;"	v
jacobi_compute	scripts/finfet/collocation_methods/jacobi_compute.m	/^function [ x, w ] = jacobi_compute ( n, alpha, beta )$/;"	f
jacobi_compute_points	scripts/finfet/collocation_methods/jacobi_compute_points.m	/^function points = jacobi_compute_points ( order, alpha, beta )$/;"	f
jacobi_compute_points_np	scripts/finfet/collocation_methods/jacobi_compute_points_np.m	/^function points = jacobi_compute_points_np ( order, np, p )$/;"	f
jacobi_compute_weights	scripts/finfet/collocation_methods/jacobi_compute_weights.m	/^function w = jacobi_compute_weights ( order, alpha, beta )$/;"	f
jacobi_compute_weights_np	scripts/finfet/collocation_methods/jacobi_compute_weights_np.m	/^function w = jacobi_compute_weights_np ( order, np, p )$/;"	f
jacobi_integral	scripts/finfet/collocation_methods/jacobi_integral.m	/^function value = jacobi_integral ( expon, alpha, beta )$/;"	f
jacobi_ss_compute	scripts/finfet/collocation_methods/jacobi_ss_compute.m	/^function [ x, w ] = jacobi_ss_compute ( order, alpha, beta )$/;"	f
jacobi_ss_recur	scripts/finfet/collocation_methods/jacobi_ss_recur.m	/^function [ p2, dp2, p1 ] = jacobi_ss_recur ( x, order, alpha, beta, b, c )$/;"	f
jacobi_ss_root	scripts/finfet/collocation_methods/jacobi_ss_root.m	/^function [ x, dp2, p1 ] = jacobi_ss_root ( x, order, alpha, beta, b, c )$/;"	f
jn	scripts/finfet/finfet.py	/^jn = Constant(mun*qq*E)*n$/;"	v
join_dicts	nanopores/models/pughpore.py	/^def join_dicts(list):$/;"	f
join_dicts	nanopores/scripts/simulation2D.py	/^def join_dicts(lst):$/;"	f
jp	scripts/finfet/finfet.py	/^jp = Constant(mup*qq*E)*p$/;"	v
jsondata	scripts/numerics/linear-robust.py	/^jsondata = tuple(d.tolist() for d in data)          $/;"	v
k	nanopores/physics/exittime.py	/^    k = 1$/;"	v	class:ExitTimeProblem
k	nanopores/physics/exittime.py	/^    k = 1$/;"	v	class:SurvivalProblem
k	nanopores/physics/pb.py	/^    k = 1$/;"	v	class:LinearNonstandardPBProblem
k	nanopores/physics/pb.py	/^    k = 1$/;"	v	class:NonstandardPBProblem
k	nanopores/physics/pnps.py	/^    k = 1$/;"	v	class:PNPProblem
k	nanopores/physics/pnps.py	/^    k = 1$/;"	v	class:StokesProblemEqualOrder
k	nanopores/physics/pnps.py	/^    k = 2$/;"	v	class:StokesProblem
k	nanopores/physics/pnps2D.py	/^    k = 1$/;"	v	class:PNPProblemAxisym
k	nanopores/physics/pnps2D.py	/^    k = 1$/;"	v	class:StokesProblemAxisymEqualOrder
k	nanopores/physics/pnps2D.py	/^    k = 2$/;"	v	class:StokesProblemAxisym
k	nanopores/physics/pnps2Dnewton.py	/^    k = 1$/;"	v	class:PNPSProblemAxisym
k	nanopores/physics/poisson.py	/^    k = 1$/;"	v	class:PoissonProblem
k	nanopores/scripts/stokes_diffusivity.py	/^k = 1.38064e-23$/;"	v
k	scripts/pughpore/sobol_points.py	/^k=up.k #increase number of points to 2^(k0+k)$/;"	v
k0	scripts/pughpore/sobol_points.py	/^k0=3 #start exponent 2^k0$/;"	v
kB	nanopores/physics/params_physical.py	/^kB = 1.3806488e-23 # boltzmann [J\/K]$/;"	v
kT	nanopores/physics/electrolyte.py	/^kT = lambda T: kB*T$/;"	v
kT	nanopores/physics/howorka.py	/^kT = lambda: kB*T$/;"	v
kT	nanopores/physics/params_physical.py	/^kT = kB*T$/;"	v
kT	nanopores/physics/pore_dna.py	/^kT = lambda: kB*T$/;"	v
kT	nanopores/physics/pore_molecule.py	/^kT = lambda kB, T: kB*T$/;"	v
kT	scripts/pughpore/randomwalk/run.py	/^kT = physp.kT$/;"	v
kb	scripts/random_walk_aHem/run.py	/^kb=1.3806488e-23 #boltzmann [J\/K]$/;"	v
kb	scripts/random_walk_aHem/varplots.py	/^kb=1.3806488e-23 #boltzmann [J\/K]$/;"	v
kp	nanopores/physics/exittime.py	/^        kp = "ilu",$/;"	v	class:ExitTimeProblem
kp	nanopores/physics/exittime.py	/^        kp = "ilu",$/;"	v	class:SurvivalProblem
kp	nanopores/physics/pb.py	/^        kp = "amg",$/;"	v	class:LinearNonstandardPBProblem
kp	nanopores/physics/pb.py	/^        kp = "amg",$/;"	v	class:NonstandardPBProblem
kp	nanopores/physics/pnps.py	/^        kp = "hypre_euclid",$/;"	v	class:StokesProblem
kp	nanopores/physics/pnps2D.py	/^        kp = "hypre_euclid",$/;"	v	class:PNPProblemAxisym
kp	nanopores/physics/pnps2D.py	/^        kp = "ilu",$/;"	v	class:StokesProblemAxisym
kp	nanopores/physics/pnps2Dnewton.py	/^        kp = "ilu",$/;"	v	class:PNPSProblemAxisym
kp	nanopores/physics/poisson.py	/^        kp = "amg",$/;"	v	class:PoissonProblem
kp	nanopores/tools/solvermethods.py	/^    kp = "hypre_euclid",$/;"	v
kparams	nanopores/physics/exittime.py	/^        kparams = dict($/;"	v	class:ExitTimeProblem
kparams	nanopores/physics/exittime.py	/^        kparams = dict($/;"	v	class:SurvivalProblem
kparams	nanopores/physics/pb.py	/^        kparams = dict($/;"	v	class:LinearNonstandardPBProblem
kparams	nanopores/physics/pb.py	/^        kparams = dict($/;"	v	class:NonstandardPBProblem
kparams	nanopores/physics/pnps.py	/^        kparams = dict($/;"	v	class:StokesProblem
kparams	nanopores/physics/pnps2D.py	/^        kparams = dict($/;"	v	class:PNPProblemAxisym
kparams	nanopores/physics/pnps2D.py	/^        kparams = dict($/;"	v	class:StokesProblemAxisym
kparams	nanopores/physics/pnps2Dnewton.py	/^        kparams = dict($/;"	v	class:PNPSProblemAxisym
kparams	nanopores/physics/poisson.py	/^        kparams = dict($/;"	v	class:PoissonProblem
kparams	nanopores/tools/solvermethods.py	/^    kparams = dict($/;"	v
ks	nanopores/physics/exittime.py	/^        ks = "bicgstab",$/;"	v	class:ExitTimeProblem
ks	nanopores/physics/exittime.py	/^        ks = "bicgstab",$/;"	v	class:SurvivalProblem
ks	nanopores/physics/pb.py	/^        ks = "bicgstab",$/;"	v	class:LinearNonstandardPBProblem
ks	nanopores/physics/pb.py	/^        ks = "bicgstab",$/;"	v	class:NonstandardPBProblem
ks	nanopores/physics/pnps.py	/^        ks = "tfqmr",$/;"	v	class:StokesProblem
ks	nanopores/physics/pnps2D.py	/^        ks = "bicgstab",$/;"	v	class:PNPProblemAxisym
ks	nanopores/physics/pnps2D.py	/^        ks = "minres",$/;"	v	class:StokesProblemAxisym
ks	nanopores/physics/pnps2Dnewton.py	/^        ks = "bicgstab",$/;"	v	class:PNPSProblemAxisym
ks	nanopores/physics/poisson.py	/^        ks = "cg",$/;"	v	class:PoissonProblem
ks	nanopores/tools/solvermethods.py	/^    ks = "bicgstab",$/;"	v
ks	nanopores/tools/solvermethods.py	/^    ks = "cg",$/;"	v
ks	nanopores/tools/solvermethods.py	/^    ks = "gmres",$/;"	v
ks	nanopores/tools/solvermethods.py	/^    ks = "tfqmr",$/;"	v
ku	scripts/numerics/hybrid_vs_newton.py	/^    ku = 1$/;"	v
ku	scripts/numerics/hybrid_vs_newton.py	/^    ku = 2$/;"	v
ku	scripts/numerics/test_fixedpoint.py	/^    ku = 1$/;"	v
ku	scripts/numerics/test_fixedpoint.py	/^    ku = 2$/;"	v
l	nanopores/geometries/Cyl2D/params_geo.py	/^l = 80*nm$/;"	v
l	nanopores/geometries/Nanowire/params_geo.py	/^l = 1000*nm$/;"	v
l	scripts/FPTscript.py	/^l = []$/;"	v
l	scripts/finfet/test_wire.py	/^l = 10 # length of wire [nm]$/;"	v
l	scripts/stokes_law/stokes_law.py	/^l = 1e-6  # length scale [m]$/;"	v
l	scripts/stokes_law/stokes_law_2D_stats.py	/^l = 1e-6   # length scale [m]$/;"	v
l0	nanopores/geometries/H_cyl_geo/params_geo.py	/^l0 = 9.0*nm$/;"	v
l0	nanopores/geometries/H_cyl_geo/params_geo_old.py	/^l0 = 15.0*nm$/;"	v
l0	nanopores/geometries/H_geo/params_geo.py	/^l0 = 9.0*nm$/;"	v
l0	nanopores/geometries/H_geo/params_geo_old.py	/^l0 = 15.0*nm$/;"	v
l0	nanopores/geometries/P_geo/params_geo.py	/^l0=20*nm$/;"	v
l0	nanopores/geometries/aHem/params_geo.py	/^l0 = 4.0*nm$/;"	v
l0	nanopores/geometries/pughpore.py	/^    l0 = 22.5,$/;"	v
l0	scripts/howorka/largepore_dna.py	/^l0 = 22.5$/;"	v
l0	scripts/numerics/hybrid_vs_newton.py	/^l0 = 9.,$/;"	v
l0	scripts/numerics/hybrid_vs_newton.py	/^l0 = l0$/;"	v
l0	scripts/numerics/test_fixedpoint.py	/^l0 = 9*nm,$/;"	v
l0	scripts/numerics/test_fixedpoint.py	/^l0 = l0$/;"	v
l0	scripts/params_nice_2D.py	/^l0 = 15.0*nm$/;"	v
l0	scripts/plot_scripts/script2DW.py	/^l0 = geo_dict["lsin"]+geo_dict["lau"]+lsam$/;"	v
l0	scripts/pughpore/sobol_points.py	/^l0 = up.l0$/;"	v
l0	scripts/stokes_law/stokes_law_2D_stats.py	/^l0 = 200$/;"	v
l0	scripts/test2DP.py	/^l0 = 50*nm$/;"	v
l0	scripts/test3D_GOA.py	/^l0 = 10*nm$/;"	v
l0	scripts/test_axisym.py	/^l0 = 15.$/;"	v
l1	nanopores/geometries/H_cyl_geo/params_geo.py	/^l1 = 2.2*nm$/;"	v
l1	nanopores/geometries/H_cyl_geo/params_geo_old.py	/^l1 = 2.2*nm$/;"	v
l1	nanopores/geometries/H_geo/params_geo.py	/^l1 = 2.2*nm$/;"	v
l1	nanopores/geometries/H_geo/params_geo_old.py	/^l1 = 2.2*nm$/;"	v
l1	nanopores/geometries/P_geo/params_geo.py	/^l1=50*nm$/;"	v
l1	nanopores/geometries/aHem/params_geo.py	/^l1 = 5.5*nm$/;"	v
l1	nanopores/geometries/pughpore.py	/^    l1 = 17.5,$/;"	v
l1	scripts/howorka/largepore_dna.py	/^l1 = 17.5$/;"	v
l1	scripts/numerics/adap2Dref.py	/^l1 = 10*nm$/;"	v
l1	scripts/params_nice_2D.py	/^l1 = 4*nm$/;"	v
l1	scripts/pughpore/sobol_points.py	/^l1 = up.l1$/;"	v
l1	scripts/test2D.py	/^l1 = 10*nm$/;"	v
l1	scripts/test2Dold.py	/^l1 = 10*nm$/;"	v
l1	scripts/test3D_GOA.py	/^l1 = 10*nm$/;"	v
l1	scripts/test_axisym.py	/^l1 = 2.$/;"	v
l2	nanopores/geometries/aHem/params_geo.py	/^l2 = 6.2*nm$/;"	v
l2	nanopores/geometries/pughpore.py	/^    l2 = 12.5,$/;"	v
l2	scripts/howorka/largepore_dna.py	/^l2 = 12.5$/;"	v
l2	scripts/pughpore/sobol_points.py	/^l2 = up.l2$/;"	v
l3	nanopores/geometries/aHem/params_geo.py	/^l3 = 15.0*nm$/;"	v
l3	nanopores/geometries/pughpore.py	/^    l3 = 7.5,$/;"	v
l3	nanopores/scripts/ahemFPT.py	/^l3 = 15.$/;"	v
l3	nanopores/scripts/ahemIV.py	/^l3 = 15.$/;"	v
l3	nanopores/scripts/test_survival.py	/^    l3 = 30.,$/;"	v
l3	scripts/howorka/largepore_dna.py	/^l3 = 7.5$/;"	v
l3	scripts/pughpore/sobol_points.py	/^l3 = up.l3$/;"	v
l3	scripts/survival.py	/^    l3 = 60.,$/;"	v
l3	scripts/test_ahem.py	/^    l3 = 30.,$/;"	v
l4	nanopores/geometries/aHem/params_geo.py	/^l4 = 1.0*nm$/;"	v
l4	nanopores/geometries/pughpore.py	/^    l4 = 17.5,$/;"	v
l4	nanopores/scripts/ahemFPT.py	/^l4 = 15.$/;"	v
l4	nanopores/scripts/ahemIV.py	/^l4 = 15.$/;"	v
l4	nanopores/scripts/test_survival.py	/^    l4 = 30.,$/;"	v
l4	scripts/howorka/largepore_dna.py	/^l4 = 17.5$/;"	v
l4	scripts/pughpore/sobol_points.py	/^l4 = up.l4$/;"	v
l4	scripts/survival.py	/^    l4 = 10.,$/;"	v
l4	scripts/test_ahem.py	/^    l4 = 15.,$/;"	v
label	scripts/finfet/MLSC.py	/^label = "|Iluh - I%duh|\/|I%duh|" %(maxorder, maxorder)$/;"	v
label	scripts/howorka/ivcurve.py	/^    label = label.replace("dnaqsdamp=", "$\\\\rho=-")$/;"	v
label	scripts/howorka/ivcurve.py	/^    label = line.get_label()$/;"	v
label	scripts/numerics/PMF.py	/^label = "finite-sized"$/;"	v
label	scripts/numerics/plot_adaptivity_results.py	/^    label = label.replace(r"0.67", r"2\/3")$/;"	v
label	scripts/numerics/plot_adaptivity_results.py	/^    label = line.get_label()$/;"	v
label1	scripts/random_walk_aHem/varplots.py	/^label1='Sample mean'$/;"	v
label2	scripts/random_walk_aHem/varplots.py	/^label2='Calculated mean'$/;"	v
label3	scripts/random_walk_aHem/varplots.py	/^label3='Sample standard deviation'$/;"	v
label4	scripts/random_walk_aHem/varplots.py	/^label4='Calculated standard deviation'$/;"	v
laguerre_compute	scripts/finfet/collocation_methods/gen_laguerre_compute.m	/^function [ x, w ] = laguerre_compute ( n, alpha )$/;"	f
laguerre_compute	scripts/finfet/collocation_methods/laguerre_compute.m	/^function [ x, w ] = laguerre_compute ( n )$/;"	f
laguerre_compute_points	scripts/finfet/collocation_methods/laguerre_compute_points.m	/^function x = laguerre_compute_points ( order )$/;"	f
laguerre_compute_points_np	scripts/finfet/collocation_methods/laguerre_compute_points_np.m	/^function x = laguerre_compute_points_np ( order, np, p )$/;"	f
laguerre_compute_weights	scripts/finfet/collocation_methods/laguerre_compute_weights.m	/^function w = laguerre_compute_weights ( order )$/;"	f
laguerre_compute_weights_np	scripts/finfet/collocation_methods/laguerre_compute_weights_np.m	/^function w = laguerre_compute_weights_np ( order, np, p )$/;"	f
laguerre_integral	scripts/finfet/collocation_methods/laguerre_integral.m	/^function exact = laguerre_integral ( expon )$/;"	f
laguerre_lookup_points	scripts/finfet/collocation_methods/laguerre_lookup_points.m	/^function points = laguerre_lookup_points ( order )$/;"	f
laguerre_lookup_weights	scripts/finfet/collocation_methods/laguerre_lookup_weights.m	/^function w = laguerre_lookup_weights ( order )$/;"	f
laguerre_ss_compute	scripts/finfet/collocation_methods/laguerre_ss_compute.m	/^function [ x, w ] = laguerre_ss_compute ( order )$/;"	f
laguerre_ss_recur	scripts/finfet/collocation_methods/laguerre_ss_recur.m	/^function [ p2, dp2, p1 ] = laguerre_ss_recur ( x, order, b, c )$/;"	f
laguerre_ss_root	scripts/finfet/collocation_methods/laguerre_ss_root.m	/^function [ x, dp2, p1 ] = laguerre_ss_root ( x, order, b, c )$/;"	f
lam	scripts/stokes_law/stokes_drag_comparison.py	/^lam = TT[:,0] # lam = r\/R$/;"	v
lambda_to_S1	scripts/howorka/forcefields.py	/^def lambda_to_S1(f, mesh, dim=1):$/;"	f
lau	nanopores/geometries/W_2D_geo/params_geo.py	/^lau = 40*nm$/;"	v
lau	nanopores/geometries/W_3D_geo/params_geo.py	/^lau = 40*nm$/;"	v
lb	nanopores/geometries/finfet.py	/^lb = 9.$/;"	v
lc	nanopores/geometries/H_cyl_geo/params_geo.py	/^lc = nm$/;"	v
lc	nanopores/geometries/H_cyl_geo/params_geo_old.py	/^lc = nm$/;"	v
lc	nanopores/geometries/H_geo/params_geo.py	/^lc = nm$/;"	v
lc	nanopores/geometries/H_geo/params_geo_old.py	/^lc = nm$/;"	v
lc	nanopores/geometries/Nanowire/params_geo.py	/^lc = 16*nm$/;"	v
lc	nanopores/geometries/W_2D_geo/params_geo.py	/^lc = 10*nm$/;"	v
lc	nanopores/geometries/W_3D_geo/params_geo.py	/^lc = 10*nm$/;"	v
lc	nanopores/geometries/aHem/params_geo.py	/^lc = nm$/;"	v
lc	scripts/params_nice_2D.py	/^lc = nm$/;"	v
lc	scripts/test_axisym.py	/^lc = 1.$/;"	v
lcCenter	nanopores/geometries/H_cyl_geo/params_geo.py	/^lcCenter = lc*5e-2 #0.5$/;"	v
lcCenter	nanopores/geometries/H_cyl_geo/params_geo_old.py	/^lcCenter = lc*5e-2$/;"	v
lcCenter	nanopores/geometries/H_geo/params_geo.py	/^lcCenter = lc*.5 #lc*0.3$/;"	v
lcCenter	nanopores/geometries/H_geo/params_geo_old.py	/^lcCenter = lc\/2$/;"	v
lcCenter	nanopores/geometries/W_2D_geo/params_geo.py	/^lcCenter = lc\/5$/;"	v
lcCenter	nanopores/geometries/W_3D_geo/params_geo.py	/^lcCenter = lc\/5$/;"	v
lcCenter	nanopores/geometries/aHem/params_geo.py	/^lcCenter = lc*5e-2$/;"	v
lcCenter	nanopores/models/Howorka.py	/^lcCenter = lcpore,$/;"	v
lcCenter	scripts/numerics/H3Dgeometry.py	/^lcCenter = 0.1, #5,$/;"	v
lcCenter	scripts/numerics/H3Drefine.py	/^lcCenter = nm*0.1, #1,$/;"	v
lcCenter	scripts/numerics/adap3D.py	/^lcCenter = 0.05 if preadapt else 0.5,$/;"	v
lcCenter	scripts/numerics/adap3Dpb.py	/^lcCenter = 0.5,$/;"	v
lcCenter	scripts/numerics/adap3Dref.py	/^lcCenter = 0.05, #5,$/;"	v
lcDNA	scripts/params_nice_2D.py	/^lcDNA = lc\/2$/;"	v
lcFluid	scripts/params_nice_2D.py	/^lcFluid = lc$/;"	v
lcFluidCtr	scripts/params_nice_2D.py	/^lcFluidCtr = lc\/2$/;"	v
lcMembrane	nanopores/geometries/aHem/params_geo.py	/^lcMembrane = lc#*5e-3$/;"	v
lcMolecule	nanopores/geometries/H_cyl_geo/params_geo.py	/^lcMolecule = lc*3e-2 #*0.5$/;"	v
lcMolecule	nanopores/geometries/H_cyl_geo/params_geo_old.py	/^lcMolecule = lc*3e-2$/;"	v
lcMolecule	nanopores/geometries/H_geo/params_geo.py	/^lcMolecule = lc*.5 #lc*0.1$/;"	v
lcMolecule	nanopores/geometries/H_geo/params_geo_old.py	/^lcMolecule = lc*0.1$/;"	v
lcMolecule	nanopores/geometries/W_2D_geo/params_geo.py	/^lcMolecule = lc*1e-1$/;"	v
lcMolecule	nanopores/geometries/W_3D_geo/params_geo.py	/^lcMolecule = lc*1e-1$/;"	v
lcMolecule	nanopores/geometries/aHem/params_geo.py	/^lcMolecule = lc*3e-2$/;"	v
lcMolecule	nanopores/geometries/pughpore.py	/^    lcMolecule = 0.4, # relative to global mesh size$/;"	v
lcMolecule	nanopores/models/Howorka.py	/^lcMolecule = lcpore,$/;"	v
lcMolecule	scripts/howorka/largepore_dna.py	/^lcMolecule = 0.2$/;"	v
lcMolecule	scripts/numerics/H3Dgeometry.py	/^lcMolecule = 0.05, #025,$/;"	v
lcMolecule	scripts/numerics/H3Drefine.py	/^lcMolecule = nm*0.05, #025,$/;"	v
lcMolecule	scripts/numerics/adap3D.py	/^lcMolecule = 0.05 if preadapt else 0.5,$/;"	v
lcMolecule	scripts/numerics/adap3Dpb.py	/^lcMolecule = 0.5, #025,$/;"	v
lcMolecule	scripts/numerics/adap3Dref.py	/^lcMolecule = 0.03, #025,$/;"	v
lcMolecule	scripts/params_nice_2D.py	/^lcMolecule = lc\/2$/;"	v
lcOuter	nanopores/geometries/H_cyl_geo/params_geo.py	/^lcOuter = lc$/;"	v
lcOuter	nanopores/geometries/H_cyl_geo/params_geo_old.py	/^lcOuter = lc$/;"	v
lcOuter	nanopores/geometries/H_geo/params_geo.py	/^lcOuter = lc$/;"	v
lcOuter	nanopores/geometries/H_geo/params_geo_old.py	/^lcOuter = lc$/;"	v
lcOuter	nanopores/geometries/W_2D_geo/params_geo.py	/^lcOuter = lc*2$/;"	v
lcOuter	nanopores/geometries/W_3D_geo/params_geo.py	/^lcOuter = lc*5$/;"	v
lcOuter	nanopores/geometries/aHem/params_geo.py	/^lcOuter = lc#*1e-1$/;"	v
lcpore	nanopores/models/Howorka.py	/^lcpore = 0.5, # relative mesh width of pore in 3D$/;"	v
lcpore	scripts/howorka/forcefield3D.py	/^    lcpore = 0.1,$/;"	v
lcpore	scripts/test_features/howorka3D.py	/^lcpore = 0.1,$/;"	v
left	nanopores/tools/box.py	/^    left = 0,$/;"	v
left	scripts/random_walk_aHem/run.py	/^left=sims-done$/;"	v
leftend	scripts/plot_forces_How/plot_drag.py	/^leftend=15.$/;"	v
leftend	scripts/plot_forces_How/plot_el.py	/^leftend=15.$/;"	v
leftend	scripts/plot_forces_aHem/combine.py	/^leftend=15.$/;"	v
leftend	scripts/plot_forces_aHem/combine2.py	/^leftend=15.$/;"	v
leftend	scripts/plot_forces_aHem/plot_drag.py	/^leftend=15.$/;"	v
leftend	scripts/plot_forces_aHem/plot_el.py	/^leftend=15.$/;"	v
leftend	scripts/plot_forces_aHem/ppt.py	/^leftend=15.$/;"	v
leftend	scripts/random_walk_aHem/plot_aHem.py	/^leftend=10.$/;"	v
leftend	scripts/random_walk_aHem/plot_path.py	/^leftend=10.$/;"	v
legendre_compute	scripts/finfet/collocation_methods/legendre_compute.m	/^function [ x, w ] = legendre_compute ( n )$/;"	f
legendre_compute_points	scripts/finfet/collocation_methods/legendre_compute_points.m	/^function x = legendre_compute_points ( order )$/;"	f
legendre_compute_points_np	scripts/finfet/collocation_methods/legendre_compute_points_np.m	/^function x = legendre_compute_points_np ( order, np, p )$/;"	f
legendre_compute_weights	scripts/finfet/collocation_methods/legendre_compute_weights.m	/^function w = legendre_compute_weights ( order )$/;"	f
legendre_compute_weights_np	scripts/finfet/collocation_methods/legendre_compute_weights_np.m	/^function w = legendre_compute_weights_np ( order, np, p )$/;"	f
legendre_dr_compute	scripts/finfet/collocation_methods/legendre_dr_compute.m	/^function [ x, w ] = legendre_dr_compute ( order )$/;"	f
legendre_integral	scripts/finfet/collocation_methods/legendre_integral.m	/^function exact = legendre_integral ( expon )$/;"	f
legendre_zeros	scripts/finfet/collocation_methods/legendre_zeros.m	/^function x = legendre_zeros ( n )$/;"	f
length	nanopores/geometries/finfet.py	/^    length = lw + 2.*lb,$/;"	v
level_growth_to_order	scripts/finfet/collocation_methods/level_growth_to_order.m	/^function order = level_growth_to_order ( dim_num, level, rule, growth )$/;"	f
level_to_order_default	scripts/finfet/collocation_methods/level_to_order_default.m	/^function order = level_to_order_default ( dim_num, level, rule )$/;"	f
level_to_order_exponential	scripts/finfet/collocation_methods/level_to_order_exponential.m	/^function order = level_to_order_exponential ( dim_num, level, rule )$/;"	f
level_to_order_exponential_slow	scripts/finfet/collocation_methods/level_to_order_exponential_slow.m	/^function order = level_to_order_exponential_slow ( dim_num, level, rule )$/;"	f
level_to_order_linear	scripts/finfet/collocation_methods/level_to_order_linear.m	/^function order = level_to_order_linear ( dim_num, level, rule )$/;"	f
levels	scripts/howorka/HoworkaTools.py	/^    levels = 7,$/;"	v
levels	scripts/howorka/selectivity.py	/^    levels = 12,$/;"	v
levels	scripts/howorka/selectivity.py	/^    levels = p.levels, # levels > 1 --> logarithmic time$/;"	v
levels	scripts/howorka/test_selectivity.py	/^    levels = 1,$/;"	v
levels	scripts/howorka/video.py	/^    levels = 7,$/;"	v
levels	scripts/numerics/selectivity1D.py	/^    levels = 1,$/;"	v
lfin	nanopores/geometries/finfet.py	/^    lfin = lw$/;"	v
line	scripts/numerics/plot_adaptivity_results.py	/^    line = ax.lines[3]$/;"	v
linearRHS	nanopores/tools/geometry.py	/^    def linearRHS(self, v, string=None, value=None):$/;"	m	class:Geometry
linearize	scripts/numerics/test_fixedpoint_1D.py	/^linearize = True,$/;"	v
linspace	scripts/numerics/force_profiles.py	/^linspace = numpy.linspace(*space)$/;"	v
list_files	nanopores/tools/fields.py	/^    def list_files(self):$/;"	m	class:Header
ll	nanopores/geometries/finfet.py	/^ll = 5. #the length of the layers$/;"	v
lm	nanopores/geometries/aHem/params_geo.py	/^lm = 2.2*nm$/;"	v
load	nanopores/tools/fields.py	/^    def load(self, params):$/;"	m	class:cache
load	scripts/plot_scripts/IV_curve_2D.py	/^def load(fname):$/;"	f
load	scripts/plot_scripts/PMF_Profile_2D.py	/^def load(fname):$/;"	f
load	scripts/plot_scripts/current_trace_2D.py	/^def load(fname):$/;"	f
load	scripts/plot_scripts/script2DW.py	/^def load(fname):$/;"	f
load_Fref	nanopores/models/mysolve.py	/^def load_Fref():$/;"	f
load_Fref	scripts/numerics/mysolve.py	/^def load_Fref():$/;"	f
load_dict	nanopores/tools/utilities.py	/^def load_dict(dir, name):$/;"	f
load_estimators	scripts/numerics/mysolve.py	/^def load_estimators(name):$/;"	f
load_file	nanopores/tools/fields.py	/^    def load_file(self, name, params):$/;"	m	class:Header
load_file	nanopores/tools/fields.py	/^def load_file(name, **params):$/;"	f
load_force_field	scripts/howorka/HoworkaTools.py	/^def load_force_field():$/;"	f
load_force_field	scripts/howorka/forcefield.py	/^def load_force_field():$/;"	f
load_forcefield_explicit	scripts/howorka/forcefields.py	/^def load_forcefield_explicit(**params):$/;"	f
load_forcefield_implicit	scripts/howorka/forcefield2D.py	/^def load_forcefield_implicit(**params):$/;"	f
load_functions	nanopores/tools/utilities.py	/^def load_functions(name, space=None):$/;"	f
load_mesh	nanopores/tools/utilities.py	/^def load_mesh(name):$/;"	f
load_stuff	nanopores/tools/utilities.py	/^def load_stuff(name):$/;"	f
load_vector_functions	nanopores/tools/utilities.py	/^def load_vector_functions(name):$/;"	f
loadall	scripts/numerics/force_profiles.py	/^def loadall(name, Qmol):$/;"	f
loadforces	scripts/numerics/force_profiles.py	/^def loadforces(name):$/;"	f
loadforces	scripts/plot_forces_How/calculateforce.py	/^def loadforces():$/;"	f
loadforces	scripts/plot_forces_aHem/calculateforce.py	/^def loadforces():$/;"	f
loadforces	scripts/random_walk_aHem/calculateforce.py	/^def loadforces():$/;"	f
loadplots	nanopores/tools/utilities.py	/^def loadplots(name, show=True):$/;"	f
log	scripts/howorka/HoworkaTools.py	/^    log = True,$/;"	v
log	scripts/howorka/test_selectivity.py	/^    log = True,$/;"	v
log	scripts/howorka/video.py	/^    log = True,$/;"	v
log	scripts/numerics/selectivity1D.py	/^    log = True,$/;"	v
logdict	scripts/plot_scripts/script2DWelectrodes.py	/^logdict = dict(params = defparams)$/;"	v
logdir	scripts/plot_scripts/script2DWelectrodes.py	/^logdir = os.path.join(DATADIR, geo_name, "log","")$/;"	v
logtimerange	nanopores/tools/transientpde.py	/^def logtimerange(T0, levels, frac=0.01, mult=10, change_dt=None):$/;"	f
lowerb	nanopores/physics/pore.py	/^    lowerb = "bV"$/;"	v
lowerb	nanopores/physics/pore.py	/^    lowerb = "bulkcon"$/;"	v
lowerb	scripts/analytical_test_case.py	/^    lowerb = domain2D.boundary("bottom"),$/;"	v
lowerb	scripts/analytical_test_case.py	/^    lowerb = v0ex,$/;"	v
lowerb	scripts/howorka/largepore.py	/^    lowerb = lowerb,$/;"	v
lowerb	scripts/howorka/largepore.py	/^lowerb = reservoir.boundary("bottom")$/;"	v
lowerb	scripts/howorka/largepore_dna.py	/^    lowerb = lowerb,$/;"	v
lowerb	scripts/howorka/largepore_dna.py	/^lowerb = reservoir.boundary("bottom")$/;"	v
lowerb	scripts/numerics/anaPNPS_refinement.py	/^    lowerb = domain2D.boundary("bottom"),$/;"	v
lowerb	scripts/numerics/anaPNPS_refinement_2D.py	/^    lowerb = domain2D.boundary("bottom"),$/;"	v
lowerb	scripts/numerics/anaPNPS_uniform.py	/^    lowerb = domain2D.boundary("bottom"),$/;"	v
lowerb	scripts/numerics/analyticalPNPS.py	/^    lowerb = domain2D.boundary("bottom"),$/;"	v
lowerb	scripts/numerics/analyticalPNPS_2D.py	/^    lowerb = -lscale*eps*bV\/(2.*Rz),$/;"	v
lowerb	scripts/numerics/analyticalPNPS_2D.py	/^    lowerb = domain2D.boundary("bottom"),$/;"	v
lowerb	scripts/numerics/analyticalPNPS_3D.py	/^    lowerb = domain2D.boundary("bottom"),$/;"	v
lowerb	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    lowerb = -lscale*eps*bV\/(2.*Rz),$/;"	v
lowerb	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    lowerb = domain2D.boundary("bottom"),$/;"	v
lowerb	scripts/numerics/analyticalPNP_3D.py	/^    lowerb = domain2D.boundary("bottom"),$/;"	v
lowerb	scripts/numerics/selectivity1D.py	/^    lowerb = domain.boundary("left"),$/;"	v
lowerb	scripts/numerics/test_fixedpoint_1D.py	/^    lowerb = lowerb,$/;"	v
lowerb	scripts/numerics/test_fixedpoint_1D.py	/^lowerb = domain.boundary("left")$/;"	v
lowerb	scripts/test_axisym.py	/^    lowerb = domain.boundary("bottom"),$/;"	v
lowerb	scripts/test_box.py	/^    lowerb = domain.boundary("bottom"),$/;"	v
lowerb	scripts/test_features/curved.py	/^    lowerb = domain.boundary("bottom"),$/;"	v
lowerb	scripts/toy_models/pnp1D.py	/^    lowerb = lowerb,$/;"	v
lowerb	scripts/toy_models/pnp1D.py	/^lowerb = domain.boundary("left")$/;"	v
lowerblayer	nanopores/geometries/W_2D_geo/params_geo.py	/^lowerblayer = None$/;"	v
lowermbias	nanopores/physics/howorka.py	/^lowermbias = None$/;"	v
lowermbias	nanopores/physics/pore_dna.py	/^lowermbias = None$/;"	v
lowermbias	nanopores/physics/pore_molecule.py	/^lowermbias = None$/;"	v
lowermbias	scripts/plot_scripts/PMF_Profile_2D.py	/^lowermbias = -.03,$/;"	v
lowermbias	scripts/test3D_GOA.py	/^lowermbias = -.02,$/;"	v
lowerpbias	nanopores/physics/howorka.py	/^lowerpbias = None$/;"	v
lowerpbias	nanopores/physics/pore_dna.py	/^lowerpbias = None$/;"	v
lowerpbias	nanopores/physics/pore_molecule.py	/^lowerpbias = None$/;"	v
lowerqs	nanopores/physics/howorka.py	/^lowerqs = lambda: (-Qmol*bulkconFluo*mol*hReservoir\/2. if applylowerqs else 0.)$/;"	v
lowerqs	nanopores/physics/pore_molecule.py	/^lowerqs = lambda: (-Qmol*bulkconFluo*mol*hReservoir\/2. if applylowerqs else 0.)$/;"	v
lrange	scripts/stokes_law/stokes_law_2D_stats.py	/^lrange = [1.15, 1.23, 1.31, 1.4, 1.5, 1.7, 2, 2.25, 2.6, 3.4, 4.4, 5.8, 7.6, 10, 13, 17, 23, 30, 40, 50, 67, 87, 115, 150, 200]$/;"	v
lsam	nanopores/geometries/W_2D_geo/params_geo.py	/^lsam = 3*nm$/;"	v
lsam	nanopores/geometries/W_3D_geo/params_geo.py	/^lsam = 3*nm$/;"	v
lsam	scripts/plot_scripts/script2DW.py	/^lsam = geo_dict["lsam"]$/;"	v
lsam	scripts/plot_scripts/script2DWelectrodes.py	/^lsam = geo_dict["lsam"]$/;"	v
lsam	scripts/plot_scripts/script3DW.py	/^lsam = geo_dict["lsam"]$/;"	v
lsam	scripts/test2DW.py	/^lsam = geo_dict["lsam"]$/;"	v
lscale	nanopores/geometries/finfet.py	/^    lscale = 1e9,$/;"	v
lscale	nanopores/physics/default.py	/^def lscale(geo): $/;"	f
lscale	nanopores/physics/pore_dna.py	/^def lscale(geo):$/;"	f
lscale	scripts/analytical_test_case.py	/^lscale = Constant(phys.lscale)$/;"	v
lscale	scripts/analytical_test_case.py	/^lscale = phys.lscale$/;"	v
lscale	scripts/howorka/largepore.py	/^    lscale = 1e9,$/;"	v
lscale	scripts/howorka/largepore_dna.py	/^    lscale = 1e9,$/;"	v
lscale	scripts/numerics/anaPNPS_refinement.py	/^lscale = Constant(phys.lscale)$/;"	v
lscale	scripts/numerics/anaPNPS_refinement.py	/^lscale = phys.lscale$/;"	v
lscale	scripts/numerics/anaPNPS_refinement_2D.py	/^lscale = Constant(phys.lscale)$/;"	v
lscale	scripts/numerics/anaPNPS_refinement_2D.py	/^lscale = phys.lscale$/;"	v
lscale	scripts/numerics/anaPNPS_uniform.py	/^lscale = Constant(phys.lscale)$/;"	v
lscale	scripts/numerics/anaPNPS_uniform.py	/^lscale = phys.lscale$/;"	v
lscale	scripts/numerics/analyticalPNPS.py	/^lscale = Constant(phys.lscale)$/;"	v
lscale	scripts/numerics/analyticalPNPS.py	/^lscale = phys.lscale$/;"	v
lscale	scripts/numerics/analyticalPNPS_2D.py	/^lscale = Constant(phys.lscale)$/;"	v
lscale	scripts/numerics/analyticalPNPS_2D.py	/^lscale = phys.lscale$/;"	v
lscale	scripts/numerics/analyticalPNPS_3D.py	/^lscale = Constant(phys.lscale)$/;"	v
lscale	scripts/numerics/analyticalPNPS_3D.py	/^lscale = phys.lscale$/;"	v
lscale	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^lscale = Constant(phys.lscale)$/;"	v
lscale	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^lscale = phys.lscale$/;"	v
lscale	scripts/numerics/analyticalPNP_3D.py	/^lscale = Constant(phys.lscale)$/;"	v
lscale	scripts/numerics/analyticalPNP_3D.py	/^lscale = phys.lscale$/;"	v
lscale	scripts/numerics/implicit_vs_explicit.py	/^lscale = phys.lscale$/;"	v
lshape	scripts/test_features/box.py	/^lshape = Box((1, 1), (3, 3)) - Box((2, 2), (3, 3))$/;"	v
lsin	nanopores/geometries/W_2D_geo/params_geo.py	/^lsin = 50*nm$/;"	v
lsin	nanopores/geometries/W_3D_geo/params_geo.py	/^lsin = 50*nm$/;"	v
luparams	nanopores/physics/exittime.py	/^        luparams = dict($/;"	v	class:ExitTimeProblem
luparams	nanopores/physics/exittime.py	/^        luparams = dict($/;"	v	class:SurvivalProblem
luparams	nanopores/physics/pb.py	/^        luparams = dict($/;"	v	class:LinearNonstandardPBProblem
luparams	nanopores/physics/pb.py	/^        luparams = dict($/;"	v	class:NonstandardPBProblem
luparams	nanopores/physics/pnps.py	/^        luparams = dict($/;"	v	class:StokesProblem
luparams	nanopores/physics/pnps2D.py	/^        luparams = dict($/;"	v	class:PNPProblemAxisym
luparams	nanopores/physics/pnps2D.py	/^        luparams = dict($/;"	v	class:StokesProblemAxisym
luparams	nanopores/physics/pnps2Dnewton.py	/^        luparams = dict($/;"	v	class:PNPSProblemAxisym
luparams	nanopores/physics/poisson.py	/^        luparams = dict($/;"	v	class:PoissonProblem
luparams	nanopores/tools/solvermethods.py	/^    luparams = dict($/;"	v
lusolver	nanopores/physics/exittime.py	/^        lusolver = ("superlu_dist" if has_lu_solver_method("superlu_dist") else "default"),$/;"	v	class:ExitTimeProblem
lusolver	nanopores/physics/exittime.py	/^        lusolver = ("superlu_dist" if has_lu_solver_method("superlu_dist") else "default"),$/;"	v	class:SurvivalProblem
lusolver	nanopores/physics/pb.py	/^        lusolver = ("superlu_dist" if has_lu_solver_method("superlu_dist") else "default"),$/;"	v	class:LinearNonstandardPBProblem
lusolver	nanopores/physics/pb.py	/^        lusolver = ("superlu_dist" if has_lu_solver_method("superlu_dist") else "default"),$/;"	v	class:NonstandardPBProblem
lusolver	nanopores/physics/pnps.py	/^        lusolver = ("superlu_dist" if has_lu_solver_method("superlu_dist") else "default"),$/;"	v	class:StokesProblem
lusolver	nanopores/physics/pnps2D.py	/^        lusolver = ("superlu_dist" if has_lu_solver_method("superlu_dist") else "default"),$/;"	v	class:PNPProblemAxisym
lusolver	nanopores/physics/pnps2D.py	/^        lusolver = ("superlu_dist" if has_lu_solver_method("superlu_dist") else "default"),$/;"	v	class:StokesProblemAxisym
lusolver	nanopores/physics/pnps2Dnewton.py	/^        lusolver = ("superlu_dist" if has_lu_solver_method("superlu_dist") else "default"),$/;"	v	class:PNPSProblemAxisym
lusolver	nanopores/physics/poisson.py	/^        lusolver = ("superlu_dist" if has_lu_solver_method("superlu_dist") else "default"),$/;"	v	class:PoissonProblem
lusolver	nanopores/tools/solvermethods.py	/^    lusolver = ("superlu_dist" if has_lu_solver_method("superlu_dist") else "default"),$/;"	v
lusolver	nanopores/tools/solvermethods.py	/^    lusolver = lusolver,$/;"	v
lusolver	nanopores/tools/solvermethods.py	/^lusolver = "superlu_dist" if has_lu_solver_method("superlu_dist") else "default"$/;"	v
lw	nanopores/geometries/finfet.py	/^lw = 20. #length of the fin$/;"	v
lx	scripts/fluorophore_in_top_reservoir.py	/^lx = 10*mm # radius [m]$/;"	v
lx	scripts/stokes_law/stokes_law.py	/^lx = 2*l   # horizontal confinement [m]$/;"	v
ly	scripts/fluorophore_in_top_reservoir.py	/^ly = 2*10*mm # height [m]$/;"	v
ly	scripts/stokes_law/stokes_law.py	/^ly = 2*l   # vertical confinement [m]$/;"	v
mV	scripts/howorka/ivcurve.py	/^mV = IV[:,0]$/;"	v
magma	scripts/howorka/colormaps.py	/^magma = cmaps['magma']$/;"	v
main	scripts/numerics/anaPNPS_refinement.py	/^    main = domain2D - cross,$/;"	v
main	scripts/numerics/anaPNPS_refinement_2D.py	/^    main = domain2D - cross,$/;"	v
main	scripts/numerics/anaPNPS_uniform.py	/^    main = domain2D - cross,$/;"	v
main	scripts/numerics/analyticalPNPS.py	/^    main = domain2D - cross,$/;"	v
main	scripts/numerics/analyticalPNPS_2D.py	/^    main = domain2D - cross,$/;"	v
main	scripts/numerics/analyticalPNPS_3D.py	/^    main = domain2D - cross,$/;"	v
main	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    main = domain2D - cross,$/;"	v
main	scripts/numerics/analyticalPNP_3D.py	/^    main = domain2D - cross,$/;"	v
main	scripts/test_features/circle.py	/^    main = domain$/;"	v
main	scripts/test_features/curved.py	/^    main = domain - cross,$/;"	v
make_boundary	nanopores/tools/geometry.py	/^def make_boundary(mesh, list, check_midpoint=False):$/;"	f
make_domain	nanopores/tools/geometry.py	/^def make_domain(mesh, list, check_midpoint=False):$/;"	f
make_legend_ellipse	scripts/numerics/plot_robustness.py	/^def make_legend_ellipse(legend, orig_handle, xdescent, ydescent,$/;"	f
map	nanopores/tools/mpipool.py	/^    def map(self, function, tasks, callback=None):$/;"	m	class:MPIPool
mark_cells_by_points	nanopores/geometries/Nanowire/subdomains.py	/^def mark_cells_by_points(cellfunction, points, value):$/;"	f
mark_domains_with_function	nanopores/tools/geometry.py	/^def mark_domains_with_function(subdomains, physical_domain, flist, params):$/;"	f
markers	scripts/numerics/H3Drefine.py	/^    markers = CellFunction("bool", mesh, True)$/;"	v
markers	scripts/test_features/circle.py	/^    markers = CellFunction("bool", submesh, True)$/;"	v
markers	scripts/test_features/curved.py	/^    markers = CellFunction("bool", mesh, True)$/;"	v
marking_fraction	nanopores/physics/pnps.py	/^    marking_fraction = 0.5$/;"	v	class:PNPS
marking_fraction	nanopores/tools/pdesystem.py	/^    marking_fraction = 0.8$/;"	v	class:PDESystem
maxcells	nanopores/physics/pnps.py	/^    maxcells = 10000$/;"	v	class:PNPS
maxcells	nanopores/scripts/ahemFPT.py	/^maxcells = 50e3$/;"	v
maxcells	nanopores/scripts/ahemIV.py	/^maxcells = 50e3$/;"	v
maxcells	nanopores/tools/pdesystem.py	/^    maxcells = 10000$/;"	v	class:PDESystem
maxcells	scripts/debug.py	/^maxcells = 5e4,$/;"	v
maxcells	scripts/plot_scripts/IV_curve_2D.py	/^maxcells = 80e3$/;"	v
maxcells	scripts/plot_scripts/script2DW.py	/^maxcells = 10e3$/;"	v
maximum_iterations	nanopores/physics/exittime.py	/^            maximum_iterations = 1000,$/;"	v	class:SurvivalProblem
maximum_iterations	nanopores/physics/exittime.py	/^            maximum_iterations = 200,$/;"	v	class:ExitTimeProblem
maximum_iterations	nanopores/physics/pb.py	/^            maximum_iterations = 500,$/;"	v	class:LinearNonstandardPBProblem
maximum_iterations	nanopores/physics/pb.py	/^            maximum_iterations = 500,$/;"	v	class:NonstandardPBProblem
maximum_iterations	nanopores/physics/pnps.py	/^            maximum_iterations = 10000,$/;"	v	class:StokesProblem
maximum_iterations	nanopores/physics/pnps2D.py	/^            maximum_iterations = 1000,$/;"	v	class:PNPProblemAxisym
maximum_iterations	nanopores/physics/pnps2D.py	/^            maximum_iterations = 500,$/;"	v	class:StokesProblemAxisym
maximum_iterations	nanopores/physics/pnps2Dnewton.py	/^            maximum_iterations = 500,$/;"	v	class:PNPSProblemAxisym
maximum_iterations	nanopores/physics/poisson.py	/^            maximum_iterations = 200,$/;"	v	class:PoissonProblem
maximum_iterations	nanopores/tools/solvermethods.py	/^        maximum_iterations = 1000,$/;"	v
maximum_iterations	nanopores/tools/solvermethods.py	/^        maximum_iterations = 500,$/;"	v
maximum_iterations	nanopores/tools/solvermethods.py	/^        maximum_iterations = 600,$/;"	v
maximum_iterations	scripts/numerics/adap3D.py	/^    maximum_iterations = 500,$/;"	v
maximum_iterations	scripts/numerics/adap3Dref.py	/^    maximum_iterations = 500,$/;"	v
maxorder	scripts/finfet/MLSC.py	/^maxorder = 2,$/;"	v
maxtime	scripts/random_walk_aHem/plot_probability.py	/^maxtime=5e6$/;"	v
maybe_calculate	scripts/howorka/forcefield2D.py	/^def maybe_calculate(overwrite=False, **newparams):$/;"	f
memb	nanopores/geometries/pughpore.py	/^        memb = domain.getboundary("memb"),$/;"	v
memb	scripts/howorka/largepore.py	/^        memb = memb,$/;"	v
memb	scripts/howorka/largepore.py	/^    memb = memb,$/;"	v
memb	scripts/howorka/largepore.py	/^memb = closed_membrane.boundary("top", "bottom") - closed_dna$/;"	v
memb	scripts/howorka/largepore_dna.py	/^        memb = memb,$/;"	v
memb	scripts/howorka/largepore_dna.py	/^    memb = memb,$/;"	v
memb	scripts/howorka/largepore_dna.py	/^memb = closed_membrane.boundary("top", "bottom") - substract_mem$/;"	v
membrane	nanopores/geometries/pughpore.py	/^    membrane = domain.getsubdomain("membrane")$/;"	v
membrane	nanopores/physics/pore.py	/^    membrane = eperm*rpermLipid,$/;"	v
membrane	scripts/howorka/largepore.py	/^    membrane = membrane,$/;"	v
membrane	scripts/howorka/largepore.py	/^membrane = closed_membrane - closed_dna$/;"	v
membrane	scripts/howorka/largepore_dna.py	/^    membrane = membrane,$/;"	v
membrane	scripts/howorka/largepore_dna.py	/^membrane = closed_membrane - substract_mem$/;"	v
membrane	scripts/numerics/test_fixedpoint_1D.py	/^    membrane = membrane$/;"	v
membrane	scripts/numerics/test_fixedpoint_1D.py	/^membrane = Interval(-hmem\/2, hmem\/2)$/;"	v
membrane	scripts/test_axisym.py	/^    membrane = membrane,$/;"	v
membrane	scripts/test_axisym.py	/^membrane = Box([r1, -l1\/2], [Rx, l1\/2])$/;"	v
membrane	scripts/test_box.py	/^    membrane = membrane,$/;"	v
membrane	scripts/test_box.py	/^membrane = Box([r1, -l1\/2], [Rx, l1\/2])$/;"	v
membrane	scripts/toy_models/pnp1D.py	/^    membrane = membrane$/;"	v
membrane	scripts/toy_models/pnp1D.py	/^membrane = Interval(-hmem\/2, hmem\/2)$/;"	v
membrane_boundary	scripts/howorka/largepore_dna.py	/^membrane_boundary = closed_membrane - closed_dna$/;"	v
membraneb	scripts/test_axisym.py	/^    membraneb = membrane.boundary("top", "bottom"),$/;"	v
membraneb	scripts/test_box.py	/^    membraneb = membrane.boundary("top", "bottom"),$/;"	v
membraneblayer	nanopores/geometries/H_cyl_geo/params_geo.py	/^membraneblayer = None$/;"	v
membraneblayer	nanopores/geometries/H_cyl_geo/params_geo_old.py	/^membraneblayer = None$/;"	v
membraneblayer	nanopores/geometries/H_geo/params_geo.py	/^membraneblayer = None$/;"	v
membraneblayer	nanopores/geometries/H_geo/params_geo_old.py	/^membraneblayer = None$/;"	v
membraneblayer	nanopores/geometries/W_2D_geo/params_geo.py	/^membraneblayer = None$/;"	v
membraneblayer	nanopores/geometries/W_3D_geo/params_geo.py	/^membraneblayer = None$/;"	v
membraneblayer	nanopores/geometries/aHem/params_geo.py	/^membraneblayer = None$/;"	v
membraneblayer	nanopores/models/Howorka.py	/^membraneblayer = False,$/;"	v
membraneblayer	nanopores/models/HoworkaSimple.py	/^membraneblayer = False,$/;"	v
membraneblayer	scripts/numerics/Howorka.py	/^membraneblayer = False,$/;"	v
membraneblayer	scripts/numerics/HoworkaSimple.py	/^membraneblayer = False,$/;"	v
membraneblayer	scripts/numerics/adap2D.py	/^membraneblayer = False,$/;"	v
membraneblayer	scripts/numerics/adap2Dpb.py	/^membraneblayer = False,$/;"	v
membraneblayer	scripts/numerics/adap2Dref.py	/^membraneblayer = False,$/;"	v
membraneblayer	scripts/test2D.py	/^membraneblayer = False,$/;"	v
membranednab	scripts/numerics/H3Drefine.py	/^    membranednab = outerdna.snap,$/;"	v
membranednab	scripts/numerics/adap3D.py	/^    membranednab = outerdna.snap,$/;"	v
membranednab	scripts/numerics/adap3Dpb.py	/^    membranednab = outerdna.snap,$/;"	v
membranednab	scripts/numerics/adap3Dref.py	/^    membranednab = outerdna.snap,$/;"	v
mentions	nanopores/tools/box.py	/^    def mentions(self, C):$/;"	m	class:csgExpression
merge	scripts/howorka/largepore.py	/^    merge = True$/;"	v
mergefile	nanopores/tools/fields.py	/^def mergefile(f, FILE):$/;"	f
mesh	scripts/finfet/test_wire.py	/^mesh = get_mesh(geo_name)$/;"	v
mesh	scripts/fluorophore_in_top_reservoir.py	/^    mesh = mesh,$/;"	v
mesh	scripts/fluorophore_in_top_reservoir.py	/^mesh = RectangleMesh(Point(0.,0.), Point(lx, ly), N, N)$/;"	v
mesh	scripts/howorka/HoworkaTools.py	/^mesh = submesh$/;"	v
mesh	scripts/howorka/forcefield.py	/^mesh = submesh$/;"	v
mesh	scripts/howorka/ivcurve.py	/^mesh = geo.mesh$/;"	v
mesh	scripts/howorka/test_forcefields.py	/^mesh = nanopores.RectangleMesh([-Rx1, -Ry], [Rx1, Ry], 60, 150)$/;"	v
mesh	scripts/numerics/H3Drefine.py	/^    mesh = refine(mesh, markers)$/;"	v
mesh	scripts/numerics/H3Drefine.py	/^mesh = geo.mesh$/;"	v
mesh	scripts/numerics/force_profiles.py	/^mesh = geo.mesh$/;"	v
mesh	scripts/numerics/implicit_vs_explicit.py	/^mesh = geo.submesh("notmol")$/;"	v
mesh	scripts/numerics/matplotfem2d.py	/^    mesh = geo.submesh("fluid")$/;"	v
mesh	scripts/plot_scripts/script2DWelectrodes.py	/^        mesh = Mesh("%s\/%s\/mesh\/mesh%s.xml" %(DATADIR,geo_name,pid))$/;"	v
mesh	scripts/plot_scripts/script3DW.py	/^    mesh = None #Mesh("%s\/%s\/mesh\/mesh_bl_138k.xml" %(DATADIR,geo_name))$/;"	v
mesh	scripts/simplegeo.py	/^mesh = UnitSquareMesh(1000,1000)$/;"	v
mesh	scripts/test_features/circle.py	/^mesh = geo.mesh$/;"	v
mesh	scripts/test_features/curved.py	/^    mesh = refine(mesh, markers)$/;"	v
mesh	scripts/test_features/curved.py	/^mesh = geo.mesh$/;"	v
mesh0	scripts/howorka/forcefield.py	/^mesh0 = geo.mesh$/;"	v
mesh1	scripts/plot_scripts/script2DWelectrodes.py	/^mesh1 = Mesh("%s\/%s\/mesh\/mesh%s.xml" %(DATADIR,geo_name,pid1))$/;"	v
mesh2D	nanopores/models/pughpore.py	/^    mesh2D = pnps.mesh2D$/;"	v
mesh2D	scripts/numerics/adap3D.py	/^mesh2D = geo2D.mesh$/;"	v
mesh2D	scripts/numerics/adap3Dpb.py	/^mesh2D = geo2D.mesh$/;"	v
mesh2D	scripts/numerics/adap3Dref.py	/^mesh2D = geo2D.mesh$/;"	v
mesh2D	scripts/pughpore/test_pugh.py	/^mesh2D = nano.RectangleMesh([-R,-H\/2.], [R, H\/2.], int(8*R), int(4*H))$/;"	v
mesh_dict	scripts/plot_scripts/script2DWelectrodes.py	/^        mesh_dict = generate_mesh(0.5, geo_name, pid=pid, **aparams)$/;"	v
mesh_dict	scripts/plot_scripts/script3DW.py	/^    mesh_dict = generate_mesh(5.0, geo_name, **defparams)$/;"	v
mesh_dict	scripts/test.py	/^mesh_dict = generate_mesh(clscale, geo_name, **geo_params)$/;"	v
mesh_dict1	scripts/plot_scripts/script2DWelectrodes.py	/^mesh_dict1 = generate_mesh(0.5, geo_name, pid=pid1, **params1)$/;"	v
mesh_quality	nanopores/models/mysolve.py	/^def mesh_quality(mesh, oldmesh=None, ratio=1e-1, geo=None, plothist=True, plot_cells=False):$/;"	f
mesh_quality	scripts/numerics/H3Drefine.py	/^def mesh_quality(mesh, oldmesh=None, ratio=1e-1):$/;"	f
mesh_quality	scripts/numerics/mysolve.py	/^def mesh_quality(mesh, oldmesh=None, ratio=1e-1, geo=None, plothist=True, plot_cells=True):$/;"	f
meshdict	nanopores/scripts/test_survival.py	/^meshdict = generate_mesh(7., "aHem", **geo_params)$/;"	v
meshdict	scripts/survival.py	/^meshdict = generate_mesh(9., "aHem", **geo_params)$/;"	v
meshdict	scripts/test_ahem.py	/^meshdict = generate_mesh(10., "aHem", **geo_params)$/;"	v
meshgen_dict	nanopores/scripts/test_geometry_3D.py	/^meshgen_dict = generate_mesh(8.0, geo_name, **params)$/;"	v
meshgen_dict	scripts/numerics/H3Dgeometry.py	/^meshgen_dict = generate_mesh(h, geo_name, **geo_params)$/;"	v
meshgen_dict	scripts/numerics/adap2D.py	/^meshgen_dict = generate_mesh(h, geo_name, **geo_params)$/;"	v
meshgen_dict	scripts/numerics/adap2Dpb.py	/^meshgen_dict = generate_mesh(h, geo_name, **geo_params)$/;"	v
meshgen_dict	scripts/numerics/adap2Dref.py	/^meshgen_dict = generate_mesh(1., geo_name, **geo_params)$/;"	v
meshgen_dict	scripts/numerics/adap3D.py	/^meshgen_dict = generate_mesh(h, geo_name, **geo_params)$/;"	v
meshgen_dict	scripts/numerics/adap3Dpb.py	/^meshgen_dict = generate_mesh(h, geo_name, **geo_params)$/;"	v
meshgen_dict	scripts/numerics/adap3Dref.py	/^meshgen_dict = generate_mesh(h, geo_name, **geo_params)$/;"	v
meshgen_dict	scripts/plot_scripts/IV_curve_2D.py	/^meshgen_dict = generate_mesh(0.8, geo_name, **geo_params)$/;"	v
meshgen_dict	scripts/plot_scripts/PMF_Profile_2D.py	/^    meshgen_dict = generate_mesh(1.0, geo_name, x0 = x0, **params)$/;"	v
meshgen_dict	scripts/plot_scripts/current_trace_2D.py	/^    meshgen_dict = generate_mesh(0.5, geo_name, x0 = x0, **params)$/;"	v
meshgen_dict	scripts/plot_scripts/script2DW.py	/^meshgen_dict = generate_mesh(0.8, geo_name, **geo_params)$/;"	v
meshgen_dict	scripts/test2D.py	/^meshgen_dict = generate_mesh(1., geo_name, **geo_params)$/;"	v
meshgen_dict	scripts/test2DP.py	/^meshgen_dict = generate_mesh(clscale, geo_name, **geo_params)$/;"	v
meshgen_dict	scripts/test2DW.py	/^meshgen_dict = generate_mesh(0.5, geo_name, **geo_params)$/;"	v
meshgen_dict	scripts/test2Dnewton.py	/^meshgen_dict = generate_mesh(1., geo_name, **geo_params)$/;"	v
meshgen_dict	scripts/test2Dold.py	/^meshgen_dict = generate_mesh(.9, geo_name, **geo_params)$/;"	v
meshgen_dict	scripts/test3D_GOA.py	/^meshgen_dict = generate_mesh(7., geo_name, **geo_params)$/;"	v
method	nanopores/physics/convdiff.py	/^    method = dict(solvermethods.direct_reuse)$/;"	v	class:ConvectionDiffusionProblem
method	nanopores/physics/exittime.py	/^    method = dict($/;"	v	class:ExitTimeProblem
method	nanopores/physics/exittime.py	/^    method = dict($/;"	v	class:SurvivalProblem
method	nanopores/physics/pb.py	/^    method = dict($/;"	v	class:LinearNonstandardPBProblem
method	nanopores/physics/pb.py	/^    method = dict($/;"	v	class:NonstandardPBProblem
method	nanopores/physics/pnps.py	/^    method = dict($/;"	v	class:StokesProblem
method	nanopores/physics/pnps.py	/^    method = dict(solvermethods.bicgstab)$/;"	v	class:PNPProblem
method	nanopores/physics/pnps2D.py	/^    method = dict($/;"	v	class:PNPProblemAxisym
method	nanopores/physics/pnps2D.py	/^    method = dict($/;"	v	class:StokesProblemAxisym
method	nanopores/physics/pnps2Dnewton.py	/^    method = dict($/;"	v	class:PNPSProblemAxisym
method	nanopores/physics/pnps2Dnewton.py	/^    method = dict(solvermethods.gmres)$/;"	v	class:SimplePNPSProblem
method	nanopores/physics/poisson.py	/^    method = PoissonProblem.method$/;"	v	class:PoissonProblemPureNeumannAxisym
method	nanopores/physics/poisson.py	/^    method = dict($/;"	v	class:PoissonProblem
method	nanopores/physics/simplepnps.py	/^    method = dict(solvermethods.bicgstab)$/;"	v	class:LinearSGPoissonProblem
method	nanopores/physics/simplepnps.py	/^    method = dict(solvermethods.bicgstab)$/;"	v	class:SGPoissonProblem
method	nanopores/physics/simplepnps.py	/^    method = dict(solvermethods.bicgstab)$/;"	v	class:SimpleLinearPBProblem
method	nanopores/physics/simplepnps.py	/^    method = dict(solvermethods.bicgstab)$/;"	v	class:SimpleNernstPlanckProblem
method	nanopores/physics/simplepnps.py	/^    method = dict(solvermethods.bicgstab)$/;"	v	class:SimplePBProblem
method	nanopores/physics/simplepnps.py	/^    method = dict(solvermethods.bicgstab)$/;"	v	class:SimplePNPProblem
method	nanopores/physics/simplepnps.py	/^    method = dict(solvermethods.poisson)$/;"	v	class:SimplePoissonProblem
method	nanopores/physics/simplepnps.py	/^    method = dict(solvermethods.stokes)$/;"	v	class:SimpleStokesProblem
method	scripts/numerics/diffusion_with_force_profile.py	/^    method = SimpleNernstPlanckProblem.method$/;"	v	class:DiffusionProblem1D
mirror	scripts/howorka/test_forcefields.py	/^def mirror(z, sign):$/;"	f
mm	scripts/fluorophore_in_top_reservoir.py	/^mm = 1e-3$/;"	v
module	scripts/plot_scripts/script2DWelectrodes.py	/^module = "nanopores.%s.subdomains" %geo_name$/;"	v
mol	nanopores/physics/params_physical.py	/^mol = 6.022e23  # Avogadro$/;"	v
mol	scripts/plot_forces_aHem/aHem_array_2d.py	/^mol = 6.022e-23 # 1 atom$/;"	v
mol	scripts/random_walk_aHem/aHem_array.py	/^mol = 6.022e-23 # 1 atom$/;"	v
mol	scripts/random_walk_aHem/aHem_array_2d.py	/^mol = 6.022e-23 # 1 atom$/;"	v
molec	scripts/numerics/H3Drefine.py	/^molec = Sphere(R=geo.params["rMolecule"], center=geo.params["x0"])$/;"	v
molec	scripts/numerics/adap2D.py	/^molec = Circle(R=geo.params["rMolecule"], center=geo.params["x0"][::2])$/;"	v
molec	scripts/numerics/adap2Dpb.py	/^molec = Circle(R=geo.params["rMolecule"], center=geo.params["x0"][::2])$/;"	v
molec	scripts/numerics/adap2Dref.py	/^molec = Circle(R=geo.params["rMolecule"], center=geo.params["x0"][::2])$/;"	v
molec	scripts/numerics/adap3D.py	/^molec = Sphere(R=geo.params["rMolecule"], center=geo.params["x0"])$/;"	v
molec	scripts/numerics/adap3Dpb.py	/^molec = Sphere(R=geo.params["rMolecule"], center=geo.params["x0"])$/;"	v
molec	scripts/numerics/adap3Dref.py	/^molec = Sphere(R=geo.params["rMolecule"], center=geo.params["x0"])$/;"	v
molec	scripts/pughpore/test_pugh.py	/^molec = Sphere(R=geo.params["rMolecule"], center=geo.params["x0"])$/;"	v
molec	scripts/test2D.py	/^molec = Circle(R=geo.params["rMolecule"], center=geo.params["x0"][::2])$/;"	v
molec2D	scripts/numerics/adap3D.py	/^molec2D = Circle(R=geo2D.params["rMolecule"], center=geo2D.params["x0"][::2])$/;"	v
molec2D	scripts/numerics/adap3Dpb.py	/^molec2D = Circle(R=geo.params["rMolecule"], center=geo.params["x0"][::2])$/;"	v
molec2D	scripts/numerics/adap3Dref.py	/^molec2D = Circle(R=geo2D.params["rMolecule"], center=geo2D.params["x0"][::2])$/;"	v
molecule	nanopores/geometries/pughpore.py	/^    molecule = domain.getsubdomain("molecule")$/;"	v
molecule	nanopores/physics/howorka.py	/^    molecule = ("Moleculeqv" if smearMolCharge else 0.),$/;"	v
molecule	nanopores/physics/pore_mol.py	/^    molecule = "Moleculeqv",$/;"	v
molecule	nanopores/physics/pore_mol.py	/^    molecule = "permMol",$/;"	v
molecule	nanopores/physics/pore_molecule.py	/^    molecule = ("Moleculeqv" if smearMolCharge else 0.),$/;"	v
molecule	scripts/howorka/largepore_dna.py	/^molecule = Ball(x0, r=rMolecule, lc=lcMolecule)$/;"	v
moleculeb	scripts/numerics/H3Drefine.py	/^    moleculeb = molec.snap,$/;"	v
moleculeb	scripts/numerics/adap3D.py	/^    moleculeb = molec.snap,$/;"	v
moleculeb	scripts/numerics/adap3Dpb.py	/^    moleculeb = molec.snap,$/;"	v
moleculeb	scripts/numerics/adap3Dref.py	/^    moleculeb = molec.snap,$/;"	v
moleculeblayer	nanopores/geometries/H_cyl_geo/params_geo.py	/^moleculeblayer = None$/;"	v
moleculeblayer	nanopores/geometries/H_cyl_geo/params_geo_old.py	/^moleculeblayer = None$/;"	v
moleculeblayer	nanopores/geometries/H_geo/params_geo.py	/^moleculeblayer = None$/;"	v
moleculeblayer	nanopores/geometries/H_geo/params_geo_old.py	/^moleculeblayer = None$/;"	v
moleculeblayer	nanopores/geometries/W_2D_geo/params_geo.py	/^moleculeblayer = None$/;"	v
moleculeblayer	nanopores/geometries/W_3D_geo/params_geo.py	/^moleculeblayer = None$/;"	v
moleculeblayer	nanopores/geometries/aHem/params_geo.py	/^moleculeblayer = None$/;"	v
moleculeblayer	nanopores/models/Howorka.py	/^moleculeblayer = False,$/;"	v
moleculeblayer	nanopores/models/HoworkaSimple.py	/^moleculeblayer = False,$/;"	v
moleculeblayer	nanopores/scripts/calculate_forces.py	/^moleculeblayer = True,$/;"	v
moleculeblayer	scripts/numerics/Howorka.py	/^moleculeblayer = False,$/;"	v
moleculeblayer	scripts/numerics/HoworkaSimple.py	/^moleculeblayer = False,$/;"	v
moleculeblayer	scripts/numerics/adap2D.py	/^moleculeblayer = False,$/;"	v
moleculeblayer	scripts/numerics/adap2Dpb.py	/^moleculeblayer = False,$/;"	v
moleculeblayer	scripts/numerics/adap2Dref.py	/^moleculeblayer = False, #True,$/;"	v
moleculeblayer	scripts/test.py	/^moleculeblayer = True,$/;"	v
moleculeblayer	scripts/test2D.py	/^moleculeblayer = False,$/;"	v
moleculeblayer	scripts/test2Dold.py	/^moleculeblayer = True,$/;"	v
monitor_convergence	nanopores/physics/exittime.py	/^            monitor_convergence = False,$/;"	v	class:ExitTimeProblem
monitor_convergence	nanopores/physics/exittime.py	/^            monitor_convergence = False,$/;"	v	class:SurvivalProblem
monitor_convergence	nanopores/physics/pb.py	/^            monitor_convergence = False,$/;"	v	class:LinearNonstandardPBProblem
monitor_convergence	nanopores/physics/pb.py	/^            monitor_convergence = False,$/;"	v	class:NonstandardPBProblem
monitor_convergence	nanopores/physics/pnps.py	/^            monitor_convergence = False,$/;"	v	class:StokesProblem
monitor_convergence	nanopores/physics/pnps2D.py	/^            monitor_convergence = False,$/;"	v	class:StokesProblemAxisym
monitor_convergence	nanopores/physics/pnps2D.py	/^            monitor_convergence = True,$/;"	v	class:PNPProblemAxisym
monitor_convergence	nanopores/physics/pnps2Dnewton.py	/^            monitor_convergence = True,$/;"	v	class:PNPSProblemAxisym
monitor_convergence	nanopores/physics/poisson.py	/^            monitor_convergence = False,$/;"	v	class:PoissonProblem
monitor_convergence	nanopores/tools/solvermethods.py	/^        monitor_convergence = False,$/;"	v
monitor_convergence	scripts/numerics/adap3Dref.py	/^    monitor_convergence = True,$/;"	v
mpiSize	scripts/plot_scripts/script3DW.py	/^mpiSize = MPI.size(comm)$/;"	v
mpimap	nanopores/tools/mpipool.py	/^def mpimap(f, input):$/;"	f
mu	nanopores/physics/electrolyte.py	/^mu = lambda D, kT: D*qq\/kT # mobility [m^2\/Vs]$/;"	v
mu	nanopores/physics/howorka.py	/^mu = lambda: D*qq\/(kB*T) # mobility [m^2\/Vs]$/;"	v
mu	nanopores/physics/params_physical.py	/^mu = D\/UT # 73e-9  # average mobility [m^2\/Vs]$/;"	v
mu	nanopores/physics/pore_dna.py	/^mu = lambda: D*qq\/(kB*T) # mobility [m^2\/Vs]$/;"	v
mu	nanopores/physics/pore_molecule.py	/^mu = lambda: D*qq\/(kB*T) # mobility [m^2\/Vs]$/;"	v
multi_box_union	nanopores/tools/box.py	/^def multi_box_union(boxes): #, facets=[]):$/;"	f
multi_interval_union	nanopores/tools/box.py	/^def multi_interval_union(intvs):$/;"	f
mun	scripts/finfet/finfet.py	/^mun = 1000*cm**2$/;"	v
mun	scripts/finfet/test_wire.py	/^mun = 1000*1e4$/;"	v
mup	scripts/finfet/finfet.py	/^mup = 100*cm**2$/;"	v
mup	scripts/finfet/test_wire.py	/^mup = 100*1e4$/;"	v
n	scripts/finfet/finfet.py	/^n = n0*exp(beta*u)$/;"	v
n	scripts/finfet/test_wire.py	/^n = ni*exp((u0 - phiF)\/UT)$/;"	v
n	scripts/numerics/analyticalPNPS_2D.py	/^n = FacetNormal(geo2D.mesh)$/;"	v
n	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^n = FacetNormal(geo2D.mesh)$/;"	v
n	scripts/plot_forces_aHem/aHem_array_2d.py	/^n = 55 # 1\/nm$/;"	v
n	scripts/random_walk_aHem/aHem_array.py	/^n = 55 # 1\/nm$/;"	v
n	scripts/random_walk_aHem/aHem_array_2d.py	/^n = 55 # 1\/nm$/;"	v
n	scripts/stokes_law/stokes_law.py	/^n = FacetNormal(geo.mesh)$/;"	v
n0	nanopores/physics/finfet.py	/^n0 = dict($/;"	v
n0	scripts/finfet/finfet.py	/^n0 = geo.pwconst("n0")$/;"	v
n3D	scripts/numerics/analyticalPNP_3D.py	/^n3D = FacetNormal(geo3D.mesh)$/;"	v
nDdopant	nanopores/physics/finfet.py	/^nDdopant = lambda: ni**2.\/(Dsource*5.)$/;"	v
nDfin	nanopores/physics/finfet.py	/^nDfin = lambda: ni**2.\/Dfin$/;"	v
nDsource	nanopores/physics/finfet.py	/^nDsource = lambda: ni**2.\/Dsource$/;"	v
name	nanopores/testsuite/test_2D.py	/^name = "H_geo"$/;"	v
name	nanopores/testsuite/test_3D.py	/^name = "H_cyl_geo"$/;"	v
name	scripts/numerics/force_profiles.py	/^name = "",$/;"	v
name	scripts/stokes_law/stokes_law.py	/^name = "Cyl2D"$/;"	v
name	scripts/test_ions_on_dna.py	/^name = "H_cyl_geo"$/;"	v
name3D	nanopores/testsuite/test_3D_with_molecule.py	/^name3D = "H_cyl_geo"$/;"	v
nc_compute	scripts/finfet/collocation_methods/nc_compute.m	/^function w = nc_compute ( n, x_min, x_max, x )$/;"	f
ncbp	nanopores/geometries/H_cyl_geo/params_geo.py	/^ncbp = 6.0*36  # 6 scaffold strands of DNA with 36 charged base pairs$/;"	v
ncbp	nanopores/geometries/H_cyl_geo/params_geo_old.py	/^ncbp = 6.0*36  # 6 scaffold strands of DNA with 36 charged base pairs$/;"	v
ncbp	nanopores/geometries/H_geo/params_geo.py	/^ncbp = 6.0*36  # 6 scaffold strands of DNA with 36 charged base pairs$/;"	v
ncbp	nanopores/geometries/H_geo/params_geo_old.py	/^ncbp = 6.0*36  # 6 scaffold strands of DNA with 36 charged base pairs$/;"	v
ncbp	scripts/params_nice_2D.py	/^ncbp = 6.0*36  # 6 scaffold strands of DNA with 36 charged base pairs$/;"	v
ncc_compute_points	scripts/finfet/collocation_methods/ncc_compute_points.m	/^function x = ncc_compute_points ( n )$/;"	f
ncc_compute_weights	scripts/finfet/collocation_methods/ncc_compute_weights.m	/^function w = ncc_compute_weights ( n )$/;"	f
nco_compute_points	scripts/finfet/collocation_methods/nco_compute_points.m	/^function x = nco_compute_points ( n )$/;"	f
nco_compute_weights	scripts/finfet/collocation_methods/nco_compute_weights.m	/^function w = nco_compute_weights ( n )$/;"	f
ncoh_compute	scripts/finfet/collocation_methods/ncoh_compute.m	/^function [ x, w ] = ncoh_compute ( n )$/;"	f
ncoh_compute_points	scripts/finfet/collocation_methods/ncoh_compute_points.m	/^function x = ncoh_compute_points ( n )$/;"	f
ncoh_compute_weights	scripts/finfet/collocation_methods/ncoh_compute_weights.m	/^function w = ncoh_compute_weights ( n )$/;"	f
ndigits	scripts/plot_scripts/PMF_Profile_2D.py	/^ndigits = 9+4$/;"	v
ndigits	scripts/plot_scripts/current_trace_2D.py	/^ndigits = 9+4$/;"	v
new_mesh	nanopores/scripts/calculate_forces.py	/^new_mesh = True$/;"	v
new_mesh	scripts/debug.py	/^new_mesh = True,$/;"	v
newbV	scripts/plot_scripts/script2DWelectrodes.py	/^        newbV = vmeanm - vmeanp$/;"	v
newkeys	nanopores/tools/protocol.py	/^    def newkeys(self, keys):$/;"	m	class:Data
newton	scripts/numerics/plot_fixedpoint.py	/^newton = load("newton")$/;"	v
newton_iter	scripts/numerics/adap3Dref.py	/^newton_iter = pnps.newton_solve()$/;"	v
newton_solve	nanopores/models/mysolve.py	/^def newton_solve(self, tol=None, damp=None, verbose=True):$/;"	f
newton_solve	nanopores/physics/pnps.py	/^    def newton_solve(self,tol=None):$/;"	m	class:PNPS
newton_solve	nanopores/physics/pnps2Dnewton.py	/^    def newton_solve(self,tol=None):$/;"	m	class:PNPSAxisymNewton
newton_solve	scripts/numerics/mysolve.py	/^def newton_solve(self, tol=None, damp=None, verbose=True):$/;"	f
newtondamp	nanopores/scripts/ahemFPT.py	/^newtondamp = 1.0$/;"	v
newtondamp	nanopores/scripts/ahemIV.py	/^newtondamp = 1.0$/;"	v
newtondamp	nanopores/scripts/calculate_forces.py	/^newtondamp = 1.0$/;"	v
newtondamp	nanopores/tools/illposed.py	/^    newtondamp = 1$/;"	v	class:IllposedNonlinearSolver
newtondamp	nanopores/tools/pdesystem.py	/^    newtondamp = 1.$/;"	v	class:NonlinearPDE
newtondamp	scripts/debug.py	/^newtondamp = .8,$/;"	v
newtoniteration	nanopores/tools/coupled.py	/^def newtoniteration(solver, tol=TOL, damp=1., imax=IMAX, verbose=True):$/;"	f
newtonplot	nanopores/tools/errorest.py	/^    def newtonplot(self, fig=True, style="s-"):$/;"	m	class:Estimator
newtonsolve	nanopores/tools/pdesystem.py	/^def newtonsolve(S, tol=1e-4, damp=1., imax=10, verbose=True, inside_loop=_pass): $/;"	f
ni	nanopores/physics/finfet.py	/^ni = 1e10\/cm**3$/;"	v
ni	scripts/finfet/test_wire.py	/^ni = 1e16$/;"	v
nm	nanopores/geometries/Cyl2D/params_geo.py	/^nm = 1e-0$/;"	v
nm	nanopores/geometries/H_cyl_geo/params_geo.py	/^nm = 1e0$/;"	v
nm	nanopores/geometries/H_cyl_geo/params_geo_old.py	/^nm = 1e0$/;"	v
nm	nanopores/geometries/H_geo/params_geo.py	/^nm = 1e0 #-9$/;"	v
nm	nanopores/geometries/H_geo/params_geo_old.py	/^nm = 1e-9$/;"	v
nm	nanopores/geometries/Nanowire/params_geo.py	/^nm = 1e-9$/;"	v
nm	nanopores/geometries/P_geo/params_geo.py	/^nm = 1e-9$/;"	v
nm	nanopores/geometries/W_2D_geo/params_geo.py	/^nm = 1e-9$/;"	v
nm	nanopores/geometries/W_3D_geo/params_geo.py	/^nm = 1e-0$/;"	v
nm	nanopores/geometries/aHem/params_geo.py	/^nm = 1e0$/;"	v
nm	nanopores/models/Howorka.py	/^nm = params_geo.nm$/;"	v
nm	nanopores/models/HoworkaSimple.py	/^nm = import_vars("nanopores.geometries.%s.params_geo" %geo_name)["nm"]$/;"	v
nm	nanopores/physics/params_physical.py	/^nm = 1e-9$/;"	v
nm	nanopores/scripts/calculate_forces.py	/^nm = 1e-9$/;"	v
nm	nanopores/scripts/calculate_forces.py	/^nm = import_vars("nanopores.geometries.%s.params_geo" %geo_name)["nm"]$/;"	v
nm	nanopores/scripts/test_geometry_3D.py	/^nm = import_vars("nanopores.geometries.%s.params_geo" %geo_name)["nm"]$/;"	v
nm	scripts/howorka/largepore.py	/^    nm = 1.,$/;"	v
nm	scripts/howorka/largepore_dna.py	/^    nm = 1.,$/;"	v
nm	scripts/misc/chargeDNA.py	/^nm = 1.$/;"	v
nm	scripts/numerics/H3Dgeometry.py	/^nm = import_vars("nanopores.geometries.%s.params_geo" %geo_name)["nm"]$/;"	v
nm	scripts/numerics/H3Drefine.py	/^nm = import_vars("nanopores.geometries.%s.params_geo" %geo_name)["nm"]$/;"	v
nm	scripts/numerics/Howorka.py	/^nm = import_vars("nanopores.geometries.%s.params_geo" %geo_name)["nm"]$/;"	v
nm	scripts/numerics/HoworkaSimple.py	/^nm = import_vars("nanopores.geometries.%s.params_geo" %geo_name)["nm"]$/;"	v
nm	scripts/numerics/adap2D.py	/^nm = import_vars("nanopores.geometries.%s.params_geo" %geo_name)["nm"]$/;"	v
nm	scripts/numerics/adap2Dpb.py	/^nm = import_vars("nanopores.geometries.%s.params_geo" %geo_name)["nm"]$/;"	v
nm	scripts/numerics/adap2Dref.py	/^nm = import_vars("nanopores.geometries.%s.params_geo" %geo_name)["nm"]$/;"	v
nm	scripts/numerics/adap3D.py	/^nm = import_vars("nanopores.geometries.%s.params_geo" %geo_name)["nm"]$/;"	v
nm	scripts/numerics/adap3Dpb.py	/^nm = import_vars("nanopores.geometries.%s.params_geo" %geo_name)["nm"]$/;"	v
nm	scripts/numerics/adap3Dref.py	/^nm = import_vars("nanopores.geometries.%s.params_geo" %geo_name)["nm"]$/;"	v
nm	scripts/numerics/hybrid_vs_newton.py	/^nm = 1e-9$/;"	v
nm	scripts/numerics/test_fixedpoint.py	/^nm = 1.$/;"	v
nm	scripts/params_nice_2D.py	/^nm = 1e-9$/;"	v
nm	scripts/plot_scripts/IV_curve_2D.py	/^nm = 1e-9$/;"	v
nm	scripts/plot_scripts/PMF_Profile_2D.py	/^nm = 1e-9$/;"	v
nm	scripts/plot_scripts/PMFplots.py	/^nm = 1e-9$/;"	v
nm	scripts/plot_scripts/current_trace_2D.py	/^nm = 1e-9$/;"	v
nm	scripts/plot_scripts/script2DWelectrodes.py	/^nm = geo_dict["nm"]$/;"	v
nm	scripts/plot_scripts/script3DW.py	/^nm = geo_dict["nm"]$/;"	v
nm	scripts/test.py	/^nm = import_vars("nanopores.geometries.%s.params_geo" %geo_name)["nm"]$/;"	v
nm	scripts/test2D.py	/^nm = import_vars("nanopores.geometries.%s.params_geo" %geo_name)["nm"]$/;"	v
nm	scripts/test2DW.py	/^nm = geo_dict["nm"]$/;"	v
nm	scripts/test2Dold.py	/^nm = 1e-9$/;"	v
nm	scripts/test3D_GOA.py	/^nm = import_vars("nanopores.geometries.%s.params_geo" %geo_name)["nm"]$/;"	v
nm	scripts/test_SimplePNPS.py	/^nm = 1e-9$/;"	v
nm3D	nanopores/models/Howorka.py	/^nm3D = params_geo3D.nm$/;"	v
nmax2D	scripts/numerics/anaPNPS_refinement.py	/^nmax2D = 2e3,$/;"	v
nmax2D	scripts/numerics/anaPNPS_refinement_2D.py	/^nmax2D = 1e5,$/;"	v
nmax2D	scripts/numerics/anaPNPS_uniform.py	/^nmax2D = 2e3,$/;"	v
nmax3D	scripts/numerics/anaPNPS_refinement.py	/^nmax3D = 2e4,$/;"	v
nmax3D	scripts/numerics/anaPNPS_refinement_2D.py	/^nmax3D = 1e4,$/;"	v
nmax3D	scripts/numerics/anaPNPS_uniform.py	/^nmax3D = 2e4,$/;"	v
nocbc	nanopores/physics/electrolyte.py	/^    nocbc = set(),$/;"	v
nonzero_initial_guess	nanopores/physics/pnps.py	/^            nonzero_initial_guess = True,$/;"	v	class:StokesProblem
nonzero_initial_guess	nanopores/physics/pnps2D.py	/^            nonzero_initial_guess = True,$/;"	v	class:StokesProblemAxisym
nonzero_initial_guess	nanopores/tools/solvermethods.py	/^        nonzero_initial_guess = True,$/;"	v
nonzero_initial_guess	scripts/numerics/adap3D.py	/^    nonzero_initial_guess = True,$/;"	v
nonzero_initial_guess	scripts/numerics/adap3Dref.py	/^    nonzero_initial_guess = True,$/;"	v
nopressure	scripts/howorka/largepore.py	/^    nopressure = "upperb",$/;"	v
nopressure	scripts/howorka/largepore_dna.py	/^    nopressure = "upperb",$/;"	v
nopressure	scripts/numerics/anaPNPS_refinement.py	/^    nopressure = "center",$/;"	v
nopressure	scripts/numerics/anaPNPS_refinement_2D.py	/^    nopressure = "center",$/;"	v
nopressure	scripts/numerics/anaPNPS_uniform.py	/^    nopressure = "center",$/;"	v
nopressure	scripts/numerics/analyticalPNPS.py	/^    nopressure = "center",$/;"	v
nopressure	scripts/numerics/analyticalPNPS_2D.py	/^    nopressure = "center",$/;"	v
nopressure	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    nopressure = "center",$/;"	v
norm	scripts/howorka/HoworkaTools.py	/^norm = matplotlib.colors.BoundaryNorm(boundaries=contours, ncolors=256)$/;"	v
norm	scripts/howorka/video.py	/^norm = matplotlib.colors.BoundaryNorm(boundaries=contours, ncolors=256)$/;"	v
norm2	nanopores/geometries/Cyl2D/subdomains.py	/^def norm2(x, y, z=0.0):$/;"	f
norm2	nanopores/geometries/H_cyl_geo/subdomains.py	/^def norm2(x, y, z=0.0):$/;"	f
norm2	nanopores/geometries/H_geo/subdomains.py	/^def norm2(x, y):$/;"	f
norm2	nanopores/geometries/W_2D_geo/subdomains.py	/^def norm2(x, y):$/;"	f
norm2	nanopores/geometries/W_3D_geo/subdomains.py	/^def norm2(x, y):$/;"	f
norm2	nanopores/geometries/aHem/subdomains.py	/^def norm2(x, y, z=0.0):$/;"	f
norm2	scripts/howorka/HoworkaTools.py	/^norm2 = matplotlib.colors.SymLogNorm(linthresh=1e-7, linscale=1.0, vmin=-0., vmax=c0)$/;"	v
norm2	scripts/howorka/video.py	/^norm2 = matplotlib.colors.SymLogNorm(linthresh=1e-7, linscale=1.0, vmin=-0., vmax=c0)$/;"	v
noslip	nanopores/physics/electrolyte.py	/^noslip = dict(noslip = "U0")$/;"	v
noslip	scripts/howorka/largepore.py	/^    noslip = {"dnab", "memb"},$/;"	v
noslip	scripts/howorka/largepore_dna.py	/^    noslip = {"dnab", "memb", "moleculeb"},$/;"	v
noslip	scripts/numerics/anaPNPS_refinement.py	/^    noslip = "wall",$/;"	v
noslip	scripts/numerics/anaPNPS_refinement_2D.py	/^    noslip = "wall",$/;"	v
noslip	scripts/numerics/anaPNPS_uniform.py	/^    noslip = "wall",$/;"	v
noslip	scripts/numerics/analyticalPNPS.py	/^    noslip = "wall",$/;"	v
noslip	scripts/numerics/analyticalPNPS_2D.py	/^    noslip = "wall",$/;"	v
noslip	scripts/numerics/analyticalPNPS_3D.py	/^    noslip = "wall",$/;"	v
noslip	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    noslip = "wall",$/;"	v
noslip	scripts/numerics/analyticalPNP_3D.py	/^    noslip = "wall",$/;"	v
notmol	scripts/numerics/implicit_vs_explicit.py	/^    notmol = {"fluid", "dna", "membrane"}$/;"	v	class:vAna
notx0	scripts/howorka/HoworkaTools.py	/^notx0 = x>0.$/;"	v
notx0	scripts/howorka/test_forcefields.py	/^notx0 = x>0.$/;"	v
notx0	scripts/howorka/video.py	/^notx0 = x>0.$/;"	v
nproc	scripts/howorka/ivcurve.py	/^    nproc = 4,$/;"	v
nproc	scripts/plot_scripts/IV_ahem.py	/^    nproc = 1,$/;"	v
nproc	scripts/plot_scripts/parameter_script.py	/^nproc = 1,$/;"	v
nref	scripts/numerics/H3Drefine.py	/^nref = 1,$/;"	v
num_refinements	scripts/test_features/curved.py	/^num_refinements = 3$/;"	v
nx	scripts/plot_scripts/IV_ahem.py	/^    nx = len(bVsim)$/;"	v
ny	scripts/plot_scripts/IV_ahem.py	/^    ny = range(int(float(len(Isim0))\/nx))$/;"	v
on_boundary	nanopores/geometries/curved.py	/^    def on_boundary(self, x):$/;"	m	class:Circle
on_rect_xz	nanopores/geometries/Nanowire/subdomains.py	/^def on_rect_xz(x, C, w, h):$/;"	f
operator_priority	nanopores/tools/box.py	/^    operator_priority = ["BallCollection", "Ball"]$/;"	v	class:BoxCollection
opinit	nanopores/tools/box.py	/^    def opinit(self, op, A, B):$/;"	m	class:csgExpression
order	scripts/finfet/collocation.py	/^        order = 2,$/;"	v
orders	scripts/finfet/MLSC.py	/^orders = range(1, maxorder+1)$/;"	v
outerdna	scripts/numerics/H3Drefine.py	/^outerdna = Cylinder(R=geo.params["r1"], L=geo.params["l0"])$/;"	v
outerdna	scripts/numerics/adap3D.py	/^outerdna = Cylinder(R=geo.params["r1"], L=geo.params["l0"])$/;"	v
outerdna	scripts/numerics/adap3Dpb.py	/^outerdna = Cylinder(R=geo.params["r1"], L=geo.params["l0"])$/;"	v
outerdna	scripts/numerics/adap3Dref.py	/^outerdna = Cylinder(R=geo.params["r1"], L=geo.params["l0"])$/;"	v
outerdnab	scripts/numerics/H3Drefine.py	/^    outerdnab = outerdna.snap,$/;"	v
outerdnab	scripts/numerics/adap3D.py	/^    outerdnab = outerdna.snap,$/;"	v
outerdnab	scripts/numerics/adap3Dpb.py	/^    outerdnab = outerdna.snap,$/;"	v
outerdnab	scripts/numerics/adap3Dref.py	/^    outerdnab = outerdna.snap,$/;"	v
outerfrac	nanopores/geometries/W_2D_geo/params_geo.py	/^outerfrac = 0.2$/;"	v
outerfrac	nanopores/geometries/W_3D_geo/params_geo.py	/^outerfrac = 0.3$/;"	v
outermemb	scripts/howorka/largepore.py	/^outermemb = closed_membrane.boundary("front", "back", "left", "right")$/;"	v
outermemb	scripts/howorka/largepore_dna.py	/^outermemb = closed_membrane.boundary("front", "back", "left", "right")$/;"	v
outermembraneb	scripts/numerics/H3Drefine.py	/^    outermembraneb = side.snap,$/;"	v
outermembraneb	scripts/numerics/adap3D.py	/^    outermembraneb = side.snap,$/;"	v
outermembraneb	scripts/numerics/adap3Dpb.py	/^    outermembraneb = side.snap,$/;"	v
outermembraneb	scripts/numerics/adap3Dref.py	/^    outermembraneb = side.snap,$/;"	v
outputs	scripts/plot_scripts/IV_ahem.py	/^    outputs = [j+p for j in Jcomp for p in ["top","btm"]]+Jcomp,$/;"	v
over_line	nanopores/geometries/W_2D_geo/subdomains.py	/^    def over_line(x, y, tan, tolc):$/;"	f	function:subdomain_list
over_line	nanopores/geometries/W_3D_geo/subdomains.py	/^    def over_line(x, y, tan, tolc):$/;"	f	function:subdomain_list
overwrite	scripts/howorka/selectivity.py	/^    overwrite = False,$/;"	v
oxide	nanopores/geometries/finfet.py	/^    oxide = oxide - fin,$/;"	v
oxide	nanopores/geometries/finfet.py	/^oxide = Box(center=[0, 0, t1\/2], l=ll, w= ww + 2*t1, h= hw + t1)$/;"	v
oxide	nanopores/physics/finfet.py	/^    oxide = "permOx",$/;"	v
oxide	nanopores/physics/finfet.py	/^    oxide = 0.,$/;"	v
p	nanopores/scripts/test_survival.py	/^p = survival.solution$/;"	v
p	nanopores/testsuite/test_2D.py	/^p = PNPSAxisym(geo)$/;"	v
p	nanopores/testsuite/test_2D_with_molecule.py	/^p = PNPSAxisym(geo)$/;"	v
p	nanopores/testsuite/test_3D.py	/^p = PNPS(geo)$/;"	v
p	nanopores/testsuite/test_3D_with_molecule.py	/^p = PNPS(geo)$/;"	v
p	scripts/finfet/finfet.py	/^p = p0*exp(-beta*u)$/;"	v
p	scripts/finfet/test_wire.py	/^p = ni*exp(-(u0 - phiF)\/UT)$/;"	v
p	scripts/howorka/selectivity.py	/^p = nanopores.user_params($/;"	v
p	scripts/survival.py	/^p = survival.solution$/;"	v
p	scripts/test_ahem.py	/^p = survival.solution$/;"	v
p0	nanopores/physics/finfet.py	/^p0 = dict($/;"	v
p0	scripts/finfet/finfet.py	/^p0 = geo.pwconst("p0")$/;"	v
pPB	scripts/numerics/anaPNPS_refinement.py	/^def pPB(x):$/;"	f
pPB	scripts/numerics/anaPNPS_refinement_2D.py	/^def pPB(x):$/;"	f
pPB	scripts/numerics/anaPNPS_uniform.py	/^def pPB(x):$/;"	f
pPB	scripts/numerics/analyticalPNPS.py	/^def pPB(x):$/;"	f
pPB	scripts/numerics/analyticalPNPS_2D.py	/^def pPB(x):$/;"	f
pPB	scripts/numerics/analyticalPNPS_3D.py	/^def pPB(x):$/;"	f
pPB	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^def pPB(x):$/;"	f
pPB	scripts/numerics/analyticalPNP_3D.py	/^def pPB(x):$/;"	f
pPBEx	scripts/numerics/anaPNPS_refinement.py	/^class pPBEx(Expression):$/;"	c
pPBEx	scripts/numerics/anaPNPS_refinement_2D.py	/^class pPBEx(Expression):$/;"	c
pPBEx	scripts/numerics/anaPNPS_uniform.py	/^class pPBEx(Expression):$/;"	c
pPBEx	scripts/numerics/analyticalPNPS.py	/^class pPBEx(Expression):$/;"	c
pPBEx	scripts/numerics/analyticalPNPS_3D.py	/^class pPBEx(Expression):$/;"	c
pPBEx	scripts/numerics/analyticalPNP_3D.py	/^class pPBEx(Expression):$/;"	c
parallel_output	nanopores/scripts/simulation2D.py	/^def parallel_output(calculate, nproc=1, plot=None, showplot=False, **params):$/;"	f
parameter	nanopores/tools/geometry.py	/^    def parameter(self, string):$/;"	m	class:Geometry
params	nanopores/geometries/pughpore.py	/^params = dict($/;"	v
params	nanopores/scripts/calculate_forces.py	/^params = dict($/;"	v
params	nanopores/scripts/test_geometry_3D.py	/^params = dict($/;"	v
params	nanopores/tools/coupled.py	/^    params = dict(inewton = 10, ipicard = 10,$/;"	v	class:CoupledSolver
params	scripts/howorka/forcefield2D.py	/^params = dict($/;"	v
params	scripts/howorka/forcefield3D.py	/^params = dict($/;"	v
params	scripts/howorka/plot_selectivity.py	/^    params = dict(default)$/;"	v
params	scripts/howorka/selectivity.py	/^    params = results.params$/;"	v
params	scripts/howorka/test_forcefields.py	/^params = dict($/;"	v
params	scripts/numerics/analyticalPNPS.py	/^params = dict(axis="x", axlabels=("r [nm]", "concentration [mol\/m$^3$]"), newfig=False)$/;"	v
params	scripts/numerics/analyticalPNPS.py	/^params = dict(axis="x", axlabels=("r [nm]", "velocity [m\/s]"), newfig=False)$/;"	v
params	scripts/numerics/linear-robust.py	/^params = itertools.product(bVs, qs)$/;"	v
params	scripts/plot_scripts/PMF_Profile_2D.py	/^params = dict($/;"	v
params	scripts/plot_scripts/current_trace_2D.py	/^params = dict($/;"	v
params	scripts/pughpore/diffusion.py	/^params = dict($/;"	v
params	scripts/pughpore/test_ff.py	/^params = dict(h=2., Nmax=5e5)$/;"	v
params	scripts/test_features/howorka3D.py	/^params = dict($/;"	v
params0	scripts/howorka/plot_selectivity.py	/^    params0 = results["params"]$/;"	v
params1	scripts/plot_scripts/script2DWelectrodes.py	/^params1 = defparams.copy()$/;"	v
params2D	nanopores/scripts/calculate_forces.py	/^params2D = dict($/;"	v
params_geo	nanopores/models/Howorka.py	/^params_geo = import_module("nanopores.geometries.%s.params_geo" %geo_name)$/;"	v
params_geo3D	nanopores/models/Howorka.py	/^params_geo3D = import_module("nanopores.geometries.%s.params_geo" %geo_name3D)$/;"	v
parser	nanopores/scripts/calculate_forces.py	/^    parser = argparse.ArgumentParser()$/;"	v
patterson_lookup	scripts/finfet/collocation_methods/patterson_lookup.m	/^function [ x, w ] = patterson_lookup ( n )$/;"	f
patterson_lookup_points	scripts/finfet/collocation_methods/patterson_lookup_points.m	/^function x = patterson_lookup_points ( n )$/;"	f
patterson_lookup_points_np	scripts/finfet/collocation_methods/patterson_lookup_points_np.m	/^function x = patterson_lookup_points_np ( n, np, p )$/;"	f
patterson_lookup_weights	scripts/finfet/collocation_methods/patterson_lookup_weights.m	/^function w = patterson_lookup_weights ( n )$/;"	f
patterson_lookup_weights_np	scripts/finfet/collocation_methods/patterson_lookup_weights_np.m	/^function w = patterson_lookup_weights_np ( n, np, p )$/;"	f
pb	scripts/analytical_test_case.py	/^pb = solve_pde(SimplePBProblem, geo1D, phys, cyl=True, iterative=False, tolnewton=1e-10)$/;"	v
pb	scripts/numerics/adap2Dpb.py	/^pb = adaptive_pb(geo, phys, cyl=True, frac=.5, Nmax=Nmax, Fpbref=ref, cheapest=cheapest)$/;"	v
pb	scripts/numerics/adap2Dref.py	/^pb = LinearPBAxisymGoalOriented(geo, phys, goal=goal, ref=-3.71676806993e+17)$/;"	v
pb	scripts/numerics/adap3Dpb.py	/^pb = adaptive_pb(geo, phys, frac=frac, Nmax=Nmax, Fpbref=ref,$/;"	v
pb	scripts/numerics/adap3Dref.py	/^pb = adaptive_pb(geo, phys, frac=frac, Nmax=Nmax, Fpbref=ref,$/;"	v
pb	scripts/numerics/anaPNPS_refinement.py	/^pb = solve_pde(SimplePBProblem, geo1D, phys, cyl=True, iterative=False, tolnewton=1e-10)$/;"	v
pb	scripts/numerics/anaPNPS_refinement_2D.py	/^pb = solve_pde(SimplePBProblem, geo1D, phys, cyl=True, iterative=False, tolnewton=1e-10)$/;"	v
pb	scripts/numerics/anaPNPS_uniform.py	/^pb = solve_pde(SimplePBProblem, geo1D, phys, cyl=True, iterative=False, tolnewton=1e-10)$/;"	v
pb	scripts/numerics/analyticalPNPS.py	/^pb = solve_pde(SimplePBProblem, geo1D, phys, cyl=True, iterative=False, tolnewton=1e-10)$/;"	v
pb	scripts/numerics/analyticalPNPS_2D.py	/^pb = solve_pde(SimplePBProblem, geo1D, phys, cyl=True, iterative=False, tolnewton=1e-10)$/;"	v
pb	scripts/numerics/analyticalPNPS_3D.py	/^pb = solve_pde(SimplePBProblem, geo1D, phys, cyl=True, iterative=False, tolnewton=1e-10)$/;"	v
pb	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^pb = solve_pde(SimplePBProblem, geo1D, phys, cyl=True, iterative=False, tolnewton=1e-10)$/;"	v
pb	scripts/numerics/analyticalPNP_3D.py	/^pb = solve_pde(SimplePBProblem, geo1D, phys, cyl=True, iterative=False, tolnewton=1e-10)$/;"	v
pb	scripts/plot_scripts/IV_curve_2D.py	/^pb = LinearPBAxisymGoalOriented(geo, phys, goal=goal)$/;"	v
pb	scripts/plot_scripts/PMF_Profile_2D.py	/^    pb = LinearPBAxisym(geo, **phys_params)$/;"	v
pb	scripts/plot_scripts/script2DW.py	/^pb = LinearPBAxisymGoalOriented(geo, phys, goal=goal)$/;"	v
pb	scripts/pughpore/test_pugh.py	/^pb = simplepnps.SimpleLinearPBGO(geo, phys, goal=goal,$/;"	v
pb	scripts/test2D.py	/^pb = LinearPBAxisymGoalOriented(geo, phys, goal=goal)$/;"	v
pb	scripts/test2DP.py	/^pb = LinearPBAxisym(geo, phys)$/;"	v
pb	scripts/test2Dold.py	/^pb = LinearPBAxisymGoalOriented(geo, phys, goal=goal)$/;"	v
pb	scripts/test3D_GOA.py	/^pb = LinearPBGoalOriented(geo, phys, goal=goal)$/;"	v
pb	scripts/toy_models/pnp1Dcyl.py	/^pb = solve_pde(SimplePBProblem, geo, phys, cyl=True, iterative=False, tolnewton=1e-10)$/;"	v
pb0	scripts/test3D_GOA.py	/^pb0 = LinearPB(geo, physPB)$/;"	v
pb2D	scripts/numerics/adap3Dpb.py	/^pb2D = adaptive_pb(geo2D, phys2D, cyl=True, frac=.5, Nmax=Nmax2D,$/;"	v
pb_indicator	nanopores/tools/errorest.py	/^def pb_indicator(geo, phys, u, cyl=False):$/;"	f
pb_indicator_GO	nanopores/tools/errorest.py	/^def pb_indicator_GO(geo, phys, u, z, cyl=False):$/;"	f
pb_indicator_GO_cheap	nanopores/tools/errorest.py	/^def pb_indicator_GO_cheap(geo, phys, u, z, cyl=False):$/;"	f
pblin	scripts/toy_models/pnp1Dcyl.py	/^pblin = solve_pde(SimplePBProblem, geo, phys, cyl=True, iterative=False, imax=1)$/;"	v
pbpnps	nanopores/models/mysolve.py	/^def pbpnps(geo, phys, cyl=False, frac=0.5, Nmax=1e4, cheapest=False):$/;"	f
pbpnps	scripts/numerics/mysolve.py	/^def pbpnps(geo, phys, cyl=False, frac=0.5, Nmax=1e4, cheapest=False):$/;"	f
pde	nanopores/scripts/test_survival.py	/^pde = PNPS(geo, phys)$/;"	v
pde	scripts/finfet/finfet.py	/^pde = nanopores.NonstandardPB(geo, phys)$/;"	v
pde	scripts/finfet/test_wire.py	/^    pde = PB(geo, bV=-1.0)$/;"	v
pde	scripts/fluorophore_in_top_reservoir.py	/^pde = LinearPDE(geo, PoissonProblemPureNeumannAxisym, phys=phys) #, bcs=bc)$/;"	v
pde	scripts/howorka/test_selectivity.py	/^pde = convect(geo, phys, Fel, Fdrag, u0=u0, t=t, log=log)$/;"	v
pde	scripts/stokes_law/stokes_law.py	/^pde = LinearPDE(geo, StokesProblemAxisymEqualOrder, phys=phys)$/;"	v
pde	scripts/survival.py	/^pde = PNPS(geo, phys)$/;"	v
pde	scripts/test_ahem.py	/^pde = PNPS(geo, phys)$/;"	v
permDopant	nanopores/physics/finfet.py	/^permDopant = lambda: permSi\/4$/;"	v
permMol	nanopores/physics/pore_mol.py	/^permMol = lambda eperm, rpermMol: eperm*rpermMol$/;"	v
permOx	nanopores/physics/finfet.py	/^permOx = eperm*3.9$/;"	v
permPore	nanopores/physics/howorka.py	/^permPore = lambda: eperm*rpermPore$/;"	v
permPore	nanopores/physics/pore.py	/^permPore = lambda eperm, rPermPore: eperm*rpermPore$/;"	v
permPore	nanopores/physics/pore_dna.py	/^permPore = lambda: eperm*rpermPore$/;"	v
permPore	nanopores/physics/pore_molecule.py	/^permPore = lambda: eperm*rpermPore$/;"	v
permProtein	nanopores/physics/howorka.py	/^permProtein = lambda: eperm*rpermProtein$/;"	v
permProtein	nanopores/physics/pore.py	/^permProtein = lambda eperm, rpermProtein: eperm*rpermProtein$/;"	v
permProtein	nanopores/physics/pore_molecule.py	/^permProtein = lambda: eperm*rpermProtein$/;"	v
permSi	nanopores/physics/finfet.py	/^permSi = eperm*11.7$/;"	v
permittivity	nanopores/physics/finfet.py	/^permittivity = dict($/;"	v
permittivity	nanopores/physics/params_physical.py	/^permittivity = {$/;"	v
permittivity	nanopores/physics/pore_dna.py	/^permittivity = {$/;"	v
phi	scripts/analytical_test_case.py	/^phi = pb.solution$/;"	v
phi	scripts/numerics/adap3Dpb.py	/^phi = pb.functions["primal"]$/;"	v
phi	scripts/numerics/anaPNPS_refinement.py	/^phi = pb.solution$/;"	v
phi	scripts/numerics/anaPNPS_refinement_2D.py	/^phi = pb.solution$/;"	v
phi	scripts/numerics/anaPNPS_uniform.py	/^phi = pb.solution$/;"	v
phi	scripts/numerics/analyticalPNPS.py	/^phi = pb.solution$/;"	v
phi	scripts/numerics/analyticalPNPS_2D.py	/^phi = pb.solution$/;"	v
phi	scripts/numerics/analyticalPNPS_3D.py	/^phi = pb.solution$/;"	v
phi	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^phi = pb.solution$/;"	v
phi	scripts/numerics/analyticalPNP_3D.py	/^phi = pb.solution$/;"	v
phi2D	scripts/numerics/adap3Dpb.py	/^phi2D = pb2D.functions["primal"]$/;"	v
phiF	scripts/finfet/test_wire.py	/^phiF = params_physical.fermi_level["sil"]$/;"	v
phys	nanopores/scripts/test_survival.py	/^phys = Physics("pore_molecule", geo, **phys_params)$/;"	v
phys	scripts/analytical_test_case.py	/^phys = Physics("pore", geo1D, **phys_params)$/;"	v
phys	scripts/analytical_test_case.py	/^phys = Physics("pore", geo2D, **phys_params)$/;"	v
phys	scripts/finfet/finfet.py	/^phys = nanopores.Physics("finfet", geo,$/;"	v
phys	scripts/fluorophore_in_top_reservoir.py	/^phys = Physics($/;"	v
phys	scripts/numerics/adap2D.py	/^phys = Physics("howorka", geo, **phys_params)$/;"	v
phys	scripts/numerics/adap2Dpb.py	/^phys = Physics("howorka", geo, **phys_params)$/;"	v
phys	scripts/numerics/adap2Dref.py	/^phys = Physics("howorka", geo, **phys_params)$/;"	v
phys	scripts/numerics/adap3D.py	/^phys = Physics("howorka", geo, **phys_params)$/;"	v
phys	scripts/numerics/adap3Dpb.py	/^phys = Physics("howorka", geo, **phys_params)$/;"	v
phys	scripts/numerics/adap3Dref.py	/^phys = Physics("howorka", geo, **phys_params)$/;"	v
phys	scripts/numerics/anaPNPS_refinement.py	/^phys = Physics("pore", geo1D, **phys_params)$/;"	v
phys	scripts/numerics/anaPNPS_refinement_2D.py	/^phys = Physics("pore", geo1D, **phys_params)$/;"	v
phys	scripts/numerics/anaPNPS_uniform.py	/^phys = Physics("pore", geo1D, **phys_params)$/;"	v
phys	scripts/numerics/analyticalPNPS.py	/^phys = Physics("pore", geo1D, **phys_params)$/;"	v
phys	scripts/numerics/analyticalPNPS_2D.py	/^phys = Physics("pore", geo1D, **phys_params)$/;"	v
phys	scripts/numerics/analyticalPNPS_2D.py	/^phys = Physics("pore", geo2D, **phys_params)$/;"	v
phys	scripts/numerics/analyticalPNPS_3D.py	/^phys = Physics("pore", geo1D, **phys_params)$/;"	v
phys	scripts/numerics/analyticalPNPS_3D.py	/^phys = Physics("pore", geo3D, **phys_params)$/;"	v
phys	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^phys = Physics("pore", geo1D, **phys_params)$/;"	v
phys	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^phys = Physics("pore", geo2D, **phys_params)$/;"	v
phys	scripts/numerics/analyticalPNP_3D.py	/^phys = Physics("pore", geo1D, **phys_params)$/;"	v
phys	scripts/numerics/analyticalPNP_3D.py	/^phys = Physics("pore", geo3D, **phys_params)$/;"	v
phys	scripts/numerics/hybrid_vs_newton.py	/^phys = Physics("pore", geo, **phys_params)$/;"	v
phys	scripts/numerics/linear-robust.py	/^        phys = H.phys2D(geo, bV=bVs[i], dnaqsdamp=qs[j])$/;"	v
phys	scripts/numerics/selectivity1D.py	/^phys = nanopores.Physics("howorka", geo=geo, lscale=1e9, rDtargetPore=0.5)$/;"	v
phys	scripts/numerics/test_fixedpoint.py	/^phys = Physics("pore", geo, **phys_params)$/;"	v
phys	scripts/numerics/test_fixedpoint_1D.py	/^phys = Physics("pore", geo, **phys_params)$/;"	v
phys	scripts/plot_scripts/IV_curve_2D.py	/^phys = Physics("pore_molecule", geo, **phys_params)$/;"	v
phys	scripts/plot_scripts/PMF_Profile_2D.py	/^    phys = Physics("pore_molecule", geo, **phys_params)$/;"	v
phys	scripts/plot_scripts/script2DW.py	/^phys = Physics("pore_molecule", geo, **phys_params)$/;"	v
phys	scripts/pughpore/test_pugh.py	/^phys = nano.Physics("pore_mol", geo, **physp)$/;"	v
phys	scripts/survival.py	/^phys = Physics("pore_molecule", geo, **phys_params)$/;"	v
phys	scripts/test.py	/^phys = Physics("pore_molecule", geo, **phys_params)$/;"	v
phys	scripts/test2D.py	/^phys = Physics("pore_molecule", geo, **phys_params)$/;"	v
phys	scripts/test2DP.py	/^phys = Physics("pore_dna", geo, **phys_params)$/;"	v
phys	scripts/test2Dnewton.py	/^phys = Physics("pore_molecule", geo, **phys_params)$/;"	v
phys	scripts/test2Dold.py	/^phys = Physics("pore_molecule", geo, **phys_params)$/;"	v
phys	scripts/test3D_GOA.py	/^phys = Physics("pore_molecule", geo, **phys_params)$/;"	v
phys	scripts/test_SimplePNPS.py	/^phys = Physics("pore", geo, **phys_params)$/;"	v
phys	scripts/test_ahem.py	/^phys = Physics("pore_molecule", geo, **phys_params)$/;"	v
phys	scripts/toy_models/pnp1D.py	/^phys = Physics("pore", geo, **phys_params)$/;"	v
phys	scripts/toy_models/pnp1Dcyl.py	/^phys = Physics("electrolyte", geo, **phys_params)$/;"	v
phys2D	nanopores/models/HoworkaSimple.py	/^def phys2D(geo, **params):$/;"	f
phys2D	scripts/numerics/HoworkaSimple.py	/^def phys2D(geo, **params):$/;"	f
phys2D	scripts/numerics/adap3Dpb.py	/^phys2D = Physics("howorka", geo2D, **phys_params)$/;"	v
phys2D	scripts/numerics/adap3Dref.py	/^phys2D = Physics("howorka", geo2D, **phys_params)$/;"	v
phys2D	scripts/numerics/anaPNPS_refinement.py	/^phys2D = Physics("pore", geo2D, **phys_params)$/;"	v
phys2D	scripts/numerics/anaPNPS_refinement_2D.py	/^phys2D = Physics("pore", geo2D, **phys_params)$/;"	v
phys2D	scripts/numerics/analyticalPNPS.py	/^phys2D = Physics("pore", geo2D, **phys_params)$/;"	v
phys3D	scripts/numerics/anaPNPS_refinement.py	/^phys3D = Physics("pore", geo3D, **phys_params)$/;"	v
phys3D	scripts/numerics/anaPNPS_refinement_2D.py	/^phys3D = Physics("pore", geo3D, **phys_params)$/;"	v
phys3D	scripts/numerics/analyticalPNPS.py	/^phys3D = Physics("pore", geo3D, **phys_params)$/;"	v
physPB	scripts/test3D_GOA.py	/^physPB = Physics("pore_molecule", geo, **phys_params_PB)$/;"	v
phys_name	nanopores/models/Howorka.py	/^phys_name = "howorka"$/;"	v
phys_name	nanopores/models/HoworkaSimple.py	/^phys_name = "pore"$/;"	v
phys_name	nanopores/scripts/ahemFPT.py	/^phys_name = "pore_molecule"$/;"	v
phys_name	nanopores/scripts/ahemIV.py	/^phys_name = "pore_molecule"$/;"	v
phys_name	scripts/numerics/Howorka.py	/^phys_name = "howorka"$/;"	v
phys_name	scripts/numerics/HoworkaSimple.py	/^phys_name = "pore"$/;"	v
phys_params	nanopores/models/Howorka.py	/^def phys_params(bV, Qmol, dnaqsdamp, rMolecule, bulkcon): return dict($/;"	f
phys_params	nanopores/models/HoworkaSimple.py	/^def phys_params(bV, Qmol, dnaqsdamp): return dict($/;"	f
phys_params	nanopores/scripts/calculate_forces.py	/^phys_params = dict($/;"	v
phys_params	nanopores/scripts/test_survival.py	/^phys_params = dict($/;"	v
phys_params	scripts/analytical_test_case.py	/^phys_params = dict($/;"	v
phys_params	scripts/numerics/Howorka.py	/^def phys_params(bV, Qmol, dnaqsdamp, rMolecule): return dict($/;"	f
phys_params	scripts/numerics/HoworkaSimple.py	/^def phys_params(bV, Qmol, dnaqsdamp): return dict($/;"	f
phys_params	scripts/numerics/adap2D.py	/^phys_params = dict($/;"	v
phys_params	scripts/numerics/adap2Dpb.py	/^phys_params = dict($/;"	v
phys_params	scripts/numerics/adap2Dref.py	/^phys_params = dict($/;"	v
phys_params	scripts/numerics/adap3D.py	/^phys_params = dict($/;"	v
phys_params	scripts/numerics/adap3Dpb.py	/^phys_params = dict($/;"	v
phys_params	scripts/numerics/adap3Dref.py	/^phys_params = dict($/;"	v
phys_params	scripts/numerics/anaPNPS_refinement.py	/^phys_params = dict($/;"	v
phys_params	scripts/numerics/anaPNPS_refinement_2D.py	/^phys_params = dict($/;"	v
phys_params	scripts/numerics/anaPNPS_uniform.py	/^phys_params = dict($/;"	v
phys_params	scripts/numerics/analyticalPNPS.py	/^phys_params = dict($/;"	v
phys_params	scripts/numerics/analyticalPNPS_2D.py	/^phys_params = dict($/;"	v
phys_params	scripts/numerics/analyticalPNPS_3D.py	/^phys_params = dict($/;"	v
phys_params	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^phys_params = dict($/;"	v
phys_params	scripts/numerics/analyticalPNP_3D.py	/^phys_params = dict($/;"	v
phys_params	scripts/numerics/hybrid_vs_newton.py	/^phys_params = dict($/;"	v
phys_params	scripts/numerics/test_fixedpoint.py	/^phys_params = dict($/;"	v
phys_params	scripts/numerics/test_fixedpoint_1D.py	/^phys_params = dict($/;"	v
phys_params	scripts/plot_scripts/IV_curve_2D.py	/^phys_params = {"Membraneqs": -0.03, "dnaqsdamp":0.1}$/;"	v
phys_params	scripts/plot_scripts/PMF_Profile_2D.py	/^phys_params = dict($/;"	v
phys_params	scripts/plot_scripts/current_trace_2D.py	/^phys_params = {"Membraneqs": -0.03, "bV": -0.1, "Qmol": -0*qq,}$/;"	v
phys_params	scripts/plot_scripts/script2DW.py	/^    phys_params = {"bV": 0.2, "bulkcon":1e3, "SAMqs": -0.032, "SiNqs": -0.022}$/;"	v
phys_params	scripts/plot_scripts/script2DW.py	/^    phys_params = {"bulkcon":4e2, "SAMqs": -0.0, "SiNqs": -0.022, "bulkconduct": 4.9}$/;"	v
phys_params	scripts/survival.py	/^phys_params = dict($/;"	v
phys_params	scripts/test.py	/^phys_params = {"Membraneqs": -0.03, "bV": 0.001, "Qmol":-3.*qq, "bulkcon":1000}$/;"	v
phys_params	scripts/test2D.py	/^phys_params = dict($/;"	v
phys_params	scripts/test2DP.py	/^phys_params = {"bV":0.1, "MembraneSiNqs":-30e-3, "bulkcon":1e3, "DNAqs": -0.1362}$/;"	v
phys_params	scripts/test2DW.py	/^phys_params = {"SiNqs":-0.022, "SAMqs":-0.078, "bV": 0.2}$/;"	v
phys_params	scripts/test2Dnewton.py	/^phys_params = {"bV": 0.1, "bulkcon":300, "dnaqsdamp":0.1}$/;"	v
phys_params	scripts/test2Dold.py	/^phys_params = dict($/;"	v
phys_params	scripts/test3D_GOA.py	/^phys_params = dict($/;"	v
phys_params	scripts/test_SimplePNPS.py	/^phys_params = dict($/;"	v
phys_params	scripts/test_ahem.py	/^phys_params = dict($/;"	v
phys_params	scripts/toy_models/pnp1D.py	/^phys_params = dict($/;"	v
phys_params	scripts/toy_models/pnp1Dcyl.py	/^phys_params = dict($/;"	v
phys_params_PB	scripts/test3D_GOA.py	/^phys_params_PB = dict($/;"	v
physb	scripts/test_features/circle.py	/^physb = dict(circle = (1,))$/;"	v
physd	scripts/test_features/circle.py	/^physd = dict(domain = (0,))$/;"	v
physical_boundary	scripts/fluorophore_in_top_reservoir.py	/^    physical_boundary = physical_boundary,$/;"	v
physical_boundary	scripts/fluorophore_in_top_reservoir.py	/^physical_boundary = {"centerline":(1,), "top":(2,), "bottom":(3,)}$/;"	v
physical_boundary	scripts/simplegeo.py	/^physical_boundary = {$/;"	v
physical_dict	scripts/plot_scripts/script2DWelectrodes.py	/^physical_dict = import_vars("nanopores.physics.params_physical")$/;"	v
physical_dict	scripts/plot_scripts/script3DW.py	/^physical_dict = import_vars("nanopores.physics.params_physical")$/;"	v
physical_dict	scripts/test2DW.py	/^physical_dict = import_vars("nanopores.physics.params_physical")$/;"	v
physical_domain	scripts/fluorophore_in_top_reservoir.py	/^    physical_domain = physical_domain,$/;"	v
physical_domain	scripts/fluorophore_in_top_reservoir.py	/^physical_domain = {"center":(1,), "rest":(0,)}$/;"	v
physical_domain	scripts/simplegeo.py	/^physical_domain = {$/;"	v
physical_to_gmsh	nanopores/tools/box.py	/^    def physical_to_gmsh(self, merge=True):$/;"	m	class:BoxCollection
physicalboundary	nanopores/tools/geometry.py	/^    def physicalboundary(self, string):$/;"	m	class:Geometry
physicaldomain	nanopores/tools/geometry.py	/^    def physicaldomain(self, string):$/;"	m	class:Geometry
physp	nanopores/models/pughpore.py	/^physp = nano.Params($/;"	v
physp	scripts/pughpore/randomwalk/run.py	/^physp = nano.Physics(name="pore_mol")$/;"	v
physp	scripts/pughpore/test_1Dpugh.py	/^physp = nano.Params($/;"	v
physp	scripts/pughpore/test_pugh.py	/^physp = nano.Params($/;"	v
physsurf	nanopores/py4gmsh/basic.py	/^physsurf = {$/;"	v
physvol	nanopores/py4gmsh/basic.py	/^physvol = {$/;"	v
pi	nanopores/geometries/Nanowire/params_geo.py	/^pi = 3.141592653589793$/;"	v
pi	nanopores/physics/params_physical.py	/^pi = 3.14159265359$/;"	v
pi	scripts/misc/chargeDNA.py	/^pi = 3.141592$/;"	v
pid	scripts/plot_scripts/script2DWelectrodes.py	/^        pid = "e"$/;"	v
pid1	scripts/plot_scripts/script2DWelectrodes.py	/^pid1 = "e1"$/;"	v
plainfixedpoint	nanopores/tools/coupled.py	/^def plainfixedpoint(solvers, tol=TOL, ntol=TOL, imax=IMAX, inewton=1, $/;"	f
plasma	scripts/howorka/colormaps.py	/^plasma = cmaps['plasma']$/;"	v
plot	nanopores/models/pughpore.py	/^    def plot(self, u, title="u"):$/;"	m	class:Plotter
plot	nanopores/tools/box.py	/^    def plot(self, sub=False):$/;"	m	class:BoxCollection
plot	nanopores/tools/errorest.py	/^    def plot(self, rate=None, fig=True, style="s-"):$/;"	m	class:Estimator
plot	nanopores/tools/functions1D.py	/^    def plot(self, u, *args, **kwargs):$/;"	m	class:Geometry1D
plot	nanopores/tools/transientpde.py	/^    def plot(self, t=None):$/;"	m	class:TimeDependentPlotter
plot	scripts/howorka/ivcurve.py	/^    plot = "bV",$/;"	v
plot	scripts/plot_scripts/IV_ahem.py	/^    plot = "bV",$/;"	v
plot	scripts/plot_scripts/parameter_script.py	/^plot = "domscale",$/;"	v
plot1D	nanopores/tools/utilities.py	/^def plot1D(functions, rng=(0.,1.,101), axis=None, dim=3, axlabels=("",""),$/;"	f
plot3	scripts/random_walk_aHem/varplots.py	/^plot3 = plt.subplot(131)$/;"	v
plotF	scripts/numerics/PMF.py	/^def plotF(x, u, name, titl, ylab):$/;"	f
plotMFPT	scripts/FPTscript.py	/^def plotMFPT(x, y, title=""):$/;"	f
plotSER	scripts/FPTscript.py	/^def plotSER(x, y, k=1, title=""):$/;"	f
plot_circle	scripts/numerics/plot_robustness.py	/^def plot_circle(ax, x, y, color):$/;"	f
plot_cross	nanopores/tools/utilities.py	/^def plot_cross(u, mesh2D, axis=1, **kwargs):$/;"	f
plot_cross_vector	nanopores/tools/utilities.py	/^def plot_cross_vector(u, mesh2D, axis=1, **kwargs):$/;"	f
plot_current	scripts/numerics/selectivity1D.py	/^plot_current = True$/;"	v
plot_finite	scripts/numerics/force_profiles.py	/^def plot_finite(F):$/;"	f
plot_function	scripts/numerics/force_profiles.py	/^def plot_function(u, *args, **kwargs):$/;"	f
plot_functionals	nanopores/tools/transientpde.py	/^    def plot_functionals(self, plot="plot", functionals=None, title="", fig=None):$/;"	m	class:TransientLinearPDE
plot_inversefit	scripts/FPTscript.py	/^def plot_inversefit(x, y, k=1, plot=plot):$/;"	f
plot_on_sub	nanopores/tools/utilities.py	/^def plot_on_sub(u, geo, sub, expr=None, title=""):$/;"	f
plot_point	scripts/numerics/force_profiles.py	/^def plot_point(F):$/;"	f
plot_profile	scripts/numerics/force_profiles.py	/^def plot_profile(Fimp, Fexp):$/;"	f
plot_release	scripts/numerics/selectivity1D.py	/^plot_release = False$/;"	v
plot_robustness	scripts/numerics/plot_robustness.py	/^def plot_robustness(ax, fpdata, fplabels, fpcolors):    $/;"	f
plot_sliced	nanopores/tools/utilities.py	/^def plot_sliced(geo):$/;"	f
plot_vector	nanopores/models/pughpore.py	/^    def plot_vector(self, u, title="u"):$/;"	m	class:Plotter
plotfit	scripts/FPTscript.py	/^def plotfit(x, y, k=1):$/;"	f
plots	scripts/howorka/ivcurve.py	/^plots = nanopores.parallel_output(run, showplot=False, **PARAMS)$/;"	v
pnp	scripts/numerics/anaPNPS_refinement.py	/^    pnp = couple_pnp,$/;"	v
pnp	scripts/numerics/anaPNPS_refinement_2D.py	/^    pnp = couple_pnp,$/;"	v
pnp	scripts/numerics/anaPNPS_uniform.py	/^    pnp = couple_pnp,$/;"	v
pnp	scripts/numerics/analyticalPNPS.py	/^    pnp = couple_pnp,$/;"	v
pnp	scripts/numerics/analyticalPNPS_2D.py	/^    pnp = couple_pnp,$/;"	v
pnp	scripts/numerics/analyticalPNPS_3D.py	/^    pnp = couple_pnp,$/;"	v
pnp	scripts/numerics/analyticalPNP_3D.py	/^pnp = solve_pde(SimplePNPProblem, geo3D, phys, newtondamp=damp, goals=[J_PNP], inside_loop=saveJ, $/;"	v
pnp	scripts/numerics/test_fixedpoint_1D.py	/^pnp = PNP(geo, phys, inewton=inewton, ipicard=imax, tolnewton=1e-4,$/;"	v
pnps	scripts/analytical_test_case.py	/^pnps = solve_problem(problem, geo2D)$/;"	v
pnps	scripts/numerics/adap2Dref.py	/^pnps = PNPSAxisym(geo, phys, v0=v0)$/;"	v
pnps	scripts/numerics/adap3Dref.py	/^pnps = PNPS(pb.geo, phys, v0=pb.solution, w0=w0)$/;"	v
pnps	scripts/numerics/analyticalPNPS_2D.py	/^pnps = CoupledSolver(problem, goals=[J], damp=damp, inewton=1, ipicard=30, tolnewton=1e-2)$/;"	v
pnps	scripts/numerics/analyticalPNPS_3D.py	/^pnps = CoupledSolver(problem, goals=[J], damp=damp, inewton=1, ipicard=30, tolnewton=1e-2)$/;"	v
pnps	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^pnps = solve_pde(SimplePNPProblem, geo2D, phys, cyl=True, newtondamp=1., goals=[J], $/;"	v
pnps	scripts/numerics/hybrid_vs_newton.py	/^pnps = PNPSHybrid(geo, phys, cyl=True, beta=beta, damp=damp, ku=ku,$/;"	v
pnps	scripts/numerics/test_fixedpoint.py	/^pnps = PNPSFixedPoint(geo, phys, cyl=True, beta=beta, ku=ku,$/;"	v
pnps	scripts/plot_scripts/IV_curve_2D.py	/^    pnps = PNPSAxisym(geo, phys)$/;"	v
pnps	scripts/plot_scripts/PMF_Profile_2D.py	/^    pnps = PNPSAxisym(geo, v0=v0, **phys_params)$/;"	v
pnps	scripts/plot_scripts/current_trace_2D.py	/^    pnps = PNPSAxisym(geo, **phys_params)$/;"	v
pnps	scripts/plot_scripts/script2DW.py	/^    pnps = PNPSAxisym(geo, phys)$/;"	v
pnps	scripts/plot_scripts/script2DWelectrodes.py	/^        pnps = PNPSAxisym(geo, **aparams)$/;"	v
pnps	scripts/plot_scripts/script3DW.py	/^pnps = PNPS(geo,**defparams)$/;"	v
pnps	scripts/pughpore/test_pugh.py	/^pnps = simplepnps.PNPSFixedPointbV(geo, phys, ipicard=solverp.imax,$/;"	v
pnps	scripts/test.py	/^pnps = PNPS(geo, phys)$/;"	v
pnps	scripts/test2D.py	/^pnps = PNPSAxisym(geo, phys, v0=v0)$/;"	v
pnps	scripts/test2DP.py	/^pnps = PNPSAxisym(geo, phys)$/;"	v
pnps	scripts/test2DW.py	/^pnps = PNPSAxisym(geo, **phys_params)$/;"	v
pnps	scripts/test2Dnewton.py	/^pnps = PNPSAxisymNewton(geo, phys)$/;"	v
pnps	scripts/test2Dold.py	/^pnps = PNPSAxisym(geo, phys, v0=v0)$/;"	v
pnps	scripts/test3D_GOA.py	/^pnps = PNPS(geo, phys, v0=v0)$/;"	v
pnps	scripts/test_SimplePNPS.py	/^pnps = NonlinearPDE(geo, SimplePNPProblem, phys=phys) #, cyl=True)$/;"	v
pnps	scripts/test_ions_on_dna.py	/^pnps = PNPS(geo)$/;"	v
pnps	scripts/toy_models/pnp1D.py	/^pnps = solve_pde(SimplePNPProblem, geo, phys)$/;"	v
pnps1	scripts/plot_scripts/script2DWelectrodes.py	/^pnps1 = PNPSAxisym(geo1, **params1)$/;"	v
pnps2D	scripts/numerics/anaPNPS_refinement.py	/^pnps2D = CoupledSolver(problem, goals=[J], damp=damp, inewton=1, ipicard=20, tolnewton=1e-2, verbose=False)$/;"	v
pnps2D	scripts/numerics/anaPNPS_refinement_2D.py	/^pnps2D = CoupledSolver(problem, goals=[J], damp=damp, inewton=1, ipicard=30, tolnewton=1e-2, verbose=False)$/;"	v
pnps2D	scripts/numerics/analyticalPNPS.py	/^pnps2D = CoupledSolver(problem, goals=[J], damp=damp, inewton=1, ipicard=30, tolnewton=1e-2)$/;"	v
pnps3D	scripts/numerics/anaPNPS_refinement.py	/^pnps3D = CoupledSolver(problem, goals=[J], damp=damp, inewton=inewton, ipicard=ipicard, tolnewton=1e-2, verbose=True, nverbose=True)$/;"	v
pnps3D	scripts/numerics/analyticalPNPS.py	/^pnps3D = CoupledSolver(problem, goals=[J], damp=damp, inewton=1, ipicard=30, tolnewton=1e-2)$/;"	v
pnpsH	scripts/numerics/test_fixedpoint.py	/^pnpsH = PNPSHybrid(geo, phys, cyl=True, beta=beta, damp=damp, ku=ku,$/;"	v
pnpsN	scripts/numerics/hybrid_vs_newton.py	/^pnpsN = NonlinearPDE(geo, SimplePNPSProblem, phys=phys, cyl=True, beta=beta, ku=ku)$/;"	v
pnpsN	scripts/numerics/test_fixedpoint.py	/^pnpsN = NonlinearPDE(geo, SimplePNPSProblem, phys=phys, cyl=True, beta=beta, ku=ku)$/;"	v
point_radial_tol_unique_count	scripts/finfet/collocation_methods/point_radial_tol_unique_count.m	/^function [ unique_num, seed ] = point_radial_tol_unique_count ( m, n, a, ...$/;"	f
point_radial_tol_unique_index	scripts/finfet/collocation_methods/point_radial_tol_unique_index.m	/^function [ unique_num, undx, xdnu, seed ] = point_radial_tol_unique_index ( ...$/;"	f
point_unique_index	scripts/finfet/collocation_methods/point_unique_index.m	/^function [ undx, xdnu ] = point_unique_index ( m, n, a, unique_num )$/;"	f
points	scripts/howorka/interpolation_points.py	/^def points(h, hout, r0, r, l0, Rx, Ry):$/;"	f
poisson	nanopores/tools/solvermethods.py	/^poisson = dict($/;"	v
poisson_indicator	nanopores/tools/errorest.py	/^def poisson_indicator(geo, u, f=None, cyl=False):$/;"	f
poly	scripts/howorka/plot_forcefield.py	/^    poly = Howorka.polygon()$/;"	v
poly	scripts/howorka/test_forcefields.py	/^poly=Howorka.polygon()$/;"	v
polygon	nanopores/models/Howorka.py	/^def polygon(rMem = 20.):$/;"	f
polygonchain	nanopores/geometries/Nanowire/py4geo.py	/^def polygonchain(*sequence):$/;"	f
pore	nanopores/physics/pore.py	/^    pore = "DPore",$/;"	v
pore	nanopores/physics/pore.py	/^    pore = "permPore",$/;"	v
pore	nanopores/physics/pore_molecule.py	/^    pore = "permPore",$/;"	v
pore	scripts/analytical_test_case.py	/^    pore = "fluid",$/;"	v
pore	scripts/howorka/largepore.py	/^    pore = pore,$/;"	v
pore	scripts/howorka/largepore.py	/^pore = Box(center=cdna, l=rpore, w=rpore, h=hdna)$/;"	v
pore	scripts/howorka/largepore_dna.py	/^    pore = pore,$/;"	v
pore	scripts/howorka/largepore_dna.py	/^pore = enter_1 | enter_2 | enter_3$/;"	v
pore	scripts/numerics/anaPNPS_refinement.py	/^    pore = "fluid",$/;"	v
pore	scripts/numerics/anaPNPS_refinement_2D.py	/^    pore = "fluid",$/;"	v
pore	scripts/numerics/anaPNPS_uniform.py	/^    pore = "fluid",$/;"	v
pore	scripts/numerics/analyticalPNPS.py	/^    pore = "fluid",$/;"	v
pore	scripts/numerics/analyticalPNPS_2D.py	/^    pore = "fluid",$/;"	v
pore	scripts/numerics/analyticalPNPS_3D.py	/^    pore = "fluid",$/;"	v
pore	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    pore = "fluid",$/;"	v
pore	scripts/numerics/analyticalPNP_3D.py	/^    pore = "fluid",$/;"	v
pore	scripts/numerics/selectivity1D.py	/^    pore = pore,$/;"	v
pore	scripts/numerics/selectivity1D.py	/^pore = Interval(-h, h)$/;"	v
pore	scripts/numerics/test_fixedpoint_1D.py	/^    pore = set()$/;"	v
pore	scripts/test_axisym.py	/^pore = poretop | porecenter | porebottom$/;"	v
pore	scripts/test_box.py	/^pore = poretop | porecenter | porebottom$/;"	v
pore	scripts/toy_models/pnp1D.py	/^    pore = set()$/;"	v
porebottom	scripts/test_axisym.py	/^    porebottom = porebottom,$/;"	v
porebottom	scripts/test_axisym.py	/^porebottom = Box([0, -l0\/2], [r0, -l1\/2])$/;"	v
porebottom	scripts/test_box.py	/^    porebottom = porebottom,$/;"	v
porebottom	scripts/test_box.py	/^porebottom = Box([0, -l0\/2], [r0, -l1\/2])$/;"	v
porecenter	scripts/test_axisym.py	/^    porecenter = porecenter,$/;"	v
porecenter	scripts/test_axisym.py	/^porecenter = Box([0, -l1\/2], [r0, l1\/2])$/;"	v
porecenter	scripts/test_box.py	/^    porecenter = porecenter,$/;"	v
porecenter	scripts/test_box.py	/^porecenter = Box([0, -l1\/2], [r0, l1\/2])$/;"	v
porestreamlines	scripts/howorka/plot_forcefield.py	/^def porestreamlines(polygon=None, rx=10., ry=10., Nx=100, Ny=100,$/;"	f
porestreamlines	scripts/howorka/test_forcefields.py	/^def porestreamlines(polygon=None, rx=10., ry=10., Nx=100, Ny=100,$/;"	f
poretop	scripts/test_axisym.py	/^    poretop = poretop,$/;"	v
poretop	scripts/test_axisym.py	/^poretop = Box([0, l1\/2], [r0, l0\/2])$/;"	v
poretop	scripts/test_box.py	/^    poretop = poretop,$/;"	v
poretop	scripts/test_box.py	/^poretop = Box([0, l1\/2], [r0, l0\/2])$/;"	v
post_iteration	nanopores/scripts/simulation2D.py	/^def post_iteration(result, stamp, showplot=False):$/;"	f
post_plot	scripts/numerics/force_profiles.py	/^def post_plot():$/;"	f
preadapt	scripts/numerics/adap3D.py	/^preadapt = False,$/;"	v
precalculate	nanopores/tools/physicsclass.py	/^    def precalculate(self, mod):$/;"	m	class:Physics
precondition	nanopores/physics/simplepnps.py	/^    def precondition(self, geo, **kwargs):$/;"	m	class:SimpleStokesProblem
preconditioner	nanopores/physics/exittime.py	/^            preconditioner = dict($/;"	v	class:ExitTimeProblem
preconditioner	nanopores/physics/exittime.py	/^            preconditioner = dict($/;"	v	class:SurvivalProblem
preconditioner	nanopores/physics/pb.py	/^            preconditioner = dict($/;"	v	class:LinearNonstandardPBProblem
preconditioner	nanopores/physics/pb.py	/^            preconditioner = dict($/;"	v	class:NonstandardPBProblem
preconditioner	nanopores/physics/pnps.py	/^            preconditioner = dict($/;"	v	class:StokesProblem
preconditioner	nanopores/physics/pnps2D.py	/^            preconditioner = dict($/;"	v	class:PNPProblemAxisym
preconditioner	nanopores/physics/pnps2D.py	/^            preconditioner = dict($/;"	v	class:StokesProblemAxisym
preconditioner	nanopores/physics/pnps2Dnewton.py	/^            preconditioner = dict($/;"	v	class:PNPSProblemAxisym
preconditioner	nanopores/physics/poisson.py	/^            preconditioner = dict($/;"	v	class:PoissonProblem
preconditioner	nanopores/tools/solvermethods.py	/^        preconditioner = dict($/;"	v
prerefine	nanopores/models/pughpore.py	/^def prerefine(setup, visualize=False, mesh2D=None):$/;"	f
prerefine	nanopores/physics/pnps2D.py	/^    def prerefine(geo, phys, N=None):$/;"	m	class:PNPSAxisym
pressure	nanopores/physics/electrolyte.py	/^pressure = dict(nopressure = 0.)$/;"	v
pressure	scripts/numerics/anaPNPS_refinement.py	/^    pressure = dict(bulk = pPBEx()),$/;"	v
pressure	scripts/numerics/anaPNPS_refinement_2D.py	/^    pressure = dict(bulk = pPBEx()),$/;"	v
pressure	scripts/numerics/anaPNPS_uniform.py	/^    pressure = dict(bulk = pPBEx()),$/;"	v
pressure	scripts/numerics/analyticalPNPS.py	/^    pressure = dict(bulk = pPBEx()),$/;"	v
pressure	scripts/numerics/analyticalPNPS_3D.py	/^    pressure = dict(bulk = pPBEx()),$/;"	v
pressure	scripts/numerics/analyticalPNP_3D.py	/^    pressure = dict(bulk = pPBEx()),$/;"	v
print_functionals	nanopores/physics/pnps.py	/^    def print_functionals(self):$/;"	m	class:PNPS
print_functionals	nanopores/physics/pnps.py	/^    def print_functionals(self, name="goal"):$/;"	m	class:LinearPBGoalOriented
print_functionals	nanopores/physics/pnps2D.py	/^    def print_functionals(self):$/;"	m	class:PNPSAxisym
print_functionals	nanopores/physics/pnps2D.py	/^    def print_functionals(self, name="goal"):$/;"	m	class:LinearPBAxisymGoalOriented
print_functionals	nanopores/physics/pnps2Dnewton.py	/^    def print_functionals(self):$/;"	m	class:PNPSAxisymNewton
print_functionals	nanopores/tools/pdesystem.py	/^    def print_functionals(self):$/;"	m	class:PDESystem
print_method	nanopores/tools/illposed.py	/^    def print_method(self):$/;"	m	class:IllposedLinearSolver
print_results	nanopores/physics/pnps.py	/^    def print_results(self):$/;"	m	class:PNPS
print_results	nanopores/physics/pnps2D.py	/^    def print_results(self, names=None):$/;"	m	class:PNPSAxisym
print_results	nanopores/physics/pnps2Dnewton.py	/^    def print_results(self, names=None):$/;"	m	class:PNPSAxisymNewton
print_results	nanopores/tools/pdesystem.py	/^    def print_results(self, names=None):$/;"	m	class:PDESystem
printnow	nanopores/tools/box.py	/^def printnow(s):$/;"	f
printv	nanopores/physics/simplepnps.py	/^        def printv(*strgs):$/;"	f	function:SimpleLinearPBGO.adaptive_loop
problem	scripts/analytical_test_case.py	/^problem = SimplePNPProblem(geo2D, phys, cyl=True, newtondamp=0.8, bcs=bcs)$/;"	v
problem	scripts/numerics/anaPNPS_refinement.py	/^problem = CoupledProblem(problems, couplers, geo2D, phys2D, cyl=True, conservative=False, ku=1, beta=10.)$/;"	v
problem	scripts/numerics/anaPNPS_refinement.py	/^problem = CoupledProblem(problems, couplers, geo3D, phys3D, cyl=False, conservative=False, ku=1, beta=1.)$/;"	v
problem	scripts/numerics/anaPNPS_refinement_2D.py	/^problem = CoupledProblem(problems, couplers, geo2D, phys2D, cyl=True, conservative=False, ku=1, beta=10.)$/;"	v
problem	scripts/numerics/analyticalPNPS.py	/^problem = CoupledProblem(problems, couplers, geo2D, phys2D, cyl=True, conservative=False, ku=1, beta=10.)$/;"	v
problem	scripts/numerics/analyticalPNPS.py	/^problem = CoupledProblem(problems, couplers, geo3D, phys3D, cyl=False, conservative=False, ku=1, beta=1.)$/;"	v
problem	scripts/numerics/analyticalPNPS_2D.py	/^problem = CoupledProblem(problems, couplers, geo2D, phys, cyl=True, conservative=False, ku=1, beta=10.)$/;"	v
problem	scripts/numerics/analyticalPNPS_3D.py	/^problem = CoupledProblem(problems, couplers, geo3D, phys, cyl=False, conservative=False, ku=1, beta=1.)$/;"	v
problems	scripts/numerics/anaPNPS_refinement.py	/^problems = OrderedDict([$/;"	v
problems	scripts/numerics/anaPNPS_refinement_2D.py	/^problems = OrderedDict([$/;"	v
problems	scripts/numerics/anaPNPS_uniform.py	/^problems = OrderedDict([$/;"	v
problems	scripts/numerics/analyticalPNPS.py	/^problems = OrderedDict([$/;"	v
problems	scripts/numerics/analyticalPNPS_2D.py	/^problems = OrderedDict([$/;"	v
problems	scripts/numerics/analyticalPNPS_3D.py	/^problems = OrderedDict([$/;"	v
product_mixed_weight	scripts/finfet/collocation_methods/product_mixed_weight.m	/^function weight_nd = product_mixed_weight ( dim_num, order_1d, order_nd, ...$/;"	f
prop	scripts/random_walk_aHem/look_at_arrays.py	/^prop=float(counter[0])\/float(np.sum(counter))*100$/;"	v
protein	nanopores/physics/pore.py	/^    protein = "permProtein", # for protein pores$/;"	v
protein	nanopores/physics/pore_molecule.py	/^    protein = "permProtein",$/;"	v
ps_qoi	scripts/plot_scripts/script2DWelectrodes.py	/^    ps_qoi = []$/;"	v
pscale	nanopores/physics/electrolyte.py	/^pscale = 1e7 # scaling of pressure$/;"	v
psteady	scripts/survival.py	/^psteady = steadysurv.solution$/;"	v
purge	nanopores/tools/fields.py	/^def purge(name, **params):$/;"	f
pwBC	nanopores/tools/geometry.py	/^    def pwBC(self, V, string, homogenize=False, value=None):$/;"	m	class:Geometry
pwconst	nanopores/tools/geometry.py	/^    def pwconst(self, string, value=None, DG=True): #TODO: should also work as in docstring$/;"	m	class:Geometry
pwconstBC	nanopores/tools/geometry.py	/^    def pwconstBC(self, V, string, homogenize=False, value=None):$/;"	m	class:Geometry
q	nanopores/scripts/calculate_forces.py	/^q = -2. # [q*C]$/;"	v
q	scripts/debug.py	/^q = -3,$/;"	v
q	scripts/misc/chargeDNA.py	/^q = 1. # positive elementary charge [q] = 1.602e-19 [C]$/;"	v
q	scripts/numerics/implicit_vs_explicit.py	/^q = phys.qq$/;"	v
qTarget	nanopores/models/Howorka.py	/^qTarget = Qmol*qq,$/;"	v
qTarget	nanopores/physics/howorka.py	/^def qTarget(Qmol, qq):$/;"	f
qTarget	nanopores/physics/pore_mol.py	/^qTarget = Qmolq$/;"	v
qTarget	nanopores/physics/pore_molecule.py	/^def qTarget(Qmol):$/;"	f
qTarget	scripts/numerics/Howorka.py	/^qTarget = Qmol*qq,$/;"	v
qdict	scripts/plot_scripts/script3DW.py	/^qdict = dict($/;"	v
qdict	scripts/test.py	/^qdict = dict($/;"	v
ql	scripts/misc/chargeDNA.py	/^ql = bpq\/distbp # line charge$/;"	v
qoi	scripts/test2DP.py	/^qoi = [adddict["N"], adddict["hmin"], pnps.get_functionals()["Feff"]]$/;"	v
qoidict	scripts/plot_scripts/script2DWelectrodes.py	/^qoidict = {}$/;"	v
qois	scripts/plot_scripts/script2DWelectrodes.py	/^qois = "Javg"  # quantity of interest$/;"	v
qq	nanopores/physics/params_physical.py	/^qq = 1.602e-19  # positive elementary charge [C]$/;"	v
qs	scripts/numerics/linear-robust.py	/^qs = [0.1, 0.25, 0.5, 1., 2.]$/;"	v
qs	scripts/numerics/plot_robustness.py	/^qs = [0.1, 0.25, 0.5, 1., 2.]$/;"	v
qsCircle	scripts/misc/chargeDNA.py	/^qsCircle = ql\/(2.*pi*rDNA) # circular model$/;"	v
qsSquare	scripts/misc/chargeDNA.py	/^qsSquare = ql\/(8.*rDNA) # square model$/;"	v
qssim	scripts/plot_scripts/IV_ahem.py	/^    qssim = numpy.asarray(args["ahemqs"])*1e3$/;"	v
quality	scripts/finfet/collocation_methods/quality.m	/^function q = quality(p,t)$/;"	f
r	nanopores/geometries/Cyl2D/params_geo.py	/^r = 6*nm$/;"	v
r	nanopores/geometries/curved.py	/^    def r(self, x):$/;"	m	class:Circle
r	nanopores/geometries/curved.py	/^    def r(self, x):$/;"	m	class:Cylinder
r	nanopores/geometries/curved.py	/^    def r(self, x):$/;"	m	class:Sphere
r	nanopores/physics/pore_dna.py	/^def r(geo):$/;"	f
r	nanopores/scripts/calculate_forces.py	/^r = 0.55 # [nm]$/;"	v
r	scripts/debug.py	/^r = 0.4,$/;"	v
r	scripts/howorka/HoworkaTools.py	/^r = 1. # radius of spherical region where molecules start [nm]$/;"	v
r	scripts/howorka/test_forcefields.py	/^r = rMolecule$/;"	v
r	scripts/howorka/video.py	/^r = 1. # radius of spherical region where molecules start [nm]$/;"	v
r	scripts/numerics/adap2Dref.py	/^    r = geo.params["rMolecule"]$/;"	v
r	scripts/numerics/anaPNPS_refinement.py	/^def r(x): # radius for 2D AND 3D:$/;"	f
r	scripts/numerics/anaPNPS_refinement_2D.py	/^def r(x): # radius for 2D AND 3D:$/;"	f
r	scripts/numerics/anaPNPS_uniform.py	/^def r(x): # radius for 2D AND 3D:$/;"	f
r	scripts/numerics/analyticalPNPS.py	/^def r(x): # radius for 2D AND 3D:$/;"	f
r	scripts/numerics/analyticalPNPS_3D.py	/^def r(x):$/;"	f
r	scripts/numerics/analyticalPNP_3D.py	/^def r(x):$/;"	f
r	scripts/plot_scripts/IV_ahem.py	/^r = 1\/Gminf - R  # [G Ohm]$/;"	v
r	scripts/stokes_law/stokes_law.py	/^r = 1*l   # particle radius [m]$/;"	v
r	scripts/stokes_law/stokes_law_2D_stats.py	/^r = 1*l   # particle radius [m]$/;"	v
r	scripts/test2D.py	/^    r = geo.params["rMolecule"]$/;"	v
r	scripts/test2Dold.py	/^    r = geo.params["rMolecule"]$/;"	v
r	scripts/test3D_GOA.py	/^    r = geo.params["rMolecule"]$/;"	v
r0	nanopores/geometries/H_cyl_geo/params_geo.py	/^r0 = 1.*nm$/;"	v
r0	nanopores/geometries/H_cyl_geo/params_geo_old.py	/^r0 = 1.*nm$/;"	v
r0	nanopores/geometries/H_geo/params_geo.py	/^r0 = 1.*nm$/;"	v
r0	nanopores/geometries/H_geo/params_geo_old.py	/^r0 = 1*nm$/;"	v
r0	nanopores/geometries/P_geo/params_geo.py	/^r0=5*nm$/;"	v
r0	nanopores/geometries/W_2D_geo/params_geo.py	/^r0 = 13*nm$/;"	v
r0	nanopores/geometries/W_3D_geo/params_geo.py	/^r0 = 13*nm$/;"	v
r0	nanopores/geometries/aHem/params_geo.py	/^r0 = 1.1*nm$/;"	v
r0	nanopores/scripts/ahemFPT.py	/^r0 = 5.$/;"	v
r0	nanopores/scripts/ahemIV.py	/^r0 = 5.$/;"	v
r0	nanopores/scripts/test_geometry_3D.py	/^r0 = 1*nm,$/;"	v
r0	nanopores/scripts/test_survival.py	/^r0 = math.sqrt(sum(x**2 for x in x0))$/;"	v
r0	scripts/numerics/adap3Dpb.py	/^r0 = geo.params["r0"]$/;"	v
r0	scripts/numerics/selectivity1D.py	/^r0 = Howorka.params_geo.r0$/;"	v
r0	scripts/params_nice_2D.py	/^r0 = 2*nm #1.1*rDNA$/;"	v
r0	scripts/plot_scripts/PMF_Profile_2D.py	/^r0 = 1*nm,$/;"	v
r0	scripts/plot_scripts/current_trace_2D.py	/^r0 = 1.2*nm,$/;"	v
r0	scripts/plot_scripts/parameter_script.py	/^r0 = 5.,$/;"	v
r0	scripts/survival.py	/^r0 = math.sqrt(sum(x**2 for x in x0))$/;"	v
r0	scripts/test.py	/^r0 = 1.*nm,$/;"	v
r0	scripts/test2DP.py	/^r0 = 3*nm$/;"	v
r0	scripts/test_ahem.py	/^r0 = math.sqrt(sum(x**2 for x in x0))$/;"	v
r0	scripts/test_axisym.py	/^r0 = 1.$/;"	v
r0factor	scripts/plot_scripts/script2DW.py	/^r0factor = 1.25$/;"	v
r1	nanopores/geometries/H_cyl_geo/params_geo.py	/^r1 = 2.5*nm$/;"	v
r1	nanopores/geometries/H_cyl_geo/params_geo_old.py	/^r1 = 2.5*nm$/;"	v
r1	nanopores/geometries/H_geo/params_geo.py	/^r1 = 2.5*nm$/;"	v
r1	nanopores/geometries/H_geo/params_geo_old.py	/^r1 = 2.5*nm$/;"	v
r1	nanopores/geometries/P_geo/params_geo.py	/^r1=20*nm$/;"	v
r1	nanopores/geometries/aHem/params_geo.py	/^r1 = 1.3*nm$/;"	v
r1	scripts/params_nice_2D.py	/^r1 = r0 + 2*rDNA #2.75*nm$/;"	v
r1	scripts/test_axisym.py	/^r1 = 2.5$/;"	v
r2	nanopores/geometries/aHem/params_geo.py	/^r2 = 1.7*nm$/;"	v
r2pi	nanopores/physics/default.py	/^def r2pi(cyl):$/;"	f
r2pi	nanopores/physics/howorka.py	/^def r2pi(geo, dim):$/;"	f
r2pi	nanopores/physics/pore_molecule.py	/^def r2pi(geo, dim):$/;"	f
r2pi	scripts/analytical_test_case.py	/^r2pi = Expression("2*pi*x[0]")$/;"	v
r2pi	scripts/numerics/anaPNPS_refinement.py	/^r2pi = Expression("2*pi*x[0]")$/;"	v
r2pi	scripts/numerics/anaPNPS_refinement_2D.py	/^r2pi = Expression("2*pi*x[0]")$/;"	v
r2pi	scripts/numerics/anaPNPS_uniform.py	/^r2pi = Expression("2*pi*x[0]")$/;"	v
r2pi	scripts/numerics/analyticalPNPS.py	/^r2pi = Expression("2*pi*x[0]")$/;"	v
r2pi	scripts/numerics/analyticalPNPS_2D.py	/^r2pi = Expression("2*pi*x[0]")$/;"	v
r2pi	scripts/numerics/analyticalPNPS_3D.py	/^r2pi = Expression("2*pi*x[0]")$/;"	v
r2pi	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^r2pi = Expression("2*pi*x[0]")$/;"	v
r2pi	scripts/numerics/analyticalPNP_3D.py	/^r2pi = Expression("2*pi*x[0]")$/;"	v
r2pi	scripts/stokes_law/stokes_law.py	/^r2pi = Expression("2*pi*x[0]")$/;"	v
r3	nanopores/geometries/aHem/params_geo.py	/^r3 = 4.2*nm$/;"	v
r8_ceiling	scripts/finfet/collocation_methods/r8_ceiling.m	/^function value = r8_ceiling ( x )$/;"	f
r8_choose	scripts/finfet/collocation_methods/r8_choose.m	/^function value = r8_choose ( n, k )$/;"	f
r8_epsilon	scripts/finfet/collocation_methods/r8_epsilon.m	/^function value = r8_epsilon ( )$/;"	f
r8_factorial	scripts/finfet/collocation_methods/r8_factorial.m	/^function value = r8_factorial ( n )$/;"	f
r8_factorial2	scripts/finfet/collocation_methods/r8_factorial2.m	/^function value = r8_factorial2 ( n )$/;"	f
r8_floor	scripts/finfet/collocation_methods/r8_floor.m	/^function value = r8_floor ( x )$/;"	f
r8_huge	scripts/finfet/collocation_methods/r8_huge.m	/^function value = r8_huge ( )$/;"	f
r8_hyper_2f1	scripts/finfet/collocation_methods/r8_hyper_2f1.m	/^function hf = r8_hyper_2f1 ( a, b, c, x )$/;"	f
r8_mop	scripts/finfet/collocation_methods/r8_mop.m	/^function value = r8_mop ( i )$/;"	f
r8_psi	scripts/finfet/collocation_methods/r8_psi.m	/^function value = r8_psi ( xx )$/;"	f
r8_sign	scripts/finfet/collocation_methods/r8_sign.m	/^function value = r8_sign ( x )$/;"	f
r8col_compare	scripts/finfet/collocation_methods/r8col_compare.m	/^function isgn = r8col_compare ( m, n, a, i, j )$/;"	f
r8col_sort_heap_a	scripts/finfet/collocation_methods/r8col_sort_heap_a.m	/^function a = r8col_sort_heap_a ( m, n, a )$/;"	f
r8col_sort_heap_index_a	scripts/finfet/collocation_methods/r8col_sort_heap_index_a.m	/^function indx = r8col_sort_heap_index_a ( m, n, a )$/;"	f
r8col_sorted_unique_count	scripts/finfet/collocation_methods/r8col_sorted_unique_count.m	/^function unique_num = r8col_sorted_unique_count ( m, n, a, tol )$/;"	f
r8col_swap	scripts/finfet/collocation_methods/r8col_swap.m	/^function a = r8col_swap ( m, n, a, i, j )$/;"	f
r8col_tol_undex	scripts/finfet/collocation_methods/r8col_tol_undex.m	/^function [ undx, xdnu ] = r8col_tol_undex ( m, n, a, unique_num, tol )$/;"	f
r8col_tol_unique_count	scripts/finfet/collocation_methods/r8col_tol_unique_count.m	/^function unique_num = r8col_tol_unique_count ( m, n, a, tol )$/;"	f
r8col_undex	scripts/finfet/collocation_methods/r8col_undex.m	/^function [ undx, xdnu ] = r8col_undex ( x_dim, x_num, x_val, x_unique_num, tol )$/;"	f
r8col_unique_index	scripts/finfet/collocation_methods/r8col_unique_index.m	/^function unique_index = r8col_unique_index ( m, n, a, tol )$/;"	f
r8mat_transpose_print	scripts/finfet/collocation_methods/r8mat_transpose_print.m	/^function r8mat_transpose_print ( m, n, a, title )$/;"	f
r8mat_transpose_print_some	scripts/finfet/collocation_methods/r8mat_transpose_print_some.m	/^function r8mat_transpose_print_some ( m, n, a, ilo, jlo, ihi, jhi, title )$/;"	f
r8mat_write	scripts/finfet/collocation_methods/r8mat_write.m	/^function r8mat_write ( output_filename, m, n, table )$/;"	f
r8poly_ant_val	scripts/finfet/collocation_methods/r8poly_ant_val.m	/^function yval = r8poly_ant_val ( n, poly_cof, xval )$/;"	f
r8vec_chebyshev	scripts/finfet/collocation_methods/r8vec_chebyshev.m	/^function a = r8vec_chebyshev ( n, a_first, a_last )$/;"	f
r8vec_compare	scripts/finfet/collocation_methods/r8vec_compare.m	/^function isgn = r8vec_compare ( n, a1, a2 )$/;"	f
r8vec_direct_product2	scripts/finfet/collocation_methods/r8vec_direct_product2.m	/^function w = r8vec_direct_product2 ( factor_index, factor_order, ...$/;"	f
r8vec_index_sorted_range	scripts/finfet/collocation_methods/r8vec_index_sorted_range.m	/^function [ i_lo, i_hi ] = r8vec_index_sorted_range ( n, r, indx, r_lo, r_hi )$/;"	f
r8vec_legendre	scripts/finfet/collocation_methods/r8vec_legendre.m	/^function x = r8vec_legendre ( n, x_first, x_last )$/;"	f
r8vec_min_pos	scripts/finfet/collocation_methods/r8vec_min_pos.m	/^function value = r8vec_min_pos ( n, a )$/;"	f
r8vec_print	scripts/finfet/collocation_methods/r8vec_print.m	/^function r8vec_print ( n, a, title )$/;"	f
r8vec_sort_heap_index_a	scripts/finfet/collocation_methods/r8vec_sort_heap_index_a.m	/^function indx = r8vec_sort_heap_index_a ( n, a )$/;"	f
r8vec_uniform_01	scripts/finfet/collocation_methods/r8vec_uniform_01.m	/^function [ r, seed ] = r8vec_uniform_01 ( n, seed )$/;"	f
rDNA	nanopores/geometries/H_cyl_geo/params_geo.py	/^rDNA = 1.1*nm$/;"	v
rDNA	nanopores/geometries/H_cyl_geo/params_geo_old.py	/^rDNA = 1.1*nm$/;"	v
rDNA	nanopores/geometries/H_geo/params_geo.py	/^rDNA = 1.1*nm$/;"	v
rDNA	nanopores/geometries/H_geo/params_geo_old.py	/^rDNA = 1.1*nm$/;"	v
rDNA	scripts/misc/chargeDNA.py	/^rDNA = 1.25*nm # dsDNA radius$/;"	v
rDNA	scripts/params_nice_2D.py	/^rDNA = 1.1*nm$/;"	v
rDPore	nanopores/models/pughpore.py	/^    rDPore = 1.,$/;"	v
rDPore	nanopores/physics/howorka.py	/^rDPore = 0.5$/;"	v
rDPore	nanopores/physics/pore.py	/^rDPore = 0.5$/;"	v
rDPore	nanopores/physics/pore_dna.py	/^rDPore = 0.5$/;"	v
rDPore	nanopores/physics/pore_molecule.py	/^rDPore = 0.5$/;"	v
rDPore	scripts/plot_scripts/IV_ahem.py	/^    rDPore = 0.25, # list(numpy.linspace(0.2, 0.3, 5)),$/;"	v
rDtargetPore	nanopores/physics/howorka.py	/^rDtargetPore = 1.$/;"	v
rDtargetPore	nanopores/physics/pore_molecule.py	/^rDtargetPore = 1.$/;"	v
rMolecule	nanopores/geometries/H_cyl_geo/params_geo.py	/^rMolecule = 0.5*nm$/;"	v
rMolecule	nanopores/geometries/H_cyl_geo/params_geo_old.py	/^rMolecule = 0.5*nm$/;"	v
rMolecule	nanopores/geometries/H_geo/params_geo.py	/^rMolecule = 0.5*nm$/;"	v
rMolecule	nanopores/geometries/H_geo/params_geo_old.py	/^rMolecule = 0.5*nm$/;"	v
rMolecule	nanopores/geometries/W_2D_geo/params_geo.py	/^rMolecule = 5*nm$/;"	v
rMolecule	nanopores/geometries/W_3D_geo/params_geo.py	/^rMolecule = 5*nm$/;"	v
rMolecule	nanopores/geometries/aHem/params_geo.py	/^rMolecule = 2.2*nm$/;"	v
rMolecule	nanopores/geometries/pughpore.py	/^    rMolecule = 2.0779, # molecular radius of protein trypsin$/;"	v
rMolecule	nanopores/models/Howorka.py	/^rMolecule = 0.5,$/;"	v
rMolecule	nanopores/models/Howorka.py	/^rMolecule = rMolecule*nm,$/;"	v
rMolecule	nanopores/models/Howorka.py	/^rMolecule = rMolecule*nm3D,$/;"	v
rMolecule	nanopores/models/HoworkaSimple.py	/^rMolecule = 0.5*nm,$/;"	v
rMolecule	nanopores/scripts/calculate_forces.py	/^rMolecule = 0.55*nm,$/;"	v
rMolecule	nanopores/scripts/test_geometry_3D.py	/^rMolecule = 0.55*nm,$/;"	v
rMolecule	scripts/howorka/forcefield2D.py	/^    rMolecule = 0.5,$/;"	v
rMolecule	scripts/howorka/forcefield2D.py	/^    rMolecule = rMolecule,$/;"	v
rMolecule	scripts/howorka/forcefield3D.py	/^    rMolecule = 0.5,$/;"	v
rMolecule	scripts/howorka/forcefield3D.py	/^    rMolecule = rMolecule,$/;"	v
rMolecule	scripts/howorka/forcefields.py	/^    rMolecule = 0.5,$/;"	v
rMolecule	scripts/howorka/largepore_dna.py	/^rMolecule = 2.$/;"	v
rMolecule	scripts/howorka/selectivity.py	/^    rMolecule = 0.5,$/;"	v
rMolecule	scripts/howorka/selectivity.py	/^    rMolecule = p.rMolecule,$/;"	v
rMolecule	scripts/numerics/H3Dgeometry.py	/^rMolecule = 0.5*nm,$/;"	v
rMolecule	scripts/numerics/H3Drefine.py	/^rMolecule = nm*0.5,$/;"	v
rMolecule	scripts/numerics/Howorka.py	/^rMolecule = 0.5,$/;"	v
rMolecule	scripts/numerics/Howorka.py	/^rMolecule = rMolecule*nm,$/;"	v
rMolecule	scripts/numerics/HoworkaSimple.py	/^rMolecule = 0.5*nm,$/;"	v
rMolecule	scripts/numerics/adap2D.py	/^rMolecule = 0.5*nm,$/;"	v
rMolecule	scripts/numerics/adap2Dpb.py	/^rMolecule = 0.5*nm,$/;"	v
rMolecule	scripts/numerics/adap2Dref.py	/^rMolecule = 0.5*nm,$/;"	v
rMolecule	scripts/numerics/adap3D.py	/^rMolecule = 0.5*nm,$/;"	v
rMolecule	scripts/numerics/adap3Dpb.py	/^rMolecule = 0.5*nm,$/;"	v
rMolecule	scripts/numerics/adap3Dref.py	/^rMolecule = 0.5*nm,$/;"	v
rMolecule	scripts/numerics/force_profiles.py	/^rMolecule = 0.5,$/;"	v
rMolecule	scripts/params_nice_2D.py	/^rMolecule = 0.5*nm$/;"	v
rMolecule	scripts/plot_scripts/PMF_Profile_2D.py	/^rMolecule = 0.4*nm,$/;"	v
rMolecule	scripts/plot_scripts/current_trace_2D.py	/^rMolecule = 0.77*nm,$/;"	v
rMolecule	scripts/pughpore/diffusion.py	/^    rMolecule = 0.152, # radius of K+$/;"	v
rMolecule	scripts/pughpore/randomwalk/run.py	/^rMolecule = geop.rMolecule$/;"	v
rMolecule	scripts/pughpore/sobol_points.py	/^rMolecule = up.rMolecule$/;"	v
rMolecule	scripts/survival.py	/^    rMolecule = 2.2,$/;"	v
rMolecule	scripts/test.py	/^rMolecule = 0.4*nm,$/;"	v
rMolecule	scripts/test2D.py	/^rMolecule = 0.5*nm,$/;"	v
rMolecule	scripts/test2Dold.py	/^rMolecule = 0.4*nm,$/;"	v
rMolecule	scripts/test3D_GOA.py	/^rMolecule = 0.55*nm,$/;"	v
rTarget	nanopores/models/Howorka.py	/^rTarget = rMolecule*1e-9$/;"	v
rTarget	nanopores/physics/howorka.py	/^def rTarget(geo, lscale):$/;"	f
rTarget	nanopores/physics/pore_mol.py	/^def rTarget(geo, lscale):$/;"	f
rTarget	nanopores/physics/pore_molecule.py	/^def rTarget(geo, lscale):$/;"	f
rTarget	nanopores/scripts/ahemFPT.py	/^rTarget = 0.5e-9 # [m] for diffusion coeff.$/;"	v
rTarget	nanopores/scripts/ahemIV.py	/^rTarget = 0.5e-9 # [m] for diffusion coeff.$/;"	v
rTarget	nanopores/scripts/test_survival.py	/^    rTarget = 0.5*nm,$/;"	v
rTarget	scripts/numerics/Howorka.py	/^rTarget = rMolecule*1e-9$/;"	v
rTarget	scripts/survival.py	/^    rTarget = 0.5*nm,$/;"	v
rTarget	scripts/test_ahem.py	/^    rTarget = 0.5*nm,$/;"	v
r_e	scripts/plot_forces_aHem/aHem_array_2d.py	/^r_e = 1. #nm - equilibrium distance$/;"	v
r_e	scripts/random_walk_aHem/aHem_array.py	/^r_e = 1. #nm - equilibrium distance$/;"	v
r_e	scripts/random_walk_aHem/aHem_array_2d.py	/^r_e = 1. #nm - equilibrium distance$/;"	v
r_eff	nanopores/geometries/Nanowire/params_geo.py	/^r_eff = 3*nm$/;"	v
r_eff	scripts/finfet/test_wire.py	/^r_eff = 3 # effective radius [nm]$/;"	v
r_h	scripts/random_walk_aHem/plot_path.py	/^r_h=np.load('r_h.npy')$/;"	v
r_h	scripts/random_walk_aHem/run.py	/^r_h=np.array([])$/;"	v
rad	nanopores/tools/utilities.py	/^    def rad(x, y):$/;"	f	function:convert3D
radius	scripts/plot_forces_How/plot_drag.py	/^def radius(x,y):$/;"	f
radius	scripts/plot_forces_How/plot_el.py	/^def radius(x,y):$/;"	f
radius	scripts/plot_forces_aHem/combine.py	/^def radius(x,y):$/;"	f
radius	scripts/plot_forces_aHem/combine2.py	/^def radius(x,y):$/;"	f
radius	scripts/plot_forces_aHem/plot_drag.py	/^def radius(x,y):$/;"	f
radius	scripts/plot_forces_aHem/plot_el.py	/^def radius(x,y):$/;"	f
radius	scripts/plot_forces_aHem/ppt.py	/^def radius(x,y):$/;"	f
radius	scripts/random_walk_aHem/plot_aHem.py	/^def radius(x,y):$/;"	f
radius	scripts/random_walk_aHem/plot_path.py	/^def radius(x,y):$/;"	f
radius	scripts/random_walk_aHem/run.py	/^def radius(x,y):$/;"	f
ran	scripts/FPTscript.py	/^ran = range(11)$/;"	v
ran	scripts/pughpore/test_ff.py	/^ran = np.linspace(-H\/2.+eps, H\/2.-eps, 48)$/;"	v
random_dopant_positions	scripts/finfet/test_wire.py	/^def random_dopant_positions(N, **params):$/;"	f
rank	nanopores/tools/mpipool.py	/^rank = comm.Get_rank()$/;"	v
rate	scripts/numerics/plot_adaptivity_results.py	/^    rate = -2.\/float(dim[0])$/;"	v
rates	nanopores/tools/errorest.py	/^    def rates(self):$/;"	m	class:Estimator
ratio	scripts/numerics/H3Drefine.py	/^ratio = .1,$/;"	v
ratio	scripts/numerics/adap3D.py	/^ratio = .01,$/;"	v
ratio	scripts/numerics/adap3Dpb.py	/^ratio = .01,$/;"	v
ratio	scripts/numerics/adap3Dref.py	/^ratio = .01,$/;"	v
raw_code	nanopores/py4gmsh/basic.py	/^def raw_code(list_of_strings):$/;"	f
rdna	scripts/howorka/largepore.py	/^rdna = 25$/;"	v
rdop	nanopores/geometries/finfet.py	/^    rdop = rdop,$/;"	v
rdop	nanopores/geometries/finfet.py	/^rdop = 2.$/;"	v
rdop1	scripts/finfet/collocation.py	/^rdop1 = rdop + epsilon$/;"	v
read	nanopores/tools/protocol.py	/^    def read(self):$/;"	m	class:Data
read_dict	nanopores/tools/dictio.py	/^def read_dict(filename):$/;"	f
realize	nanopores/tools/geometry.py	/^    def realize(self, geo):$/;"	m	class:PhysicalBC
rebuild	nanopores/physics/pnps.py	/^    def rebuild(self, mesh):$/;"	m	class:PNPS
rebuild	nanopores/tools/geometry.py	/^    def rebuild(self, othermesh):$/;"	f	function:geo_from_name
rebuild	nanopores/tools/geometry.py	/^    rebuild = adapt$/;"	v	class:Geometry
rebuild	nanopores/tools/pdesystem.py	/^    def rebuild(self, mesh):$/;"	m	class:PDESystem
recompute	nanopores/tools/geometry.py	/^    def recompute(self):$/;"	m	class:GeometricConstant
record_functionals	nanopores/tools/transientpde.py	/^    def record_functionals(self):$/;"	m	class:TransientLinearPDE
recreate_geometry	nanopores/tools/box.py	/^    def recreate_geometry(self):$/;"	m	class:BoxCollection
ref	scripts/numerics/adap2D.py	/^ref = load_Fref()$/;"	v
ref	scripts/numerics/adap2Dpb.py	/^ref = 6.08430894614e+14, #2.66339790473e+12, $/;"	v
ref	scripts/numerics/adap3D.py	/^ref = load_Fref()$/;"	v
ref	scripts/numerics/adap3Dpb.py	/^ref = 6.08430894614e+14, #2.66339790473e+12$/;"	v
ref	scripts/numerics/adap3Dref.py	/^ref = 6.08430894614e+14, #2.66339790473e+12$/;"	v
refine	nanopores/tools/pdesystem.py	/^    def refine(self, ind):$/;"	m	class:PDESystem
refine	scripts/finfet/collocation_methods/refine.m	/^function [p,t,f] = refine(p,t,ti,f)$/;"	f
refine	scripts/numerics/adap2Dref.py	/^refine = False$/;"	v
refine	scripts/test2D.py	/^refine = False #True$/;"	v
refine	scripts/test2Dold.py	/^refine = False #True$/;"	v
refine_mesh	nanopores/tools/pdesystem.py	/^    def refine_mesh(self, ind):$/;"	m	class:PDESystem
refinement	nanopores/scripts/ahemFPT.py	/^refinement = False$/;"	v
refinement	nanopores/scripts/ahemIV.py	/^refinement = False$/;"	v
refinement	scripts/debug.py	/^refinement = False,$/;"	v
rel	scripts/howorka/plot_selectivity.py	/^    rel = results["release"]$/;"	v
rel	scripts/howorka/plot_selectivity_old.py	/^    rel = results["release"]$/;"	v
rel	scripts/howorka/selectivity.py	/^    rel = results.release$/;"	v
relative_tolerance	nanopores/physics/exittime.py	/^            relative_tolerance = 1e-4,$/;"	v	class:ExitTimeProblem
relative_tolerance	nanopores/physics/exittime.py	/^            relative_tolerance = 1e-4,$/;"	v	class:SurvivalProblem
relative_tolerance	nanopores/physics/pb.py	/^            relative_tolerance = 1e-10,$/;"	v	class:NonstandardPBProblem
relative_tolerance	nanopores/physics/pnps.py	/^            relative_tolerance = 1e-8,$/;"	v	class:StokesProblem
relative_tolerance	nanopores/physics/pnps2D.py	/^            relative_tolerance = 1e-2,$/;"	v	class:PNPProblemAxisym
relative_tolerance	nanopores/physics/pnps2D.py	/^            relative_tolerance = 1e-2,$/;"	v	class:StokesProblemAxisym
relative_tolerance	nanopores/physics/pnps2Dnewton.py	/^            relative_tolerance = 1e-2,$/;"	v	class:PNPSProblemAxisym
relative_tolerance	nanopores/physics/poisson.py	/^            relative_tolerance = 1e-4,$/;"	v	class:PoissonProblem
relative_tolerance	nanopores/physics/simplepnps.py	/^        relative_tolerance = 1e-12,$/;"	v	class:SimpleLinearPBProblem
relative_tolerance	nanopores/tools/solvermethods.py	/^        relative_tolerance = 1e-12,$/;"	v
relative_tolerance	nanopores/tools/solvermethods.py	/^        relative_tolerance = 1e-5,$/;"	v
relative_tolerance	nanopores/tools/solvermethods.py	/^        relative_tolerance = 1e-6,$/;"	v
relative_tolerance	nanopores/tools/solvermethods.py	/^        relative_tolerance = 1e-8,$/;"	v
relative_tolerance	scripts/numerics/adap3D.py	/^    relative_tolerance = 1e-5,$/;"	v
relative_tolerance	scripts/numerics/adap3Dref.py	/^    relative_tolerance = 1e-7,$/;"	v
release	scripts/howorka/test_selectivity.py	/^    release = pde.functionals["cbottom"].values,$/;"	v
relerror	nanopores/tools/illposed.py	/^    def relerror(self):$/;"	m	class:Functional
relerror	nanopores/tools/illposed.py	/^    def relerror(self):$/;"	m	class:IllposedNonlinearSolver
rellcwire	nanopores/geometries/Nanowire/params_geo.py	/^rellcwire = 1.\/8$/;"	v
remaining	nanopores/tools/protocol.py	/^    def remaining(self):$/;"	m	class:Data
remove	nanopores/tools/fields.py	/^    def remove(self, name, params):$/;"	m	class:Header
remove	nanopores/tools/fields.py	/^def remove(name, **params):$/;"	f
replace	nanopores/tools/illposed.py	/^    def replace(self,fs,newfs):$/;"	m	class:Functional
replace	nanopores/tools/illposed.py	/^    def replace(self,functions,newfunctions):$/;"	m	class:IllposedLinearSolver
replace_function_in_form	nanopores/tools/illposed.py	/^def replace_function_in_form(form,f,newf):$/;"	f
report	nanopores/physics/pnps2D.py	/^                report = False,$/;"	v	class:StokesProblemAxisym
report	nanopores/tools/solvermethods.py	/^            report = False,$/;"	v
reread	nanopores/tools/fields.py	/^    def reread(self):$/;"	m	class:Header
reservoir	scripts/howorka/largepore.py	/^reservoir = Box(center=cdna, l=R, w=R, h=H)$/;"	v
reservoir	scripts/howorka/largepore_dna.py	/^reservoir = Box(center=zero, l=R, w=R, h=H)$/;"	v
reset	nanopores/tools/protocol.py	/^    def reset(self):$/;"	m	class:Data
reskB	scripts/numerics/test_fixedpoint.py	/^reskB = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss$/;"	v
reskB	scripts/test2Dnewton.py	/^reskB = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss$/;"	v
result	scripts/FPTscript.py	/^result = {'tmolavg': [1.3859278792745953e-05,$/;"	v
result	scripts/pughpore/ff.py	/^result = pugh.F_explicit(X, nproc=6, name="pugh")$/;"	v
results	scripts/howorka/plot_selectivity.py	/^    results = selectivity(**params)$/;"	v
results	scripts/howorka/selectivity.py	/^    results = nanopores.Params(selectivity(**default))$/;"	v
results	scripts/howorka/test_selectivity.py	/^results = dict($/;"	v
reuse	nanopores/physics/exittime.py	/^        reuse = True,$/;"	v	class:ExitTimeProblem
reuse	nanopores/physics/exittime.py	/^        reuse = True,$/;"	v	class:SurvivalProblem
reuse	nanopores/physics/pb.py	/^        reuse = False,$/;"	v	class:NonstandardPBProblem
reuse	nanopores/physics/pb.py	/^        reuse = True,$/;"	v	class:LinearNonstandardPBProblem
reuse	nanopores/physics/pnps.py	/^        reuse = True,$/;"	v	class:StokesProblem
reuse	nanopores/physics/pnps2D.py	/^        reuse = False,$/;"	v	class:PNPProblemAxisym
reuse	nanopores/physics/pnps2D.py	/^        reuse = True,$/;"	v	class:StokesProblemAxisym
reuse	nanopores/physics/pnps2Dnewton.py	/^        reuse = False,$/;"	v	class:PNPSProblemAxisym
reuse	nanopores/physics/poisson.py	/^        reuse = True,$/;"	v	class:PoissonProblem
reuse	nanopores/tools/solvermethods.py	/^    reuse = False,$/;"	v
reuse	nanopores/tools/solvermethods.py	/^    reuse = True,$/;"	v
reuse_factorization	nanopores/physics/exittime.py	/^            reuse_factorization = True,),$/;"	v	class:ExitTimeProblem
reuse_factorization	nanopores/physics/exittime.py	/^            reuse_factorization = True,),$/;"	v	class:SurvivalProblem
reuse_factorization	nanopores/physics/pb.py	/^            reuse_factorization = False,),$/;"	v	class:NonstandardPBProblem
reuse_factorization	nanopores/physics/pb.py	/^            reuse_factorization = True,),$/;"	v	class:LinearNonstandardPBProblem
reuse_factorization	nanopores/physics/pnps.py	/^            reuse_factorization = True,),$/;"	v	class:StokesProblem
reuse_factorization	nanopores/physics/pnps2D.py	/^            reuse_factorization = False,),$/;"	v	class:PNPProblemAxisym
reuse_factorization	nanopores/physics/pnps2D.py	/^            reuse_factorization = True,),$/;"	v	class:StokesProblemAxisym
reuse_factorization	nanopores/physics/pnps2Dnewton.py	/^            reuse_factorization = False,),$/;"	v	class:PNPSProblemAxisym
reuse_factorization	nanopores/physics/poisson.py	/^            reuse_factorization = True,),$/;"	v	class:PoissonProblem
reuse_factorization	nanopores/tools/solvermethods.py	/^        reuse_factorization = False,),$/;"	v
reuse_factorization	nanopores/tools/solvermethods.py	/^        reuse_factorization = True,),$/;"	v
reuse_mesh	nanopores/scripts/ahemFPT.py	/^reuse_mesh = False$/;"	v
reuse_mesh	nanopores/scripts/ahemIV.py	/^reuse_mesh = False$/;"	v
rfar	nanopores/scripts/test_survival.py	/^rfar = r0 + geo.params["rMolecule"]$/;"	v
rfar	scripts/survival.py	/^rfar = r0 + geo.params["rMolecule"]$/;"	v
rfar	scripts/test_ahem.py	/^rfar = r0 + geo.params["rMolecule"]$/;"	v
rform	nanopores/tools/errorest.py	/^    def rform(w):$/;"	f	function:pb_indicator_GO
rform	nanopores/tools/errorest.py	/^    def rform(w):$/;"	f	function:pb_indicator_GO_cheap
rho	nanopores/physics/params_physical.py	/^rho = 1e3 # fluid density [kg\/m^3]$/;"	v
rho	scripts/analytical_test_case.py	/^rho = -0.025 # [C\/m**2]$/;"	v
rho	scripts/numerics/anaPNPS_refinement.py	/^rho = -0.05, # [C\/m**2]$/;"	v
rho	scripts/numerics/anaPNPS_refinement_2D.py	/^rho = -0.05, # [C\/m**2]$/;"	v
rho	scripts/numerics/anaPNPS_uniform.py	/^rho = -0.05, # [C\/m**2]$/;"	v
rho	scripts/numerics/analyticalPNPS.py	/^rho = -0.05, # [C\/m**2]$/;"	v
rho	scripts/numerics/analyticalPNPS_2D.py	/^rho = -0.05, # [C\/m**2]$/;"	v
rho	scripts/numerics/analyticalPNPS_3D.py	/^rho = -0.05, # [C\/m**2]$/;"	v
rho	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^rho = -0.025 # [C\/m**2]$/;"	v
rho	scripts/numerics/analyticalPNP_3D.py	/^rho = -0.05, # [C\/m**2]$/;"	v
rho	scripts/numerics/test_fixedpoint_1D.py	/^rho = -0.0,$/;"	v
rho	scripts/stokes_law/stokes_drag_comparison.py	/^rho = [1.\/x - 1. for x in lam[::-1]]$/;"	v
right	nanopores/tools/box.py	/^    right = 1,$/;"	v
rlau	nanopores/geometries/W_2D_geo/params_geo.py	/^rlau = 10*nm$/;"	v
rlau	nanopores/geometries/W_3D_geo/params_geo.py	/^rlau = 10*nm$/;"	v
rnear	nanopores/scripts/test_survival.py	/^rnear = r0 - geo.params["rMolecule"]$/;"	v
rnear	scripts/survival.py	/^rnear = r0 - geo.params["rMolecule"]$/;"	v
rnear	scripts/test_ahem.py	/^rnear = r0 - geo.params["rMolecule"]$/;"	v
rotate	nanopores/tools/axisym.py	/^def rotate(domain, d=2, nrot=4):$/;"	f
rotate_surfs	nanopores/tools/axisym.py	/^def rotate_surfs(gmsh_entities, subdomains=[], k=2, nrot=4):$/;"	f
rotate_z	nanopores/tools/axisym.py	/^def rotate_z(domain, nrot=4):$/;"	f
rotation_matrix	nanopores/py4gmsh/extra.py	/^def rotation_matrix(u, theta):$/;"	f
rpermAu	nanopores/physics/params_physical.py	/^rpermAu = 6.9  # according to http:\/\/www.mit.edu\/~6.777\/matprops\/gold.htm$/;"	v
rpermDNA	nanopores/physics/params_physical.py	/^rpermDNA = 12.0  # relative permittivity of dsDNA # http:\/\/www.nature.com\/nmat\/journal\/v11\/n9\/pdf\/nmat3369.pdf$/;"	v
rpermLipid	nanopores/physics/params_physical.py	/^rpermLipid = 2.0  # relative permittivity of a lipid bilayer  # @TODO$/;"	v
rpermMol	nanopores/physics/pore_mol.py	/^rpermMol = rpermDNA$/;"	v
rpermPore	nanopores/physics/howorka.py	/^rpermPore = rpermw$/;"	v
rpermPore	nanopores/physics/pore.py	/^rpermPore = rpermw$/;"	v
rpermPore	nanopores/physics/pore_dna.py	/^rpermPore = rpermw$/;"	v
rpermPore	nanopores/physics/pore_molecule.py	/^rpermPore = rpermw$/;"	v
rpermProtein	nanopores/physics/howorka.py	/^rpermProtein = 2. # TODO ?????$/;"	v
rpermProtein	nanopores/physics/pore.py	/^rpermProtein = 2. # TODO ?????$/;"	v
rpermProtein	nanopores/physics/pore_molecule.py	/^rpermProtein = 2. # TODO ?????$/;"	v
rpermSAM	nanopores/physics/params_physical.py	/^rpermSAM = 2.7  # according to Wei sensing$/;"	v
rpermSiN	nanopores/physics/params_physical.py	/^rpermSiN = 7.0  # relative permittivity of SiN (http:\/\/www.iue.tuwien.ac.at\/phd\/quay\/node27.html)$/;"	v
rpermw	nanopores/physics/params_physical.py	/^rpermw = 80.2  # relative permittivity or dielectric constant of water$/;"	v
rpore	scripts/howorka/largepore.py	/^rpore = 22$/;"	v
run	nanopores/tools/solvers.py	/^    def run(x0=None):$/;"	f	function:calculate_forcefield
run	scripts/howorka/ivcurve.py	/^def run(**phys_params):$/;"	f
rzvm	scripts/plot_scripts/script2DWelectrodes.py	/^        rzvm = -Rz$/;"	v
rzvp	scripts/plot_scripts/script2DWelectrodes.py	/^        rzvp = Rz$/;"	v
s	scripts/plot_scripts/PMFplots.py	/^s = "%s\/%s"$/;"	v
s_len_trim	scripts/finfet/collocation_methods/s_len_trim.m	/^function len = s_len_trim ( s )$/;"	f
same_nonzero_pattern	nanopores/physics/exittime.py	/^            same_nonzero_pattern = True,$/;"	v	class:ExitTimeProblem
same_nonzero_pattern	nanopores/physics/exittime.py	/^            same_nonzero_pattern = True,$/;"	v	class:SurvivalProblem
same_nonzero_pattern	nanopores/physics/pb.py	/^            same_nonzero_pattern = True,$/;"	v	class:LinearNonstandardPBProblem
same_nonzero_pattern	nanopores/physics/pb.py	/^            same_nonzero_pattern = True,$/;"	v	class:NonstandardPBProblem
same_nonzero_pattern	nanopores/physics/pnps.py	/^            same_nonzero_pattern = True,$/;"	v	class:StokesProblem
same_nonzero_pattern	nanopores/physics/pnps2D.py	/^            same_nonzero_pattern = False,$/;"	v	class:PNPProblemAxisym
same_nonzero_pattern	nanopores/physics/pnps2D.py	/^            same_nonzero_pattern = True,$/;"	v	class:StokesProblemAxisym
same_nonzero_pattern	nanopores/physics/pnps2Dnewton.py	/^            same_nonzero_pattern = False,$/;"	v	class:PNPSProblemAxisym
same_nonzero_pattern	nanopores/physics/poisson.py	/^            same_nonzero_pattern = True,$/;"	v	class:PoissonProblem
same_nonzero_pattern	nanopores/tools/solvermethods.py	/^        same_nonzero_pattern = True,$/;"	v
samples	scripts/finfet/MLSC.py	/^samples = []$/;"	v
save	nanopores/geo2xml.py	/^def save(data, dir=".", name="file"):$/;"	f
save	nanopores/tools/fields.py	/^    def save(self, result, params):$/;"	m	class:cache
save	scripts/howorka/HoworkaTools.py	/^    save = False,$/;"	v
save	scripts/howorka/forcefield.py	/^    save = False,$/;"	v
save	scripts/numerics/force_profiles.py	/^save = False,$/;"	v
save	scripts/plot_scripts/IV_curve_2D.py	/^def save(data, fname):$/;"	f
save	scripts/plot_scripts/PMF_Profile_2D.py	/^def save(data, fname):$/;"	f
save	scripts/plot_scripts/current_trace_2D.py	/^def save(data, fname):$/;"	f
save	scripts/plot_scripts/script2DW.py	/^def save(data, fname):$/;"	f
saveJ	scripts/numerics/anaPNPS_refinement.py	/^def saveJ(self):$/;"	f
saveJ	scripts/numerics/anaPNPS_refinement_2D.py	/^def saveJ(self):$/;"	f
saveJ	scripts/numerics/anaPNPS_uniform.py	/^def saveJ(self):$/;"	f
saveJ	scripts/numerics/analyticalPNPS.py	/^def saveJ(self):$/;"	f
saveJ	scripts/numerics/analyticalPNPS_2D.py	/^def saveJ(self):$/;"	f
saveJ	scripts/numerics/analyticalPNPS_3D.py	/^def saveJ(self):$/;"	f
saveJ	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^def saveJ(self):$/;"	f
saveJ	scripts/numerics/analyticalPNP_3D.py	/^def saveJ(self):$/;"	f
save_Fref	nanopores/models/mysolve.py	/^def save_Fref(pb, pnps):$/;"	f
save_Fref	scripts/numerics/mysolve.py	/^def save_Fref(pb, pnps):$/;"	f
save_dict	nanopores/tools/utilities.py	/^def save_dict(data, dir=".", name="file"):$/;"	f
save_entries	nanopores/tools/fields.py	/^def save_entries(name, params, **entries):$/;"	f
save_estimate	nanopores/tools/pdesystem.py	/^    def save_estimate(self, string, err, N=None):$/;"	m	class:PDESystem
save_estimators	scripts/numerics/mysolve.py	/^def save_estimators(name, estimators):$/;"	f
save_fields	nanopores/tools/fields.py	/^def save_fields(name, params, **fields):$/;"	f
save_force_field	scripts/howorka/HoworkaTools.py	/^def save_force_field(**params):$/;"	f
save_force_field	scripts/howorka/forcefield.py	/^def save_force_field(**params):$/;"	f
save_forcefield_implicit	scripts/howorka/forcefield2D.py	/^def save_forcefield_implicit(**params):$/;"	f
save_functions	nanopores/tools/utilities.py	/^def save_functions(name, mesh, meta=None, **functions):$/;"	f
save_mesh	nanopores/tools/pdesystem.py	/^    def save_mesh(self, mesh_name=None):$/;"	m	class:PDESystem
save_stuff	nanopores/tools/utilities.py	/^def save_stuff(name, *stuff):$/;"	f
save_to_matlab	nanopores/tools/errorest.py	/^    def save_to_matlab(self):$/;"	m	class:Estimator
saveall	scripts/numerics/force_profiles.py	/^def saveall(name, Qmol):$/;"	f
savedir	nanopores/scripts/simulation2D.py	/^savedir = DATADIR + "\/sim\/stamps\/"$/;"	v
savedir	scripts/plot_scripts/IV_ahem.py	/^    savedir = DATADIR + "\/sim\/stamps\/"$/;"	v
savefig	scripts/numerics/diffusion_with_force_profile.py	/^savefig = False$/;"	v
savefig	scripts/numerics/force_profiles.py	/^savefig = False,$/;"	v
savefig	scripts/numerics/selectivity1D.py	/^    savefig = False,$/;"	v
savefigs	nanopores/tools/utilities.py	/^def savefigs(name="fig", DIR="\/tmp\/"):$/;"	f
saveforces	scripts/numerics/force_profiles.py	/^def saveforces(name, F, Fel, Fdrag):$/;"	f
saveplots	nanopores/tools/utilities.py	/^def saveplots(name="plot", meta=None, uid=False):$/;"	f
saveref	scripts/numerics/adap2D.py	/^saveref = False,$/;"	v
scalep	scripts/numerics/adap3D.py	/^scalep = True,$/;"	v
scalepressure	nanopores/physics/pnps.py	/^    scalepressure = False$/;"	v	class:StokesProblem
scatter	scripts/howorka/test_forcefields.py	/^def scatter(X, **params):$/;"	f
sel_params	scripts/howorka/selectivity.py	/^sel_params = dict($/;"	v
selectivity	scripts/howorka/selectivity.py	/^def selectivity(params):$/;"	f
selectivity	scripts/howorka/test_selectivity.py	/^def selectivity(U, geo):$/;"	f
selectivity	scripts/numerics/selectivity1D.py	/^def selectivity(U, geo):$/;"	f
set_entries	nanopores/tools/fields.py	/^    def set_entries(self, name, params, **entries):$/;"	m	class:Header
set_entries	nanopores/tools/fields.py	/^def set_entries(name, params, **entries):$/;"	f
set_free	nanopores/tools/protocol.py	/^    def set_free(self, uid=None):$/;"	m	class:Data
set_params	nanopores/geometries/pughpore.py	/^def set_params(**newparams):$/;"	f
set_sideBCs	nanopores/models/pughpore.py	/^def set_sideBCs(phys, geop, physp):$/;"	f
set_tol	nanopores/tools/box.py	/^def set_tol(tol):$/;"	f
setup	nanopores/models/pughpore.py	/^    setup = Setup(h=6., Nmax=6e5) #, x0=None)$/;"	v
setup	scripts/pughpore/diffusion.py	/^setup = pugh.Setup(x0=x0, **params)$/;"	v
setup2D	nanopores/models/Howorka.py	/^def setup2D(mesh=None, **params):$/;"	f
setup2D	nanopores/models/HoworkaSimple.py	/^def setup2D(**params):$/;"	f
setup2D	scripts/numerics/Howorka.py	/^def setup2D(mesh=None, **params):$/;"	f
setup2D	scripts/numerics/HoworkaSimple.py	/^def setup2D(**params):$/;"	f
setup3D	nanopores/models/Howorka.py	/^def setup3D(mesh=None, **params):$/;"	f
sginit	nanopores/tools/box.py	/^    def sginit(self, A):$/;"	m	class:csgExpression
sgmga_aniso_balance	scripts/finfet/collocation_methods/sgmga_aniso_balance.m	/^function level_weight2 = sgmga_aniso_balance ( alpha_max, dim_num, ...$/;"	f
sgmga_aniso_balance_test	scripts/finfet/collocation_methods/sgmga_aniso_balance_test.m	/^function sgmga_aniso_balance_test ( alpha_max, dim_num, level_weight )$/;"	f
sgmga_aniso_balance_tests	scripts/finfet/collocation_methods/sgmga_aniso_balance_tests.m	/^function sgmga_aniso_balance_tests ( )$/;"	f
sgmga_aniso_normalize	scripts/finfet/collocation_methods/sgmga_aniso_normalize.m	/^function level_weight = sgmga_aniso_normalize ( option, dim_num, level_weight )$/;"	f
sgmga_aniso_normalize_test	scripts/finfet/collocation_methods/sgmga_aniso_normalize_test.m	/^function sgmga_aniso_normalize_test ( dim_num, level_weight )$/;"	f
sgmga_aniso_normalize_tests	scripts/finfet/collocation_methods/sgmga_aniso_normalize_tests.m	/^function sgmga_aniso_normalize_tests ( )$/;"	f
sgmga_importance_to_aniso	scripts/finfet/collocation_methods/sgmga_importance_to_aniso.m	/^function level_weight = sgmga_importance_to_aniso ( dim_num, importance )$/;"	f
sgmga_importance_to_aniso_test	scripts/finfet/collocation_methods/sgmga_importance_to_aniso_test.m	/^function sgmga_importance_to_aniso_test ( dim_num, importance )$/;"	f
sgmga_importance_to_aniso_tests	scripts/finfet/collocation_methods/sgmga_importance_to_aniso_tests.m	/^function sgmga_importance_to_aniso_tests ( )$/;"	f
sgmga_index	scripts/finfet/collocation_methods/sgmga_index.m	/^function [ sparse_order, sparse_index ] = sgmga_index ( dim_num, ...$/;"	f
sgmga_index_test	scripts/finfet/collocation_methods/sgmga_index_test.m	/^function sgmga_index_test ( dim_num, importance, level_weight, ...$/;"	f
sgmga_index_tests	scripts/finfet/collocation_methods/sgmga_index_tests.m	/^function sgmga_index_tests ( )$/;"	f
sgmga_point	scripts/finfet/collocation_methods/sgmga_point.m	/^function sparse_point = sgmga_point ( dim_num, level_weight, level_max, ...$/;"	f
sgmga_point_test	scripts/finfet/collocation_methods/sgmga_point_test.m	/^function sgmga_point_test ( dim_num, importance, level_weight, ...$/;"	f
sgmga_product_weight	scripts/finfet/collocation_methods/sgmga_product_weight.m	/^function weight_nd = sgmga_product_weight ( dim_num, order_1d, order_nd, ...$/;"	f
sgmga_product_weight_test	scripts/finfet/collocation_methods/sgmga_product_weight_test.m	/^function sgmga_product_weight_test ( dim_num, order_1d, order_nd, rule, np, p )$/;"	f
sgmga_product_weight_tests	scripts/finfet/collocation_methods/sgmga_product_weight_tests.m	/^function sgmga_product_weight_tests ( )$/;"	f
sgmga_size	scripts/finfet/collocation_methods/sgmga_size.m	/^function point_num = sgmga_size ( dim_num, level_weight, level_max, rule, ...$/;"	f
sgmga_size_table	scripts/finfet/collocation_methods/sgmga_size_table.m	/^function sgmga_size_table$/;"	f
sgmga_size_tabulate	scripts/finfet/collocation_methods/sgmga_size_tabulate.m	/^function sgmga_size_tabulate ( rule_1d, growth_1d, np_1d, p_1d, dim_min, dim_max, ...$/;"	f
sgmga_size_test	scripts/finfet/collocation_methods/sgmga_size_test.m	/^function sgmga_size_test ( dim_num, importance, level_weight, ...$/;"	f
sgmga_size_tests	scripts/finfet/collocation_methods/sgmga_size_tests.m	/^function sgmga_size_tests ( )$/;"	f
sgmga_size_total	scripts/finfet/collocation_methods/sgmga_size_total.m	/^function point_total_num = sgmga_size_total ( dim_num, level_weight, ...$/;"	f
sgmga_unique_index	scripts/finfet/collocation_methods/sgmga_unique_index.m	/^function sparse_unique_index = sgmga_unique_index ( dim_num, level_weight, ...$/;"	f
sgmga_unique_index_test	scripts/finfet/collocation_methods/sgmga_unique_index_test.m	/^function sgmga_unique_index_test ( dim_num, importance, level_weight, ...$/;"	f
sgmga_unique_index_tests	scripts/finfet/collocation_methods/sgmga_unique_index_tests.m	/^function sgmga_unique_index_tests ( )$/;"	f
sgmga_vcn	scripts/finfet/collocation_methods/sgmga_vcn.m	/^function [ x, more ] = sgmga_vcn ( n, w, x, q_min, q_max, more )$/;"	f
sgmga_vcn_coef	scripts/finfet/collocation_methods/sgmga_vcn_coef.m	/^function coef = sgmga_vcn_coef ( dim_num, level_weight, x, q_max )$/;"	f
sgmga_vcn_coef_naive	scripts/finfet/collocation_methods/sgmga_vcn_coef_naive.m	/^function coef = sgmga_vcn_coef_naive ( dim_num, level_weight, x_max, x, q_max )$/;"	f
sgmga_vcn_coef_test	scripts/finfet/collocation_methods/sgmga_vcn_coef_test.m	/^function sgmga_vcn_coef_test ( dim_num, importance, level_weight, ...$/;"	f
sgmga_vcn_coef_tests	scripts/finfet/collocation_methods/sgmga_vcn_coef_tests.m	/^function sgmga_vcn_coef_tests ( )$/;"	f
sgmga_vcn_naive	scripts/finfet/collocation_methods/sgmga_vcn_naive.m	/^function [ x, more ] = sgmga_vcn_naive ( dim_num, level_weight, x_max, x, ...$/;"	f
sgmga_vcn_ordered	scripts/finfet/collocation_methods/sgmga_vcn_ordered.m	/^function [ x, more ] = sgmga_vcn_ordered ( dim_num, level_weight, x_max, x, ...$/;"	f
sgmga_vcn_ordered_naive	scripts/finfet/collocation_methods/sgmga_vcn_ordered_naive.m	/^function [ x, more ] = sgmga_vcn_ordered_naive ( dim_num, level_weight, ...$/;"	f
sgmga_vcn_ordered_test	scripts/finfet/collocation_methods/sgmga_vcn_ordered_test.m	/^function sgmga_vcn_ordered_test ( dim_num, importance, level_weight, q_min, ...$/;"	f
sgmga_vcn_ordered_tests	scripts/finfet/collocation_methods/sgmga_vcn_ordered_tests.m	/^function sgmga_vcn_ordered_tests ( )$/;"	f
sgmga_vcn_test	scripts/finfet/collocation_methods/sgmga_vcn_test.m	/^function sgmga_vcn_test ( dim_num, importance, level_weight, q_min, q_max )$/;"	f
sgmga_vcn_tests	scripts/finfet/collocation_methods/sgmga_vcn_tests.m	/^function sgmga_vcn_tests ( )$/;"	f
sgmga_vcn_timing_test	scripts/finfet/collocation_methods/sgmga_vcn_timing_test.m	/^function sgmga_vcn_timing_test ( dim_num, importance, level_weight, q_min, q_max )$/;"	f
sgmga_vcn_timing_tests	scripts/finfet/collocation_methods/sgmga_vcn_timing_tests.m	/^function sgmga_vcn_timing_tests ( )$/;"	f
sgmga_weight	scripts/finfet/collocation_methods/sgmga_weight.m	/^function sparse_weight = sgmga_weight ( dim_num, level_weight, level_max, ...$/;"	f
sgmga_weight_test	scripts/finfet/collocation_methods/sgmga_weight_test.m	/^function sgmga_weight_test ( dim_num, importance, level_weight, ...$/;"	f
sgmga_weight_tests	scripts/finfet/collocation_methods/sgmga_weight_tests.m	/^function sgmga_weight_tests ( )$/;"	f
sgmga_write	scripts/finfet/collocation_methods/sgmga_write.m	/^function sgmga_write ( dim_num, level_weight, rule, growth, np, p, ...$/;"	f
sgmga_write_test	scripts/finfet/collocation_methods/sgmga_write_test.m	/^function sgmga_write_test ( dim_num, level_weight, level_max, rule, ...$/;"	f
sgmga_write_tests	scripts/finfet/collocation_methods/sgmga_write_tests.m	/^function sgmga_write_tests ( )$/;"	f
sgn	scripts/plot_forces_How/plot_drag.py	/^def sgn(x):$/;"	f
sgn	scripts/plot_forces_How/plot_el.py	/^def sgn(x):$/;"	f
sgn	scripts/plot_forces_aHem/combine.py	/^def sgn(x):$/;"	f
sgn	scripts/plot_forces_aHem/combine2.py	/^def sgn(x):$/;"	f
sgn	scripts/plot_forces_aHem/plot_drag.py	/^def sgn(x):$/;"	f
sgn	scripts/plot_forces_aHem/plot_el.py	/^def sgn(x):$/;"	f
sgn	scripts/plot_forces_aHem/ppt.py	/^def sgn(x):$/;"	f
shift	scripts/random_walk_aHem/plot_aHem.py	/^shift=np.array([[Cx,Cy] for i in range(size)])$/;"	v
show	nanopores/tools/fields.py	/^def show():$/;"	f
showfields	nanopores/tools/fields.py	/^def showfields():$/;"	f
showplots	nanopores/tools/utilities.py	/^def showplots():$/;"	f
side	scripts/numerics/H3Drefine.py	/^side = Cylinder(R=geo.params["R"], L=2.*geo.params["Rz"])$/;"	v
side	scripts/numerics/adap3D.py	/^side = Cylinder(R=geo.params["R"], L=2.*geo.params["Rz"])$/;"	v
side	scripts/numerics/adap3Dpb.py	/^side = Cylinder(R=geo.params["R"], L=2.*geo.params["Rz"])$/;"	v
side	scripts/numerics/adap3Dref.py	/^side = Cylinder(R=geo.params["R"], L=2.*geo.params["Rz"])$/;"	v
sideb	scripts/howorka/largepore.py	/^    sideb = sideb,$/;"	v
sideb	scripts/howorka/largepore.py	/^sideb = reservoir.boundary("front", "back", "left", "right") - outermemb$/;"	v
sideb	scripts/howorka/largepore_dna.py	/^    sideb = sideb,$/;"	v
sideb	scripts/howorka/largepore_dna.py	/^sideb = reservoir.boundary("front", "back", "left", "right") - outermemb$/;"	v
sideb	scripts/numerics/H3Drefine.py	/^    sideb = side.snap,$/;"	v
sideb	scripts/numerics/adap3D.py	/^    sideb = side.snap,$/;"	v
sideb	scripts/numerics/adap3Dpb.py	/^    sideb = side.snap,$/;"	v
sideb	scripts/numerics/adap3Dref.py	/^    sideb = side.snap,$/;"	v
sideb	scripts/test_axisym.py	/^    sideb = domain.boundary("right") - membrane.boundary("right"),$/;"	v
sideb	scripts/test_box.py	/^    sideb = domain.boundary("right") - membrane.boundary("right"),$/;"	v
sigmab	scripts/plot_scripts/IV_ahem.py	/^sigmab = 108  # [mS\/cm]$/;"	v
sim	scripts/plot_scripts/IV_ahem.py	/^    sim = nanopores.simulate("ahemIV",**args)$/;"	v
sims	scripts/random_walk_aHem/run.py	/^sims=3000$/;"	v
sims	scripts/random_walk_aHem/varplots.py	/^sims=np.sum(np.load('counter.npy'))$/;"	v
simulate	nanopores/scripts/simulation2D.py	/^def simulate(name, nproc=1, outputs=None, plot=None,$/;"	f
single_aitken	nanopores/tools/illposed.py	/^def single_aitken(l):$/;"	f
single_solve	nanopores/tools/coupled.py	/^    def single_solve(self, tol=None, damp=None, inside_loop=_pass):$/;"	m	class:CoupledSolver
single_solve	nanopores/tools/pdesystem.py	/^    def single_solve(self, **other):$/;"	m	class:PDESystem
single_solve	nanopores/tools/pdesystem.py	/^    def single_solve(self, tol=None, damp=None, imax=None, verbose=True, inside_loop=_pass):$/;"	m	class:NonlinearPDE
singletons	nanopores/tools/box.py	/^    def singletons(self):$/;"	m	class:csgExpression
size	nanopores/tools/mpipool.py	/^size = comm.Get_size()$/;"	v
size	scripts/plot_forces_How/plot_drag.py	/^size=X_How_2d.shape[0]$/;"	v
size	scripts/plot_forces_How/plot_el.py	/^size=X_How_2d.shape[0]$/;"	v
size	scripts/plot_forces_aHem/combine.py	/^size=X_aHem_2d.shape[0]$/;"	v
size	scripts/plot_forces_aHem/combine2.py	/^size=X_aHem_2d.shape[0]$/;"	v
size	scripts/plot_forces_aHem/plot_drag.py	/^size=X_aHem_2d.shape[0]$/;"	v
size	scripts/plot_forces_aHem/plot_el.py	/^size=X_aHem_2d.shape[0]$/;"	v
size	scripts/plot_forces_aHem/ppt.py	/^size=X_aHem_2d.shape[0]$/;"	v
size	scripts/pughpore/sobol_points.py	/^    size=10$/;"	v
size	scripts/random_walk_aHem/plot_aHem.py	/^size=X_aHem_2d.shape[0]$/;"	v
size	scripts/random_walk_aHem/plot_path.py	/^size=X_aHem_2d.shape[0]$/;"	v
skip_stokes	nanopores/scripts/ahemFPT.py	/^skip_stokes = True$/;"	v
skip_stokes	nanopores/scripts/ahemIV.py	/^skip_stokes = True$/;"	v
skip_stokes	scripts/plot_scripts/IV_ahem.py	/^    skip_stokes = False,$/;"	v
skip_stokes	scripts/plot_scripts/parameter_script.py	/^skip_stokes = True, #[True, False],$/;"	v
skip_stokes	scripts/survival.py	/^skip_stokes = True$/;"	v
smallballs	nanopores/tools/balls.py	/^    smallballs = [Ball((x*.1, -x*.1), r=0.08, lc=0.02) for x in range(-8,12,2)]$/;"	v
smearMolCharge	nanopores/physics/howorka.py	/^smearMolCharge = True # note: this is no parameter$/;"	v
smearMolCharge	nanopores/physics/pore_dna.py	/^smearMolCharge = False # note: this is no parameter$/;"	v
smearMolCharge	nanopores/physics/pore_molecule.py	/^smearMolCharge = True # note: this is no parameter$/;"	v
snap	nanopores/geometries/curved.py	/^    def snap(self, x):$/;"	m	class:Circle
snap	nanopores/geometries/curved.py	/^    def snap(self, x):$/;"	m	class:Cylinder
snap	nanopores/geometries/curved.py	/^    def snap(self, x):$/;"	m	class:Sphere
snap_to_boundary	nanopores/geometries/curved.py	/^def snap_to_boundary(geo, name, subdomain):$/;"	f
snap_to_boundary	nanopores/tools/geometry.py	/^    def snap_to_boundary(self, name, snap, smooth=False):$/;"	m	class:Geometry
solid	nanopores/geometries/pughpore.py	/^    solid = membrane | dna | molecule$/;"	v
solid	nanopores/physics/pore.py	/^    solid = 0.,$/;"	v
solid	scripts/howorka/largepore.py	/^    solid = membrane | dna$/;"	v
solid	scripts/howorka/largepore.py	/^    solid = {"membrane", "dna"},$/;"	v
solid	scripts/howorka/largepore_dna.py	/^    solid = membrane | dna | molecule$/;"	v
solid	scripts/howorka/largepore_dna.py	/^    solid = {"membrane", "dna", "molecule"},$/;"	v
solid	scripts/numerics/test_fixedpoint_1D.py	/^    solid = "membrane",$/;"	v
solid	scripts/toy_models/pnp1D.py	/^    solid = "membrane",$/;"	v
solidgeo	nanopores/geometries/pughpore.py	/^    solidgeo = solid.create_geometry(lc=4.)$/;"	v
solidgeo	scripts/howorka/largepore_dna.py	/^    solidgeo = solid.create_geometry(lc=2.)$/;"	v
solution	nanopores/tools/illposed.py	/^    def solution(self):$/;"	m	class:AdaptableLinearProblem
solution	nanopores/tools/illposed.py	/^    def solution(self):$/;"	m	class:AdaptableNonlinearProblem
solutions	nanopores/physics/pnps.py	/^    def solutions(self, string=None, deepcopy=False):$/;"	m	class:PNPS
solutions	nanopores/physics/pnps2Dnewton.py	/^    def solutions(self, string=None, deepcopy=False):$/;"	m	class:PNPSAxisymNewton
solutions	nanopores/tools/pdesystem.py	/^    def solutions(self, string=None, deepcopy=False):$/;"	m	class:PDESystem
solutions	scripts/finfet/finfet-levels.py	/^solutions = []$/;"	v
solve	nanopores/models/pughpore.py	/^def solve(setup, visualize=False):$/;"	f
solve	nanopores/physics/pnps.py	/^    def solve(self, refinement=False, visualize=False, save_mesh=False, print_functionals=False):$/;"	m	class:PNPS
solve	nanopores/physics/pnps2Dnewton.py	/^    def solve(self, refinement=False, visualize=False, save_mesh=False, print_functionals=False):$/;"	m	class:PNPSAxisymNewton
solve	nanopores/tools/illposed.py	/^    def solve(self):$/;"	m	class:IllposedLinearSolver
solve	nanopores/tools/illposed.py	/^    def solve(self):$/;"	m	class:IllposedNonlinearSolver
solve	nanopores/tools/pdesystem.py	/^    def solve(self, refinement=False, verbose=True, inside_loop=_pass):$/;"	m	class:PDESystem
solve	nanopores/tools/transientpde.py	/^    def solve(self, t=0, verbose=True, visualize=False, record_functionals=True, **params):$/;"	m	class:TransientLinearPDE
solve	scripts/finfet/MLSC.py	/^def solve(geo, dops):$/;"	f
solve	scripts/finfet/finfet-levels.py	/^def solve(h):$/;"	f
solve	scripts/numerics/linear-robust.py	/^solve = ( lambda phys: H.solve2D_fixedpoint(geo, phys, imax=20, tol=tol),$/;"	v
solve1D	nanopores/models/pughpore.py	/^def solve1D(geop, physp):$/;"	f
solve2D	nanopores/models/Howorka.py	/^def solve2D(geo, phys, **params):$/;"	f
solve2D	scripts/numerics/Howorka.py	/^def solve2D(geo, phys, **params):$/;"	f
solve2D_fixedpoint	nanopores/models/HoworkaSimple.py	/^def solve2D_fixedpoint(geo, phys, **params):$/;"	f
solve2D_fixedpoint	scripts/numerics/HoworkaSimple.py	/^def solve2D_fixedpoint(geo, phys, **params):$/;"	f
solve2D_fixedpoint_bVscheme	nanopores/models/HoworkaSimple.py	/^def solve2D_fixedpoint_bVscheme(geo, phys, bVstep=0.025, **params):$/;"	f
solve2D_fixedpoint_bVscheme	scripts/numerics/HoworkaSimple.py	/^def solve2D_fixedpoint_bVscheme(geo, phys, bVstep=0.025, **params):$/;"	f
solve2D_hybrid	nanopores/models/HoworkaSimple.py	/^def solve2D_hybrid(geo, phys, **params):$/;"	f
solve2D_hybrid	scripts/numerics/HoworkaSimple.py	/^def solve2D_hybrid(geo, phys, **params):$/;"	f
solve2D_hybrid_PB	nanopores/models/HoworkaSimple.py	/^def solve2D_hybrid_PB(geo, phys, **params):$/;"	f
solve2D_hybrid_PB	scripts/numerics/HoworkaSimple.py	/^def solve2D_hybrid_PB(geo, phys, **params):$/;"	f
solve3D	nanopores/models/Howorka.py	/^def solve3D(geo, phys, **params):$/;"	f
solve_pde	nanopores/tools/pdesystem.py	/^def solve_pde(Problem, geo=None, phys=None, refinement=False, imax = 20, maxcells=1e4,$/;"	f
solve_pnp	nanopores/physics/simplepnps.py	/^    def solve_pnp(self):$/;"	m	class:PNPSFixedPoint
solve_pnps_2D	scripts/numerics/anaPNPS_uniform.py	/^def solve_pnps_2D(domain2D, h2D):$/;"	f
solve_pnps_3D	scripts/numerics/anaPNPS_uniform.py	/^def solve_pnps_3D(domain3D, h3D):$/;"	f
solve_problem	nanopores/tools/pdesystem.py	/^def solve_problem(problem, geo, imax = 20, maxcells=1e4,$/;"	f
solve_stokes	nanopores/physics/simplepnps.py	/^    def solve_stokes(self):$/;"	m	class:PNPSFixedPoint
solver_params	scripts/howorka/forcefield3D.py	/^solver_params = dict(params,$/;"	v
solverp	nanopores/models/pughpore.py	/^solverp = nano.Params($/;"	v
solverp	scripts/pughpore/test_pugh.py	/^solverp = nano.Params($/;"	v
solvers	scripts/plot_scripts/script2DWelectrodes.py	/^    solvers = pnps.solvers.keys(),$/;"	v
solvers	scripts/plot_scripts/script3DW.py	/^    solvers = pnps.solvers.keys(),$/;"	v
solvers	scripts/test.py	/^    solvers = pnps.solvers.keys(),$/;"	v
sort_heap_external	scripts/finfet/collocation_methods/sort_heap_external.m	/^function [ indx, i, j ] = sort_heap_external ( n, indx, isgn )$/;"	f
source	nanopores/geometries/finfet.py	/^    source = source,$/;"	v
source	nanopores/geometries/finfet.py	/^source = Box(center=[-(lw + lb)\/2, 0, 0], l=lb, w=wb, h=hb)$/;"	v
sourceb	nanopores/geometries/finfet.py	/^    sourceb = source.boundary("left"),$/;"	v
sourceb	nanopores/physics/finfet.py	/^    sourceb = "vS",$/;"	v
sourcendrain	nanopores/geometries/finfet.py	/^    sourcendrain = {"source", "drain"}$/;"	v
sourcendrain	nanopores/physics/finfet.py	/^    sourcendrain = "Dsource",$/;"	v
sourcendrain	nanopores/physics/finfet.py	/^    sourcendrain = "nDsource",$/;"	v
space	nanopores/physics/convdiff.py	/^    def space(mesh, k=1, steady=False):$/;"	m	class:ConvectionDiffusionProblem
space	nanopores/physics/exittime.py	/^    def space(mesh):$/;"	m	class:ExitTimeProblem
space	nanopores/physics/exittime.py	/^    def space(mesh):$/;"	m	class:SurvivalProblem
space	nanopores/physics/pb.py	/^    def space(mesh):$/;"	m	class:LinearNonstandardPBProblem
space	nanopores/physics/pb.py	/^    def space(mesh):$/;"	m	class:NonstandardPBProblem
space	nanopores/physics/pnps.py	/^    def space(mesh):$/;"	m	class:PNPProblem
space	nanopores/physics/pnps.py	/^    def space(mesh):$/;"	m	class:StokesProblem
space	nanopores/physics/pnps.py	/^    def space(mesh):$/;"	m	class:StokesProblemEqualOrder
space	nanopores/physics/pnps2D.py	/^    def space(mesh):$/;"	m	class:PNPProblemAxisym
space	nanopores/physics/pnps2D.py	/^    def space(mesh):$/;"	m	class:StokesProblemAxisym
space	nanopores/physics/pnps2D.py	/^    def space(mesh):$/;"	m	class:StokesProblemAxisymEqualOrder
space	nanopores/physics/pnps2Dnewton.py	/^    def space(mesh):$/;"	m	class:PNPSProblemAxisym
space	nanopores/physics/pnps2Dnewton.py	/^    def space(mesh, ku=1):$/;"	m	class:SimplePNPSProblem
space	nanopores/physics/poisson.py	/^    def space(mesh):$/;"	m	class:PoissonProblem
space	nanopores/physics/poisson.py	/^    def space(mesh):$/;"	m	class:PoissonProblemPureNeumannAxisym
space	nanopores/physics/simplepnps.py	/^    def space(mesh, k=1):$/;"	m	class:LinearSGPoissonProblem
space	nanopores/physics/simplepnps.py	/^    def space(mesh, k=1):$/;"	m	class:SGPoissonProblem
space	nanopores/physics/simplepnps.py	/^    def space(mesh, k=1):$/;"	m	class:SimpleLinearPBProblem
space	nanopores/physics/simplepnps.py	/^    def space(mesh, k=1):$/;"	m	class:SimpleNernstPlanckProblem
space	nanopores/physics/simplepnps.py	/^    def space(mesh, k=1):$/;"	m	class:SimplePBProblem
space	nanopores/physics/simplepnps.py	/^    def space(mesh, k=1):$/;"	m	class:SimplePNPProblem
space	nanopores/physics/simplepnps.py	/^    def space(mesh, k=1):$/;"	m	class:SimplePoissonProblem
space	nanopores/physics/simplepnps.py	/^    def space(mesh, ku=1, kp=1):$/;"	m	class:SimpleStokesProblem
space	nanopores/tools/utilities.py	/^    def space(mesh):$/;"	f	function:load_vector_functions
space	scripts/numerics/PMF.py	/^space = (8., -8., Nz)$/;"	v
space	scripts/numerics/PMF.py	/^space = (9., -9., 101)$/;"	v
space	scripts/numerics/force_profiles.py	/^space = (a, b, Nz)$/;"	v
split	nanopores/tools/errorest.py	/^    def split(self):$/;"	m	class:Estimator
square	scripts/test_features/box.py	/^square = Box((0, 0), (4, 4))$/;"	v
square2	scripts/test_features/box.py	/^square2 = square.copy()$/;"	v
stab	nanopores/tools/illposed.py	/^    stab = 1e0 #TODO ???$/;"	v	class:IllposedLinearSolver
start	scripts/random_walk_aHem/run.py	/^start=time()$/;"	v
steady	scripts/numerics/selectivity1D.py	/^    steady = False,$/;"	v
steadystate	scripts/numerics/selectivity1D.py	/^def steadystate(geo, phys, F, u0):$/;"	f
steadysurv	scripts/survival.py	/^steadysurv = LinearPDE(geo, SurvivalProblem, phys, F=C0, goodexit=goodexit, badexit=badexit)$/;"	v
steadysurv	scripts/survival.py	/^steadysurv = LinearPDE(geo, SurvivalProblem, phys, F=F, goodexit=goodexit, badexit=badexit)$/;"	v
step	scripts/plot_scripts/PMF_Profile_2D.py	/^step = .5*nm    $/;"	v
step	scripts/plot_scripts/PMFplots.py	/^step = 0.2*nm$/;"	v
steps	scripts/howorka/HoworkaTools.py	/^    steps = 100, # timesteps per level for logarithmic time plot$/;"	v
steps	scripts/howorka/selectivity.py	/^    steps = 20,$/;"	v
steps	scripts/howorka/selectivity.py	/^    steps = p.steps, # timesteps per level$/;"	v
steps	scripts/howorka/test_selectivity.py	/^    steps = 100, # timesteps per level for logarithmic time plot$/;"	v
steps	scripts/howorka/video.py	/^    steps = 100, # timesteps per level for logarithmic time plot$/;"	v
steps	scripts/numerics/selectivity1D.py	/^    steps = 100, # timesteps per level for logarithmic time plot$/;"	v
steps	scripts/pughpore/randomwalk/run.py	/^steps=$/;"	v
steps	scripts/random_walk_aHem/run.py	/^steps=1e8# 5 milliseconds = 1e8*tau$/;"	v
stokes	nanopores/tools/solvermethods.py	/^stokes = dict($/;"	v
stokes	scripts/numerics/anaPNPS_refinement.py	/^    stokes = couple_stokes$/;"	v
stokes	scripts/numerics/anaPNPS_refinement_2D.py	/^    stokes = couple_stokes$/;"	v
stokes	scripts/numerics/anaPNPS_uniform.py	/^    stokes = couple_stokes$/;"	v
stokes	scripts/numerics/analyticalPNPS.py	/^    stokes = couple_stokes$/;"	v
stokes	scripts/numerics/analyticalPNPS_2D.py	/^    stokes = couple_stokes$/;"	v
stokes	scripts/numerics/analyticalPNPS_3D.py	/^    stokes = couple_stokes$/;"	v
stokes	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^stokes = solve_pde(SimpleStokesProblem, geo2D, phys, cyl=True, conservative=False, f=-cFarad*(cp-cm)*grad(v), ku=2, beta=0.)$/;"	v
stokes	scripts/pughpore/diffusion.py	/^stokes = nano.solve_pde(pnps.SimpleStokesProblem, geo=geo, $/;"	v
stokes	scripts/test.py	/^stokes = pnps.solvers.pop("Stokes")$/;"	v
stokesLU	nanopores/models/Howorka.py	/^stokesLU = False, # determines solver behaviour in 3D$/;"	v
stokesLU	scripts/howorka/forcefield3D.py	/^    stokesLU = True,$/;"	v
stokesLU	scripts/numerics/adap3D.py	/^stokesLU = False,$/;"	v
stokesLU	scripts/test_features/howorka3D.py	/^stokesLU = True,$/;"	v
stokes_damp	nanopores/physics/howorka.py	/^stokes_damp = { # damps stokes terms in current densities$/;"	v
stokes_damp	nanopores/physics/pore_dna.py	/^stokes_damp = { # damps stokes terms in current densities$/;"	v
stokes_damp	nanopores/physics/pore_molecule.py	/^stokes_damp = { # damps stokes terms in current densities$/;"	v
stokesdampPore	nanopores/physics/howorka.py	/^stokesdampPore = 1.0$/;"	v
stokesdampPore	nanopores/physics/pore_dna.py	/^stokesdampPore = 1.0$/;"	v
stokesdampPore	nanopores/physics/pore_molecule.py	/^stokesdampPore = 1.0$/;"	v
stokesiter	nanopores/models/pughpore.py	/^    stokesiter = True$/;"	v
stokesiter	scripts/pughpore/test_pugh.py	/^           stokesiter=True, #v0=pb.solution, $/;"	v
stokeslaw	scripts/stokes_law/stokes_law_2D_stats.py	/^def stokeslaw(lx,ly):$/;"	f
strain	scripts/stokes_law/stokes_law.py	/^strain = eta*2.0*dot(sym(grad(u)),n)$/;"	v
strm	scripts/plot_forces_How/plot_drag.py	/^strm = plt.streamplot(X,Y,U,V,arrowsize=3, linewidth=2., density=2.5, cmap=cm.viridis, color=np.log10(np.sqrt(U*U+V*V)))$/;"	v
strm	scripts/plot_forces_How/plot_el.py	/^strm = plt.streamplot(X,Y,U,V,arrowsize=3, linewidth=2., density=2.5, cmap=cm.viridis, color=np.log10(np.sqrt(U*U+V*V)))$/;"	v
strm	scripts/plot_forces_aHem/combine.py	/^strm = ax0.streamplot(X,Y,U,V,arrowsize=3, linewidth=1.5, density=2.0, cmap=cm.viridis, color=np.log10(np.sqrt(U*U+V*V)))$/;"	v
strm	scripts/plot_forces_aHem/combine.py	/^strm = ax1.streamplot(X,Y,U,V,arrowsize=3, linewidth=1.5, density=2.0, cmap=cm.viridis, color=np.log10(np.sqrt(U*U+V*V)))$/;"	v
strm	scripts/plot_forces_aHem/combine2.py	/^strm = ax0.streamplot(X,Y,U,V,arrowsize=3, linewidth=1.5, density=2.0, cmap=cm.viridis, color=np.log10(np.sqrt(U*U+V*V)))$/;"	v
strm	scripts/plot_forces_aHem/combine2.py	/^strm = ax1.streamplot(X,Y,U,V,arrowsize=3, linewidth=1.5, density=2.0, cmap=cm.viridis, color=np.log10(np.sqrt(U*U+V*V)))$/;"	v
strm	scripts/plot_forces_aHem/plot_drag.py	/^strm = plt.streamplot(X,Y,U,V,arrowsize=3, linewidth=1.5, density=3.0, cmap=cm.viridis, color=np.log10(np.sqrt(U*U+V*V)))$/;"	v
strm	scripts/plot_forces_aHem/plot_el.py	/^strm = plt.streamplot(X,Y,U,V,arrowsize=3, linewidth=1.5, density=3.0, cmap=cm.viridis, color=np.log10(np.sqrt(U*U+V*V)))$/;"	v
strm	scripts/plot_forces_aHem/ppt.py	/^strm = ax0.streamplot(X,Y,U,V,arrowsize=3, linewidth=1.5, density=3, cmap=cm.viridis, color=np.log10(np.sqrt(U*U+V*V)))$/;"	v
structure	nanopores/physics/pnps.py	/^                structure = "same_nonzero_pattern",$/;"	v	class:StokesProblem
structure	nanopores/physics/pnps2D.py	/^                structure = "same_nonzero_pattern",$/;"	v	class:StokesProblemAxisym
style	nanopores/tools/transientpde.py	/^    style = "-x"$/;"	v	class:TimeDependentPlotter
style	scripts/numerics/PMF.py	/^style = "s--"$/;"	v
subd	scripts/plot_scripts/script2DWelectrodes.py	/^subd = import_module(module)$/;"	v
subdomain_list	nanopores/geometries/Cyl2D/subdomains.py	/^def subdomain_list(**params):$/;"	f
subdomain_list	nanopores/geometries/H_cyl_geo/subdomains.py	/^def subdomain_list(**params):$/;"	f
subdomain_list	nanopores/geometries/H_geo/subdomains.py	/^def subdomain_list(**params):$/;"	f
subdomain_list	nanopores/geometries/Nanowire/subdomains.py	/^def subdomain_list(**params):$/;"	f
subdomain_list	nanopores/geometries/P_geo/subdomains.py	/^def subdomain_list(**params):$/;"	f
subdomain_list	nanopores/geometries/W_2D_geo/subdomains.py	/^def subdomain_list(**params):$/;"	f
subdomain_list	nanopores/geometries/W_3D_geo/subdomains.py	/^def subdomain_list(**params):$/;"	f
subdomain_list	nanopores/geometries/aHem/subdomains.py	/^def subdomain_list(**params):$/;"	f
subdomains	scripts/fluorophore_in_top_reservoir.py	/^    subdomains = subdomains,$/;"	v
subdomains	scripts/fluorophore_in_top_reservoir.py	/^subdomains = CellFunction("size_t", mesh, 0)       $/;"	v
subdomains	scripts/simplegeo.py	/^subdomains = CellFunction("size_t",mesh,0)$/;"	v
subdomains	scripts/test_features/circle.py	/^subdomains = CellFunction("size_t", submesh, 0)$/;"	v
subdomains	scripts/test_features/circle.py	/^subdomains = MeshFunction("size_t", mesh, mesh.topology().dim())$/;"	v
submesh	nanopores/scripts/test_geometry_3D.py	/^    submesh = geo.submesh(subd)$/;"	v
submesh	nanopores/tools/geometry.py	/^    def submesh(self, string):$/;"	m	class:Geometry
submesh	scripts/howorka/HoworkaTools.py	/^submesh = geo.submesh("fluid")$/;"	v
submesh	scripts/howorka/forcefield.py	/^submesh = geo.submesh("fluid")$/;"	v
submesh	scripts/test_features/circle.py	/^    submesh = refine(submesh, markers)$/;"	v
submesh	scripts/test_features/circle.py	/^submesh = SubMesh(mesh, subdomains, 0)$/;"	v
substract_dna	scripts/howorka/largepore_dna.py	/^substract_dna = substract_mem_spanning - substract_mem$/;"	v
substract_mem	scripts/howorka/largepore_dna.py	/^substract_mem = Box(center=c4, l=l4, w=l4, h=h4)$/;"	v
substract_mem_spanning	scripts/howorka/largepore_dna.py	/^substract_mem_spanning = Box(center=c4, l=l0, w=l0, h=h4)$/;"	v
surfcharge	nanopores/physics/electrolyte.py	/^surfcharge = dict() # surface charge densities for Neumann RHS$/;"	v
surfcharge	nanopores/physics/howorka.py	/^surfcharge = { # surface charge densities for Neumann RHS$/;"	v
surfcharge	nanopores/physics/pore.py	/^surfcharge = dict( # surface charge densities for Neumann RHS$/;"	v
surfcharge	nanopores/physics/pore_dna.py	/^surfcharge = { # surface charge densities for Neumann RHS$/;"	v
surfcharge	nanopores/physics/pore_molecule.py	/^surfcharge = { # surface charge densities for Neumann RHS$/;"	v
surfcharge	scripts/fluorophore_in_top_reservoir.py	/^    surfcharge = {},$/;"	v
surfcharge	scripts/fluorophore_in_top_reservoir.py	/^def surfcharge(Qmol, bulkcon=10e-3, h=10e-3):$/;"	f
surfcharge	scripts/numerics/anaPNPS_refinement.py	/^    surfcharge = dict($/;"	v
surfcharge	scripts/numerics/anaPNPS_refinement_2D.py	/^    surfcharge = dict($/;"	v
surfcharge	scripts/numerics/anaPNPS_uniform.py	/^    surfcharge = dict($/;"	v
surfcharge	scripts/numerics/analyticalPNPS.py	/^    surfcharge = dict($/;"	v
surfcharge	scripts/numerics/analyticalPNPS_3D.py	/^    surfcharge = dict($/;"	v
surfcharge	scripts/numerics/analyticalPNP_3D.py	/^    surfcharge = dict($/;"	v
surfcharge	scripts/toy_models/pnp1Dcyl.py	/^    surfcharge = dict(wall = -0.1*qq\/nm**2),$/;"	v
surfx	scripts/pughpore/sobol_points.py	/^    def surfx(y1,y2,z1,z2,d,size,rs,cs):$/;"	f
surfy	scripts/pughpore/sobol_points.py	/^    def surfy(x1,x2,z1,z2,d,size,rs,cs):$/;"	f
surfz	scripts/pughpore/sobol_points.py	/^    def surfz(x1,x2,y1,y2,d,size,rs,cs):$/;"	f
survival	nanopores/scripts/test_survival.py	/^survival = TransientLinearPDE(SurvivalProblem, geo, phys, dt=dt, F=Constant((0.,0.,0.)))$/;"	v
survival	nanopores/scripts/test_survival.py	/^survival = TransientLinearPDE(SurvivalProblem, geo, phys, dt=dt, F=F)$/;"	v
survival	scripts/survival.py	/^survival = SuccessfulExit(geo, phys, dt=dt, F=C0, goodexit=goodexit, badexit=badexit)$/;"	v
survival	scripts/survival.py	/^survival = SuccessfulExit(geo, phys, dt=dt, F=F, goodexit=goodexit, badexit=badexit)$/;"	v
survival	scripts/test_ahem.py	/^survival = TransientLinearPDE(SurvivalProblem, geo, phys, dt=dt, F=Constant((0.,0.,0.)), exitb=exitb)$/;"	v
survival	scripts/test_ahem.py	/^survival = TransientLinearPDE(SurvivalProblem, geo, phys, dt=dt, F=F, exitb=exitb)$/;"	v
symmetric	nanopores/physics/exittime.py	/^            symmetric = False,$/;"	v	class:ExitTimeProblem
symmetric	nanopores/physics/exittime.py	/^            symmetric = False,$/;"	v	class:SurvivalProblem
symmetric	nanopores/physics/pb.py	/^            symmetric = True,$/;"	v	class:LinearNonstandardPBProblem
symmetric	nanopores/physics/pb.py	/^            symmetric = True,$/;"	v	class:NonstandardPBProblem
symmetric	nanopores/physics/pnps.py	/^            symmetric = True,$/;"	v	class:StokesProblem
symmetric	nanopores/physics/pnps2D.py	/^            symmetric = False,$/;"	v	class:PNPProblemAxisym
symmetric	nanopores/physics/pnps2D.py	/^            symmetric = True,$/;"	v	class:StokesProblemAxisym
symmetric	nanopores/physics/pnps2Dnewton.py	/^            symmetric = False,$/;"	v	class:PNPSProblemAxisym
symmetric	nanopores/physics/poisson.py	/^            symmetric = True,$/;"	v	class:PoissonProblem
symmetric	nanopores/tools/solvermethods.py	/^        symmetric = False,$/;"	v
symmetric	nanopores/tools/solvermethods.py	/^        symmetric = True,$/;"	v
synonyme	scripts/numerics/implicit_vs_explicit.py	/^synonyme = dict($/;"	v
synonymes	nanopores/geometries/Cyl2D/subdomains.py	/^synonymes = {$/;"	v
synonymes	nanopores/geometries/H_cyl_geo/subdomains.py	/^synonymes = {$/;"	v
synonymes	nanopores/geometries/H_geo/subdomains.py	/^synonymes = {$/;"	v
synonymes	nanopores/geometries/Nanowire/subdomains.py	/^synonymes = {$/;"	v
synonymes	nanopores/geometries/P_geo/subdomains.py	/^synonymes = {$/;"	v
synonymes	nanopores/geometries/W_2D_geo/subdomains.py	/^synonymes = {$/;"	v
synonymes	nanopores/geometries/W_3D_geo/subdomains.py	/^synonymes = {$/;"	v
synonymes	nanopores/geometries/aHem/params_geo.py	/^synonymes = {$/;"	v
synonymes	nanopores/geometries/aHem/subdomains.py	/^synonymes = {$/;"	v
synonymes	nanopores/physics/electrolyte.py	/^synonymes = dict($/;"	v
synonymes	nanopores/physics/finfet.py	/^synonymes = {$/;"	v
synonymes	scripts/fluorophore_in_top_reservoir.py	/^    synonymes = synonymes,$/;"	v
synonymes	scripts/fluorophore_in_top_reservoir.py	/^synonymes = {$/;"	v
synonymes	scripts/plot_scripts/script2DWelectrodes.py	/^        synonymes = subd.__dict__.get("synonymes")$/;"	v
synonymes	scripts/simplegeo.py	/^synonymes = {$/;"	v
synonymes0	nanopores/geometries/Cyl2D/subdomains.py	/^synonymes0 = {$/;"	v
synonymes2	nanopores/geometries/Cyl2D/subdomains.py	/^synonymes2 = {$/;"	v
synonymesnew	scripts/plot_scripts/script2DWelectrodes.py	/^        synonymesnew = {$/;"	v
synonymesnew	scripts/plot_scripts/script2DWelectrodes.py	/^synonymesnew = {$/;"	v
t	nanopores/scripts/test_geometry_3D.py	/^t = Timer("Mesh Generation")$/;"	v
t	nanopores/scripts/test_survival.py	/^t = Timer("meshing")$/;"	v
t	nanopores/scripts/test_survival.py	/^t = Timer("reading geometry")$/;"	v
t	scripts/finfet/finfet.py	/^t = dolfin.Timer("init")$/;"	v
t	scripts/finfet/finfet.py	/^t = dolfin.Timer("mesh")$/;"	v
t	scripts/finfet/finfet.py	/^t = dolfin.Timer("solve")$/;"	v
t	scripts/finfet/test_wire.py	/^t = Timer("time")$/;"	v
t	scripts/howorka/HoworkaTools.py	/^    t = pde.time[-1] if len(pde.time)>0 else 0.$/;"	v
t	scripts/howorka/plot_selectivity.py	/^    t = results["time"]$/;"	v
t	scripts/howorka/plot_selectivity_old.py	/^    t = results["time"]$/;"	v
t	scripts/howorka/selectivity.py	/^    t = 1e-8,$/;"	v
t	scripts/howorka/selectivity.py	/^    t = p.t, # total time of first level$/;"	v
t	scripts/howorka/selectivity.py	/^    t = results.time$/;"	v
t	scripts/howorka/test_selectivity.py	/^    t = 1e-0,$/;"	v
t	scripts/howorka/video.py	/^    t = pde.time[-1] if len(pde.time)>0 else 0.$/;"	v
t	scripts/numerics/hybrid_vs_newton.py	/^t = Timer("solve")$/;"	v
t	scripts/numerics/selectivity1D.py	/^    t = 1e-8,$/;"	v
t	scripts/numerics/test_fixedpoint.py	/^t = Timer("solve")$/;"	v
t	scripts/plot_scripts/script2DWelectrodes.py	/^t = Timer('Start')$/;"	v
t	scripts/plot_scripts/script3DW.py	/^t = Timer('Start')$/;"	v
t	scripts/survival.py	/^t = 0.01*.000001$/;"	v
t	scripts/survival.py	/^t = T[1]*.000001$/;"	v
t	scripts/survival.py	/^t = Timer("meshing")$/;"	v
t	scripts/survival.py	/^t = Timer("reading geometry")$/;"	v
t	scripts/test3D_GOA.py	/^t = Timer("Mesh Generation")$/;"	v
t	scripts/test3D_GOA.py	/^t = Timer('PNPS')$/;"	v
t	scripts/test3D_GOA.py	/^t = Timer('adaptive PB')$/;"	v
t	scripts/test_SimplePNPS.py	/^t = Timer("solve")$/;"	v
t	scripts/test_ahem.py	/^t = T[1]$/;"	v
t	scripts/test_ahem.py	/^t = T_noF[1]$/;"	v
t	scripts/test_ahem.py	/^t = Timer("meshing")$/;"	v
t	scripts/test_ahem.py	/^t = Timer("reading geometry")$/;"	v
t1	nanopores/geometries/finfet.py	/^t1 = 1.5 #thickness of the oxide layer$/;"	v
t2	nanopores/geometries/finfet.py	/^t2 = 3. #thickness of the gate$/;"	v
tang	nanopores/physics/pnps2D.py	/^        def tang(x):$/;"	f	function:PNPSAxisym.__init__
tau	scripts/random_walk_aHem/run.py	/^tau=0.05 # [ns]$/;"	v
taylorhood	scripts/numerics/hybrid_vs_newton.py	/^taylorhood = False,$/;"	v
taylorhood	scripts/numerics/test_fixedpoint.py	/^taylorhood = False,$/;"	v
test_sgmga	scripts/finfet/collocation_methods/test_sgmga.m	/^function [sparse_point,sparse_weight] = test_sgmga(type,dim_num,itest,level_max,plotyn)$/;"	f
tick_spacing	scripts/numerics/diffusion_with_force_profile.py	/^    tick_spacing = 1.$/;"	v
time	scripts/howorka/test_selectivity.py	/^    time = pde.time,$/;"	v
time	scripts/random_walk_aHem/plot_probability.py	/^time = np.load('timer.npy')$/;"	v
time	scripts/random_walk_aHem/varplots.py	/^time=5e6$/;"	v
timeend	scripts/random_walk_aHem/run.py	/^timeend=5e6$/;"	v
timeidstr	scripts/plot_scripts/script2DWelectrodes.py	/^timeidstr = datetime.now().strftime("%Y-%m-%d_%Hh%M")$/;"	v
timer	scripts/random_walk_aHem/look_at_arrays.py	/^timer=np.load('timer.npy')$/;"	v
timer	scripts/test.py	/^timer = Timer('Start')$/;"	v
timerange	nanopores/tools/transientpde.py	/^def timerange(T, dt):$/;"	f
times	scripts/finfet/finfet-levels.py	/^times = []$/;"	v
timestamp	scripts/finfet/collocation_methods/timestamp.m	/^function timestamp ( )$/;"	f
timestep	nanopores/tools/transientpde.py	/^    def timestep(self, **params):$/;"	m	class:TransientLinearPDE
timestep	scripts/random_walk_aHem/plot_probability.py	/^timestep=maxtime\/float(fineness)$/;"	v
timesteps	nanopores/tools/transientpde.py	/^    def timesteps(self, t=0, **params):$/;"	m	class:TransientLinearPDE
tinterp	scripts/finfet/collocation_methods/tinterp.m	/^function fi = tinterp(p,t,f,pi,i)$/;"	f
title	scripts/plot_scripts/IV_ahem.py	/^title = ("relative diffusivity in pore: "+str(args["rDPore"]) if not hasattr(args["rDPore"], '__iter__') else "ahem surface charge: "+str(args["ahemqs"]))$/;"	v
tlast	scripts/finfet/finfet-levels.py	/^tlast = times.pop()$/;"	v
tmesh	scripts/plot_scripts/script3DW.py	/^    tmesh = Timer('Start')$/;"	v
to2D	nanopores/tools/utilities.py	/^    def to2D(F):$/;"	f	function:convert2D
to3D	nanopores/tools/utilities.py	/^    def to3D(F):$/;"	f	function:convert3D
to_estimator	scripts/numerics/mysolve.py	/^    def to_estimator(dic):$/;"	f	function:load_estimators
to_mesh	nanopores/tools/box.py	/^def to_mesh(clscale=1., pid=""):$/;"	f
tol	nanopores/models/HoworkaSimple.py	/^tol = 1e-5,$/;"	v
tol	nanopores/models/pughpore.py	/^    tol = 1e-2,$/;"	v
tol	scripts/numerics/HoworkaSimple.py	/^tol = 1e-5,$/;"	v
tol	scripts/numerics/hybrid_vs_newton.py	/^tol = 1e-15,$/;"	v
tol	scripts/numerics/linear-robust.py	/^tol = 1e-2,$/;"	v
tol	scripts/numerics/test_bVscheme.py	/^tol = 1e-2,$/;"	v
tol	scripts/numerics/test_fixedpoint.py	/^tol = 1e-15,$/;"	v
tol	scripts/pughpore/test_pugh.py	/^    tol = 1e-2,$/;"	v
tolc	nanopores/geometries/Cyl2D/params_geo.py	/^tolc = 1e-9*nm$/;"	v
tolc	nanopores/geometries/H_cyl_geo/params_geo.py	/^tolc = 1e-10*nm  # tolerance for coordinate comparisons$/;"	v
tolc	nanopores/geometries/H_cyl_geo/params_geo_old.py	/^tolc = 1e-14*nm  # tolerance for coordinate comparisons$/;"	v
tolc	nanopores/geometries/H_geo/params_geo.py	/^tolc = 1e-10*nm  # tolerance for coordinate comparisons$/;"	v
tolc	nanopores/geometries/H_geo/params_geo_old.py	/^tolc = 1e-14*nm  # tolerance for coordinate comparisons$/;"	v
tolc	nanopores/geometries/Nanowire/params_geo.py	/^tolc = 1e-10*nm$/;"	v
tolc	nanopores/geometries/P_geo/params_geo.py	/^tolc = 0.01*nm$/;"	v
tolc	nanopores/geometries/W_2D_geo/params_geo.py	/^tolc = 0.01*nm  # tolerance for coordinate comparisons$/;"	v
tolc	nanopores/geometries/W_3D_geo/params_geo.py	/^tolc = 1e-2*nm  # tolerance for coordinate comparisons$/;"	v
tolc	nanopores/geometries/aHem/params_geo.py	/^tolc = 1e-14*nm  # tolerance for coordinate comparisons$/;"	v
tolc	scripts/params_nice_2D.py	/^tolc = 1e-14*nm  # tolerance for coordinate comparisons$/;"	v
tolnewton	nanopores/physics/pnps.py	/^    tolnewton = 1e-3$/;"	v	class:PNPS
tolnewton	nanopores/scripts/ahemFPT.py	/^tolnewton = 1e-1$/;"	v
tolnewton	nanopores/scripts/ahemIV.py	/^tolnewton = 1e-1$/;"	v
tolnewton	nanopores/tools/pdesystem.py	/^    tolnewton = 1e-4$/;"	v	class:NonlinearPDE
top	nanopores/tools/box.py	/^    top = 3,$/;"	v
top	nanopores/tools/box.py	/^    top = 5,$/;"	v
tri	scripts/howorka/test_forcefields.py	/^tri = mtri.Triangulation(x, y)$/;"	v
triang	scripts/howorka/HoworkaTools.py	/^triang = mtri.Triangulation(xx, yy, tt)$/;"	v
triang	scripts/howorka/video.py	/^triang = mtri.Triangulation(xx, yy, tt)$/;"	v
triangles	scripts/howorka/HoworkaTools.py	/^triangles = mesh.cells()$/;"	v
triangles	scripts/howorka/video.py	/^triangles = mesh.cells()$/;"	v
triangles2	scripts/howorka/HoworkaTools.py	/^triangles2 = numpy.array(triangles)$/;"	v
triangles2	scripts/howorka/video.py	/^triangles2 = numpy.array(triangles)$/;"	v
triarea	scripts/finfet/collocation_methods/triarea.m	/^function A = triarea(p,t)$/;"	f
trid	scripts/howorka/test_forcefields.py	/^trid = dln.Triangulation(x, y)$/;"	v
tt	scripts/howorka/HoworkaTools.py	/^tt = numpy.concatenate([triangles, triangles2])$/;"	v
tt	scripts/howorka/video.py	/^tt = numpy.concatenate([triangles, triangles2])$/;"	v
typestr	nanopores/tools/physicsclass.py	/^def typestr(t): return d[type(t)]$/;"	f
u	scripts/finfet/finfet.py	/^u = pde.solution$/;"	v
u	scripts/numerics/implicit_vs_explicit.py	/^u = Function(U)$/;"	v
u	scripts/numerics/matplotfem2d.py	/^    u = dolfin.Function(V)$/;"	v
u0	scripts/finfet/test_wire.py	/^u0 = Function(PBProblem.space(mesh))$/;"	v
u0	scripts/howorka/HoworkaTools.py	/^u0 = function_from_lambda(u0f)$/;"	v
u0	scripts/howorka/test_selectivity.py	/^u0 = geo.pwconst("c0", dict(bulkfluidtop = c0, default=0.))$/;"	v
u0	scripts/howorka/video.py	/^u0 = function_from_lambda(u0f)$/;"	v
u0	scripts/numerics/implicit_vs_explicit.py	/^u0 = Function(U)$/;"	v
u0	scripts/numerics/selectivity1D.py	/^u0 = geo.pwconst("c0", dict(bulkfluidtop = c0, default=0.))$/;"	v
u0	scripts/toy_models/pnp1Dcyl.py	/^u0 = pb.solution$/;"	v
u0f	scripts/howorka/HoworkaTools.py	/^u0f = lambda x: (c0 if sum((x-x0)**2) < r**2 else 0.) # function$/;"	v
u0f	scripts/howorka/video.py	/^u0f = lambda x: (c0 if sum((x-x0)**2) < r**2 else 0.) # function$/;"	v
u1	scripts/toy_models/pnp1Dcyl.py	/^u1 = pblin.solution$/;"	v
u1D	nanopores/models/pughpore.py	/^class u1D(dolfin.Expression):$/;"	c
uCross	nanopores/tools/utilities.py	/^class uCross(dolfin.Expression):$/;"	c
uCrossVector	nanopores/tools/utilities.py	/^class uCrossVector(dolfin.Expression):$/;"	c
uM	scripts/fluorophore_in_top_reservoir.py	/^uM = 1e-3$/;"	v
uPB	scripts/numerics/anaPNPS_refinement.py	/^def uPB(x):$/;"	f
uPB	scripts/numerics/anaPNPS_refinement_2D.py	/^def uPB(x):$/;"	f
uPB	scripts/numerics/anaPNPS_uniform.py	/^def uPB(x):$/;"	f
uPB	scripts/numerics/analyticalPNPS.py	/^def uPB(x):$/;"	f
uPB	scripts/numerics/analyticalPNPS_2D.py	/^def uPB(x):$/;"	f
uPB	scripts/numerics/analyticalPNPS_3D.py	/^def uPB(x):$/;"	f
uPB	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^def uPB(x):$/;"	f
uPB	scripts/numerics/analyticalPNP_3D.py	/^def uPB(x):$/;"	f
u_PB	scripts/numerics/anaPNPS_refinement.py	/^u_PB = Constant(eps\/eta)*(phi - Constant(phi(R)))$/;"	v
u_PB	scripts/numerics/anaPNPS_refinement_2D.py	/^u_PB = Constant(eps\/eta)*(phi - Constant(phi(R)))$/;"	v
u_PB	scripts/numerics/anaPNPS_uniform.py	/^u_PB = Constant(eps\/eta)*(phi - Constant(phi(R)))$/;"	v
u_PB	scripts/numerics/analyticalPNPS.py	/^u_PB = Constant(eps\/eta)*(phi - Constant(phi(R)))$/;"	v
u_PB	scripts/numerics/analyticalPNPS_2D.py	/^u_PB = Constant(eps\/eta)*(phi - Constant(phi(R)))$/;"	v
u_PB	scripts/numerics/analyticalPNPS_3D.py	/^u_PB = Constant(eps\/eta)*(phi - Constant(phi(R)))$/;"	v
u_PB	scripts/numerics/analyticalPNP_3D.py	/^u_PB = Constant(eps\/eta)*(phi - Constant(phi(R)))$/;"	v
u_to_matlab	nanopores/tools/utilities.py	/^def u_to_matlab(mesh, u, name="u"):$/;"	f
uid	scripts/plot_scripts/IV_ahem.py	/^uid = None$/;"	v
ulast	scripts/finfet/MLSC.py	/^ulast = interpolands.pop()$/;"	v
ulast	scripts/finfet/finfet-levels.py	/^ulast = solutions.pop()$/;"	v
under_line	nanopores/geometries/W_2D_geo/subdomains.py	/^    def under_line(x, y, tan, tolc):$/;"	f	function:subdomain_list
under_line	nanopores/geometries/W_3D_geo/subdomains.py	/^    def under_line(x, y, tan, tolc):$/;"	f	function:subdomain_list
uniform	scripts/numerics/adap2D.py	/^uniform = False,$/;"	v
uniform	scripts/numerics/adap3D.py	/^uniform = False,$/;"	v
uniform_grid	scripts/howorka/forcefields.py	/^def uniform_grid(xi, yi, h):$/;"	f
uniform_grid	scripts/howorka/test_forcefields.py	/^def uniform_grid(xi, yi, h):$/;"	f
uniform_loop	scripts/numerics/anaPNPS_uniform.py	/^def uniform_loop(domain, hrange, solve):$/;"	f
uniform_refinement	nanopores/tools/pdesystem.py	/^    uniform_refinement = False$/;"	v	class:PDESystem
union	nanopores/tools/box.py	/^def union(seq):$/;"	f
union	nanopores/tools/utilities.py	/^    def union(a, b):$/;"	f	function:dict_union
union	nanopores/tools/utilities.py	/^def union(*seq):$/;"	f
unique_id	nanopores/tools/protocol.py	/^def unique_id():$/;"	f
up	scripts/pughpore/sobol_points.py	/^up = nanopores.user_params(pughpore.params, k=3)$/;"	v
up	scripts/pughpore/test_pugh.py	/^up = nano.user_params($/;"	v
update	nanopores/tools/fields.py	/^    def update(self):$/;"	m	class:Header
update	nanopores/tools/fields.py	/^def update():$/;"	f
update_forms	nanopores/tools/coupled.py	/^    def update_forms(self, **new_params):$/;"	m	class:CoupledProblem
update_forms	nanopores/tools/pdesystem.py	/^    def update_forms(self, **new_params):$/;"	m	class:GeneralLinearProblem
update_uold	nanopores/tools/coupled.py	/^    def update_uold(self):$/;"	m	class:CoupledProblem
upperb	nanopores/physics/pore.py	/^    upperb = "bulkcon",$/;"	v
upperb	nanopores/physics/pore.py	/^    upperb = 0.,$/;"	v
upperb	scripts/analytical_test_case.py	/^    upperb = domain2D.boundary("top"),$/;"	v
upperb	scripts/analytical_test_case.py	/^    upperb = v0ex,$/;"	v
upperb	scripts/howorka/largepore.py	/^    upperb = upperb,$/;"	v
upperb	scripts/howorka/largepore.py	/^upperb = reservoir.boundary("top")$/;"	v
upperb	scripts/howorka/largepore_dna.py	/^    upperb = upperb,$/;"	v
upperb	scripts/howorka/largepore_dna.py	/^upperb = reservoir.boundary("top")$/;"	v
upperb	scripts/numerics/anaPNPS_refinement.py	/^    upperb = domain2D.boundary("top"),$/;"	v
upperb	scripts/numerics/anaPNPS_refinement_2D.py	/^    upperb = domain2D.boundary("top"),$/;"	v
upperb	scripts/numerics/anaPNPS_uniform.py	/^    upperb = domain2D.boundary("top"),$/;"	v
upperb	scripts/numerics/analyticalPNPS.py	/^    upperb = domain2D.boundary("top"),$/;"	v
upperb	scripts/numerics/analyticalPNPS_2D.py	/^    upperb = domain2D.boundary("top"),$/;"	v
upperb	scripts/numerics/analyticalPNPS_2D.py	/^    upperb = lscale*eps*bV\/(2.*Rz),$/;"	v
upperb	scripts/numerics/analyticalPNPS_3D.py	/^    upperb = domain2D.boundary("top"),$/;"	v
upperb	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    upperb = domain2D.boundary("top"),$/;"	v
upperb	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    upperb = lscale*eps*bV\/(2.*Rz),$/;"	v
upperb	scripts/numerics/analyticalPNP_3D.py	/^    upperb = domain2D.boundary("top"),$/;"	v
upperb	scripts/numerics/selectivity1D.py	/^    upperb = domain.boundary("right"),$/;"	v
upperb	scripts/numerics/test_fixedpoint_1D.py	/^    upperb = upperb,$/;"	v
upperb	scripts/numerics/test_fixedpoint_1D.py	/^upperb = domain.boundary("right")$/;"	v
upperb	scripts/test_axisym.py	/^    upperb = domain.boundary("top"),$/;"	v
upperb	scripts/test_box.py	/^    upperb = domain.boundary("top"),$/;"	v
upperb	scripts/test_features/curved.py	/^    upperb = domain.boundary("top"),$/;"	v
upperb	scripts/toy_models/pnp1D.py	/^    upperb = upperb,$/;"	v
upperb	scripts/toy_models/pnp1D.py	/^upperb = domain.boundary("right")$/;"	v
upperhalf	scripts/howorka/largepore.py	/^upperhalf = Box([-R, -R, 0], [R, R, H])$/;"	v
upperhalf	scripts/howorka/largepore_dna.py	/^upperhalf = Box([-R, -R, cmem[2]], [R, R, 0.5*H])$/;"	v
upperhalf	scripts/test_box.py	/^upperhalf = Box([0, 0], [Rx, Rz])$/;"	v
uppermbias	nanopores/physics/howorka.py	/^uppermbias = None # upper\/lower concentration bias of negative\/positive ions [mol\/m**3]$/;"	v
uppermbias	nanopores/physics/pore_dna.py	/^uppermbias = None # upper\/lower concentration bias of negative\/positive ions [mol\/m**3]$/;"	v
uppermbias	nanopores/physics/pore_molecule.py	/^uppermbias = None # upper\/lower concentration bias of negative\/positive ions [mol\/m**3]$/;"	v
upperpbias	nanopores/physics/howorka.py	/^upperpbias = None$/;"	v
upperpbias	nanopores/physics/pore_dna.py	/^upperpbias = None$/;"	v
upperpbias	nanopores/physics/pore_molecule.py	/^upperpbias = None$/;"	v
user_params	nanopores/tools/utilities.py	/^def user_params(default=None, **params):$/;"	f
v	scripts/numerics/implicit_vs_explicit.py	/^v = Function(V)$/;"	v
v	scripts/stokes_law/stokes_law.py	/^v = (0.,-0.01) # particle velocity [m\/s] in cylindrical coordinates (r,z)$/;"	v
v	scripts/stokes_law/stokes_law_2D_stats.py	/^v = (0.,-0.1) # particle velocity [m\/s] in cylindrical coordinates (r,z)$/;"	v
v0	nanopores/physics/electrolyte.py	/^v0 = dict()$/;"	v
v0	nanopores/physics/pore.py	/^v0 = dict($/;"	v
v0	scripts/analytical_test_case.py	/^    v0 = v0,$/;"	v
v0	scripts/analytical_test_case.py	/^    v0 = {}$/;"	v
v0	scripts/analytical_test_case.py	/^v0 = dict($/;"	v
v0	scripts/numerics/adap2Dref.py	/^v0 = pb.solution$/;"	v
v0	scripts/numerics/anaPNPS_refinement.py	/^    v0 = dict(wall = vPB()),$/;"	v
v0	scripts/numerics/anaPNPS_refinement.py	/^    v0 = {}$/;"	v
v0	scripts/numerics/anaPNPS_refinement_2D.py	/^    v0 = dict(wall = vPB()),$/;"	v
v0	scripts/numerics/anaPNPS_refinement_2D.py	/^    v0 = {}$/;"	v
v0	scripts/numerics/anaPNPS_uniform.py	/^    v0 = dict(wall = vPB()),$/;"	v
v0	scripts/numerics/anaPNPS_uniform.py	/^    v0 = {}$/;"	v
v0	scripts/numerics/analyticalPNPS.py	/^    v0 = dict(wall = vPB()),$/;"	v
v0	scripts/numerics/analyticalPNPS.py	/^    v0 = {}$/;"	v
v0	scripts/numerics/analyticalPNPS_2D.py	/^    v0 = dict(wall = vPB()),$/;"	v
v0	scripts/numerics/analyticalPNPS_2D.py	/^    v0 = {}$/;"	v
v0	scripts/numerics/analyticalPNPS_3D.py	/^    v0 = dict(wall = vPB()),$/;"	v
v0	scripts/numerics/analyticalPNPS_3D.py	/^    v0 = {}$/;"	v
v0	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    v0 = dict(wall = vPB()),$/;"	v
v0	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    v0 = {}$/;"	v
v0	scripts/numerics/analyticalPNP_3D.py	/^    v0 = dict(wall = vPB()),$/;"	v
v0	scripts/numerics/analyticalPNP_3D.py	/^    v0 = {}$/;"	v
v0	scripts/numerics/implicit_vs_explicit.py	/^v0 = Function(V)$/;"	v
v0	scripts/numerics/test_fixedpoint_1D.py	/^    v0 = dict(upperb = 0., lowerb = bV),$/;"	v
v0	scripts/plot_scripts/IV_curve_2D.py	/^v0 = pb.solution$/;"	v
v0	scripts/plot_scripts/PMF_Profile_2D.py	/^    v0 = pb.solutions()[0]$/;"	v
v0	scripts/stokes_law/stokes_law.py	/^v0 = abs(v[1])$/;"	v
v0	scripts/test2D.py	/^v0 = pb.solution$/;"	v
v0	scripts/test2Dold.py	/^v0 = pb.solution$/;"	v
v0	scripts/test3D_GOA.py	/^v0 = pb.solution$/;"	v
v0ex	scripts/analytical_test_case.py	/^v0ex = Potential()$/;"	v
v1	scripts/plot_scripts/script2DWelectrodes.py	/^v1 = pnps1.solutions()[0]$/;"	v
v2d	scripts/howorka/HoworkaTools.py	/^v2d = dolfin.vertex_to_dof_map(V)$/;"	v
v2d	scripts/howorka/forcefield.py	/^v2d = dolfin.vertex_to_dof_map(V)$/;"	v
v2d	scripts/numerics/force_profiles.py	/^v2d = dolfin.vertex_to_dof_map(V)$/;"	v
vAna	scripts/numerics/implicit_vs_explicit.py	/^class vAna(Expression):$/;"	c
vD	nanopores/physics/finfet.py	/^vD = .5$/;"	v
vG	nanopores/physics/finfet.py	/^vG = .1$/;"	v
vPB	scripts/numerics/anaPNPS_refinement.py	/^class vPB(Expression):$/;"	c
vPB	scripts/numerics/anaPNPS_refinement_2D.py	/^class vPB(Expression):$/;"	c
vPB	scripts/numerics/anaPNPS_uniform.py	/^class vPB(Expression):$/;"	c
vPB	scripts/numerics/analyticalPNPS.py	/^class vPB(Expression):$/;"	c
vPB	scripts/numerics/analyticalPNPS_2D.py	/^class vPB(Expression):$/;"	c
vPB	scripts/numerics/analyticalPNPS_3D.py	/^class vPB(Expression):$/;"	c
vPB	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^class vPB(Expression):$/;"	c
vPB	scripts/numerics/analyticalPNP_3D.py	/^class vPB(Expression):$/;"	c
vS	nanopores/physics/finfet.py	/^vS = 0.$/;"	v
va	scripts/numerics/implicit_vs_explicit.py	/^va = Function(V)$/;"	v
value	nanopores/tools/geometry.py	/^    def value(self):$/;"	m	class:PhysicalBC
value	nanopores/tools/illposed.py	/^    def value(self):$/;"	m	class:Functional
value_shape	nanopores/tools/utilities.py	/^        def value_shape(self):$/;"	m	class:convert2D.Convert2DExpression
value_shape	nanopores/tools/utilities.py	/^        def value_shape(self):$/;"	m	class:convert3D.Convert3DExpression
value_shape	nanopores/tools/utilities.py	/^    def value_shape(self):$/;"	m	class:uCrossVector
value_shape	scripts/howorka/forcefields.py	/^        def value_shape(self):$/;"	m	class:lambda_to_S1.expr
value_shape	scripts/howorka/test_forcefields.py	/^        def value_shape(self):$/;"	m	class:S1.expr
value_shape	scripts/numerics/adap3Dref.py	/^    def value_shape(self):$/;"	m	class:w3D
var	scripts/random_walk_aHem/varplots.py	/^var=np.array([variance(xaxis[i])-ex[i]**2 for i in range(1,xaxis.shape[0])])$/;"	v
var	scripts/random_walk_aHem/varplots.py	/^var=np.insert(var,0,0)$/;"	v
variance	scripts/random_walk_aHem/varplots.py	/^def variance(t):$/;"	f
vdc_numerator_sequence	scripts/finfet/collocation_methods/vdc_numerator_sequence.m	/^function p = vdc_numerator_sequence ( n )$/;"	f
vec_colex_next3	scripts/finfet/collocation_methods/vec_colex_next3.m	/^function [ a, more ] = vec_colex_next3 ( dim_num, base, a, more )$/;"	f
verbose	scripts/numerics/test_fixedpoint.py	/^verbose = True,$/;"	v
video	scripts/howorka/HoworkaTools.py	/^    video = False,$/;"	v
video	scripts/howorka/video.py	/^    video = False,$/;"	v
viridis	scripts/howorka/colormaps.py	/^viridis = cmaps['viridis']$/;"	v
visc	scripts/random_walk_aHem/run.py	/^visc=1e-3 #[Pa*s]$/;"	v
visc	scripts/random_walk_aHem/varplots.py	/^visc=1e-3 #[Pa*s]$/;"	v
visualize	nanopores/physics/exittime.py	/^    def visualize(self):$/;"	m	class:SuccessfulExit
visualize	nanopores/physics/pnps.py	/^    def visualize(self, subdomain=None):$/;"	m	class:PNPS
visualize	nanopores/tools/pdesystem.py	/^    def visualize(self, subdomain=None):$/;"	m	class:PDESystem
visualize	nanopores/tools/transientpde.py	/^    def visualize(self):$/;"	m	class:TransientLinearPDE
visualize1D	nanopores/models/pughpore.py	/^def visualize1D(geo, pnp):$/;"	f
volC	scripts/test_features/curved.py	/^volC = hcross*R**2*pi$/;"	v
volcharge	nanopores/physics/electrolyte.py	/^volcharge = dict() # volume charges for RHS$/;"	v
volcharge	nanopores/physics/howorka.py	/^volcharge = dict( # volume charges for RHS$/;"	v
volcharge	nanopores/physics/pore_dna.py	/^volcharge = {# volume charges for RHS$/;"	v
volcharge	nanopores/physics/pore_molecule.py	/^volcharge = dict( # volume charges for RHS$/;"	v
volcharge	scripts/fluorophore_in_top_reservoir.py	/^    volcharge = volcharge,$/;"	v
volcharge	scripts/fluorophore_in_top_reservoir.py	/^volcharge = {$/;"	v
volcharge0	scripts/fluorophore_in_top_reservoir.py	/^volcharge0 = bulkcon*mol*Qmol$/;"	v
voltage	scripts/finfet/test_wire.py	/^voltage = -3 # voltage drop across 1000 nm wire [V]$/;"	v
volume	nanopores/tools/geometry.py	/^    def volume(self, string, dx="dx", cyl=True):$/;"	m	class:Geometry
von1	scripts/plot_scripts/script2DWelectrodes.py	/^von1 = interpolate(v, FunctionSpace(geo1.mesh,"CG",1))$/;"	v
vparams	scripts/plot_scripts/script2DWelectrodes.py	/^    vparams = vparams,$/;"	v
vparams	scripts/plot_scripts/script2DWelectrodes.py	/^vparams = dict(#Membraneqs = numpy.linspace(0.0, -0.2, 11).tolist(),$/;"	v
w	nanopores/geometries/Nanowire/params_geo.py	/^w = 176*nm$/;"	v
w0	scripts/numerics/adap3Dref.py	/^w0 = w3D(u=u, p=p)$/;"	v
w3D	scripts/numerics/adap3Dref.py	/^class w3D(dolfin.Expression):$/;"	c
w_core	nanopores/geometries/Nanowire/params_geo.py	/^w_core = 60*nm$/;"	v
w_layer	nanopores/geometries/Nanowire/params_geo.py	/^w_layer = 8*nm$/;"	v
w_side	nanopores/geometries/Nanowire/params_geo.py	/^w_side = 50*nm$/;"	v
w_wire	nanopores/geometries/Nanowire/params_geo.py	/^w_wire = w_core + 2*w_layer$/;"	v
wait	nanopores/tools/mpipool.py	/^    def wait(self):$/;"	m	class:MPIPool
wall	scripts/analytical_test_case.py	/^    wall = domain1D.boundary("right"),$/;"	v
wall	scripts/analytical_test_case.py	/^    wall = domain2D.boundary("right"),$/;"	v
wall	scripts/analytical_test_case.py	/^    wall = v0ex,$/;"	v
wall	scripts/numerics/anaPNPS_refinement.py	/^    wall = domain1D.boundary("right"),$/;"	v
wall	scripts/numerics/anaPNPS_refinement.py	/^    wall = domain2D.boundary("right"),$/;"	v
wall	scripts/numerics/anaPNPS_refinement_2D.py	/^    wall = domain1D.boundary("right"),$/;"	v
wall	scripts/numerics/anaPNPS_refinement_2D.py	/^    wall = domain2D.boundary("right"),$/;"	v
wall	scripts/numerics/anaPNPS_uniform.py	/^    wall = domain1D.boundary("right"),$/;"	v
wall	scripts/numerics/anaPNPS_uniform.py	/^    wall = domain2D.boundary("right"),$/;"	v
wall	scripts/numerics/analyticalPNPS.py	/^    wall = domain1D.boundary("right"),$/;"	v
wall	scripts/numerics/analyticalPNPS.py	/^    wall = domain2D.boundary("right"),$/;"	v
wall	scripts/numerics/analyticalPNPS_2D.py	/^    wall = domain1D.boundary("right"),$/;"	v
wall	scripts/numerics/analyticalPNPS_2D.py	/^    wall = domain2D.boundary("right"),$/;"	v
wall	scripts/numerics/analyticalPNPS_3D.py	/^    wall = domain1D.boundary("right"),$/;"	v
wall	scripts/numerics/analyticalPNPS_3D.py	/^    wall = domain2D.boundary("right"),$/;"	v
wall	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    wall = domain1D.boundary("right"),$/;"	v
wall	scripts/numerics/analyticalPNPS_uncoupled_2D.py	/^    wall = domain2D.boundary("right"),$/;"	v
wall	scripts/numerics/analyticalPNP_3D.py	/^    wall = domain1D.boundary("right"),$/;"	v
wall	scripts/numerics/analyticalPNP_3D.py	/^    wall = domain2D.boundary("right"),$/;"	v
wall	scripts/test_features/curved.py	/^    wall = domain.boundary("right"),$/;"	v
wall	scripts/toy_models/pnp1Dcyl.py	/^    wall = domain.boundary("right"),$/;"	v
water	scripts/toy_models/pnp1Dcyl.py	/^    water = "fluid",$/;"	v
wb	nanopores/geometries/finfet.py	/^wb = 9.$/;"	v
work	scripts/random_walk_aHem/run.py	/^work=end-start$/;"	v
workh	scripts/random_walk_aHem/run.py	/^workh=work\/3600.$/;"	v
wrapper	nanopores/tools/fields.py	/^        def wrapper(*args, **params):$/;"	f	function:CacheBase.__call__
wrapper	nanopores/tools/solvers.py	/^        def wrapper(X, nproc=self.nproc, name=self.name, **params):$/;"	f	function:cache_forcefield.__call__
write	nanopores/tools/protocol.py	/^    def write(self):$/;"	m	class:Data
write_dict	nanopores/tools/dictio.py	/^def write_dict(data, filename):$/;"	f
write_files	scripts/debug.py	/^write_files = True,$/;"	v
write_values	nanopores/tools/protocol.py	/^    def write_values(self, other, uid):$/;"	m	class:Data
ww	nanopores/geometries/finfet.py	/^ww = 5.$/;"	v
x	scripts/FPTscript.py	/^x = array([  1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,  10., 20., 40.])$/;"	v
x	scripts/howorka/HoworkaTools.py	/^x = mesh.coordinates()[:,0]$/;"	v
x	scripts/howorka/test_forcefields.py	/^x = mirror(x,-1)$/;"	v
x	scripts/howorka/test_forcefields.py	/^x = np.array([t[0] for t in X])$/;"	v
x	scripts/howorka/video.py	/^x = mesh.coordinates()[:,0]$/;"	v
x	scripts/numerics/PMF.py	/^x = numpy.linspace(*space)$/;"	v
x	scripts/test_features/howorka3D.py	/^x = [[0, 0, z0] for z0 in z]$/;"	v
x0	nanopores/geometries/pughpore.py	/^    x0 = [0., 0., -20.],$/;"	v
x0	nanopores/models/Howorka.py	/^x0 = None,$/;"	v
x0	nanopores/models/Howorka.py	/^x0 = x0,$/;"	v
x0	nanopores/models/HoworkaSimple.py	/^x0 = x0,$/;"	v
x0	nanopores/models/pughpore.py	/^    x0 = pughpore.params["x0"],$/;"	v
x0	nanopores/scripts/test_geometry_3D.py	/^x0 = [0.,0.,z0],$/;"	v
x0	nanopores/scripts/test_survival.py	/^    x0 = [5., 0., 10.], # |x0| > 2.2$/;"	v
x0	nanopores/scripts/test_survival.py	/^x0 = geo.params["x0"]$/;"	v
x0	nanopores/testsuite/test_2D_with_molecule.py	/^x0 = [0.0, 0.0, 0.0e-9]$/;"	v
x0	nanopores/testsuite/test_3D_with_molecule.py	/^x0 = [0.0, 0.0, 0.0]$/;"	v
x0	scripts/howorka/HoworkaTools.py	/^x0 = numpy.array([0., 8.]) # position of region    $/;"	v
x0	scripts/howorka/forcefield3D.py	/^    x0 = [x[0], 0., x[1]]$/;"	v
x0	scripts/howorka/largepore_dna.py	/^x0 = [0.,1.,.5*hpore - rMolecule - 0.2]$/;"	v
x0	scripts/howorka/video.py	/^x0 = numpy.array([0., 8.]) # position of region    $/;"	v
x0	scripts/numerics/H3Dgeometry.py	/^x0 = [1., 0., 6.],$/;"	v
x0	scripts/numerics/H3Drefine.py	/^x0 = [0., 0., nm*z0],$/;"	v
x0	scripts/numerics/Howorka.py	/^x0 = x0,$/;"	v
x0	scripts/numerics/HoworkaSimple.py	/^x0 = x0,$/;"	v
x0	scripts/numerics/adap2D.py	/^x0 = [0.,0.,z0],$/;"	v
x0	scripts/numerics/adap2Dpb.py	/^x0 = [0.,0.,z0],$/;"	v
x0	scripts/numerics/adap2Dref.py	/^x0 = [0.,0.,z0],$/;"	v
x0	scripts/numerics/adap3D.py	/^x0 = [0.,0.,z0],$/;"	v
x0	scripts/numerics/adap3Dpb.py	/^x0 = [0.,0.,z0],$/;"	v
x0	scripts/numerics/adap3Dref.py	/^x0 = [0.,0.,z0],$/;"	v
x0	scripts/numerics/hybrid_vs_newton.py	/^x0 = None,$/;"	v
x0	scripts/numerics/implicit_vs_explicit.py	/^x0 = [0., z0]$/;"	v
x0	scripts/numerics/test_fixedpoint.py	/^x0 = None,$/;"	v
x0	scripts/plot_scripts/IV_ahem.py	/^    x0 = None, #doesn't work$/;"	v
x0	scripts/plot_scripts/IV_curve_2D.py	/^x0 = None,$/;"	v
x0	scripts/plot_scripts/PMF_Profile_2D.py	/^    x0 = [0, 0, z]$/;"	v
x0	scripts/plot_scripts/current_trace_2D.py	/^    x0 = [0, 0, z]$/;"	v
x0	scripts/pughpore/diffusion.py	/^x0 = [0.,0.,-3.]$/;"	v
x0	scripts/pughpore/test_pugh.py	/^    x0 = [0.,0.,15.]$/;"	v
x0	scripts/survival.py	/^    x0 = [5., 0., 10.], # |x0| > 2.2$/;"	v
x0	scripts/survival.py	/^x0 = geo.params["x0"]$/;"	v
x0	scripts/test.py	/^x0 = [0.,0.,z0],$/;"	v
x0	scripts/test2D.py	/^x0 = [0.,0.,z0],$/;"	v
x0	scripts/test2Dold.py	/^x0 = [0.,0.,z0],$/;"	v
x0	scripts/test3D_GOA.py	/^x0 = [0.,0.,z0],$/;"	v
x0	scripts/test_SimplePNPS.py	/^x0 = None,$/;"	v
x0	scripts/test_ahem.py	/^    x0 = [5., 0., 10.], # |x0| > 2.2$/;"	v
x0	scripts/test_ahem.py	/^x0 = geo.params["x0"]$/;"	v
x2	scripts/howorka/HoworkaTools.py	/^x2 = -x[notx0]$/;"	v
x2	scripts/howorka/video.py	/^x2 = -x[notx0]$/;"	v
x_core	nanopores/geometries/Nanowire/params_geo.py	/^x_core = w_side + w_layer$/;"	v
x_mem	scripts/plot_forces_aHem/combine.py	/^x_mem=np.linspace(X_aHem_2d[18][0],leftend,100)$/;"	v
x_mem	scripts/plot_forces_aHem/combine2.py	/^x_mem=np.linspace(X_aHem_2d[18][0],leftend,100)$/;"	v
x_mem	scripts/plot_forces_aHem/plot_drag.py	/^x_mem=np.linspace(X_aHem_2d[18][0],leftend,100)$/;"	v
x_mem	scripts/plot_forces_aHem/plot_el.py	/^x_mem=np.linspace(X_aHem_2d[18][0],leftend,100)$/;"	v
x_mem	scripts/plot_forces_aHem/ppt.py	/^x_mem=np.linspace(X_aHem_2d[18][0],leftend,100)$/;"	v
x_mem	scripts/random_walk_aHem/plot_aHem.py	/^x_mem=np.linspace(X_aHem_2d[18][0],leftend,100)$/;"	v
x_mem	scripts/random_walk_aHem/plot_path.py	/^x_mem=np.linspace(X_aHem_2d[18][0],leftend,100)$/;"	v
x_mem_2	scripts/plot_forces_aHem/combine.py	/^x_mem_2=-x_mem$/;"	v
x_mem_2	scripts/plot_forces_aHem/combine2.py	/^x_mem_2=-x_mem$/;"	v
x_mem_2	scripts/plot_forces_aHem/plot_drag.py	/^x_mem_2=-x_mem$/;"	v
x_mem_2	scripts/plot_forces_aHem/plot_el.py	/^x_mem_2=-x_mem$/;"	v
x_mem_2	scripts/plot_forces_aHem/ppt.py	/^x_mem_2=-x_mem$/;"	v
xaxis	scripts/random_walk_aHem/varplots.py	/^xaxis = np.linspace(0,time,100) # time [ns]$/;"	v
xfar	nanopores/scripts/test_survival.py	/^xfar = map(lambda x: rfar\/r0*x, x0)$/;"	v
xfar	scripts/survival.py	/^xfar = map(lambda x: rfar\/r0*x, x0)$/;"	v
xfar	scripts/test_ahem.py	/^xfar = map(lambda x: rfar\/r0*x, x0)$/;"	v
xi	scripts/finfet/test_wire.py	/^    xi = random_dopant_positions(N, **geo_params)$/;"	v
xlab	scripts/numerics/PMF.py	/^xlab = "z-coordinate of molecule center [nm]"$/;"	v
xlabel	nanopores/tools/transientpde.py	/^    xlabel = "z [nm]"$/;"	v	class:TimeDependentPlotter
xlim	scripts/numerics/plot_robustness.py	/^xlim = [0.005, 4.]$/;"	v
xnear	nanopores/scripts/test_survival.py	/^xnear = map(lambda x: rnear\/r0*x, x0)$/;"	v
xnear	scripts/survival.py	/^xnear = map(lambda x: rnear\/r0*x, x0)$/;"	v
xnear	scripts/test_ahem.py	/^xnear = map(lambda x: rnear\/r0*x, x0)$/;"	v
xparams	scripts/howorka/test_forcefields.py	/^xparams = fields.load_file("xforce")["params"]$/;"	v
xx	scripts/howorka/HoworkaTools.py	/^xx = numpy.concatenate([x, x2])$/;"	v
xx	scripts/howorka/video.py	/^xx = numpy.concatenate([x, x2])$/;"	v
y	scripts/FPTscript.py	/^y = array([ 1.43748472,  2.85920221,  3.34647272,  3.67373476,  3.84163926,    3.93641666,  4.02680935,  4.09577207,  4.13149867,  4.16848892, 4.267684, 4.318430])$/;"	v
y	scripts/howorka/HoworkaTools.py	/^y = mesh.coordinates()[:,1]$/;"	v
y	scripts/howorka/test_forcefields.py	/^y = mirror(y,1)$/;"	v
y	scripts/howorka/test_forcefields.py	/^y = np.array([t[1] for t in X])$/;"	v
y	scripts/howorka/video.py	/^y = mesh.coordinates()[:,1]$/;"	v
y	scripts/numerics/PMF.py	/^y = list(PMF(F_explicit, *space))$/;"	v
y	scripts/numerics/PMF.py	/^y = list(PMF(F_implicit, *space))$/;"	v
y1	scripts/random_walk_aHem/varplots.py	/^y1=np.zeros(xaxis.shape[0])$/;"	v
y2	scripts/howorka/HoworkaTools.py	/^y2 = y[notx0]$/;"	v
y2	scripts/howorka/video.py	/^y2 = y[notx0]$/;"	v
y2	scripts/random_walk_aHem/varplots.py	/^y2=np.array([2*D*t for t in xaxis])$/;"	v
y_mem	scripts/plot_forces_aHem/combine.py	/^y_mem=np.zeros(x_mem.shape[0])+X_aHem_2d[18][1]$/;"	v
y_mem	scripts/plot_forces_aHem/combine2.py	/^y_mem=np.zeros(x_mem.shape[0])+X_aHem_2d[18][1]$/;"	v
y_mem	scripts/plot_forces_aHem/plot_drag.py	/^y_mem=np.zeros(x_mem.shape[0])+X_aHem_2d[18][1]$/;"	v
y_mem	scripts/plot_forces_aHem/plot_el.py	/^y_mem=np.zeros(x_mem.shape[0])+X_aHem_2d[18][1]$/;"	v
y_mem	scripts/plot_forces_aHem/ppt.py	/^y_mem=np.zeros(x_mem.shape[0])+X_aHem_2d[18][1]$/;"	v
y_mem	scripts/random_walk_aHem/plot_aHem.py	/^y_mem=np.zeros(x_mem.shape[0])+X_aHem_2d[18][1]$/;"	v
y_mem	scripts/random_walk_aHem/plot_path.py	/^y_mem=np.zeros(x_mem.shape[0])+X_aHem_2d[18][1]$/;"	v
yfar	scripts/howorka/test_forcefields.py	/^yfar = abs(y) > Ry0$/;"	v
ylabel	nanopores/tools/transientpde.py	/^    ylabel = "p(x, t)"$/;"	v	class:TimeDependentPlotter
ylabf	scripts/numerics/PMF.py	/^ylabf = "force [pN]"$/;"	v
ylabu	scripts/numerics/PMF.py	/^ylabu = "PMF [kT]"$/;"	v
ylim	scripts/numerics/plot_robustness.py	/^ylim = [0.05, 4.]$/;"	v
yy	scripts/howorka/HoworkaTools.py	/^yy = numpy.concatenate([y, y2])$/;"	v
yy	scripts/howorka/video.py	/^yy = numpy.concatenate([y, y2])$/;"	v
z	nanopores/geometries/curved.py	/^    def z(self, x):$/;"	m	class:Cylinder
z	nanopores/scripts/calculate_forces.py	/^z = 7.5 # [nm]$/;"	v
z	scripts/debug.py	/^z = [0.,7.5],$/;"	v
z	scripts/howorka/HoworkaTools.py	/^    z = numpy.abs(function2values(pde.solution)) # dirty trick to hide negative values$/;"	v
z	scripts/howorka/video.py	/^    z = numpy.abs(function2values(pde.solution)) # dirty trick to hide negative values$/;"	v
z	scripts/plot_scripts/PMF_Profile_2D.py	/^    z = round(z, ndigits)$/;"	v
z	scripts/plot_scripts/current_trace_2D.py	/^    z = round(z, ndigits)$/;"	v
z	scripts/pughpore/plotJ.py	/^    z = [x[2] for x in field["x"]]$/;"	v
z	scripts/pughpore/sobol_points.py	/^z = np.array([.5*hpore+5.,.5*hpore+rMolecule,.5*hpore,.5*(hpore-h1),.5*hpore-h1,.5*hpore-h2,-.5*hpore+.75*(hpore-h2),-.5*hpore+.5*(hpore-h2),-.5*hpore+.25*(hpore-h2),-.5*hpore])$/;"	v
z	scripts/test_features/howorka3D.py	/^z = [7, 4.2, 0]$/;"	v
z0	nanopores/geometries/Cyl2D/params_geo.py	/^z0 = 0*nm$/;"	v
z0	nanopores/models/Howorka.py	/^z0 = 2.*nm,$/;"	v
z0	nanopores/models/HoworkaSimple.py	/^z0 = 2.*nm,$/;"	v
z0	nanopores/scripts/ahemFPT.py	/^z0 = 10.$/;"	v
z0	nanopores/scripts/ahemIV.py	/^z0 = 10.$/;"	v
z0	nanopores/scripts/test_geometry_3D.py	/^z0 = 5.0*nm$/;"	v
z0	scripts/howorka/forcefield.py	/^    z0 = None,$/;"	v
z0	scripts/numerics/H3Drefine.py	/^z0 = 2.,$/;"	v
z0	scripts/numerics/Howorka.py	/^z0 = 2.*nm,$/;"	v
z0	scripts/numerics/HoworkaSimple.py	/^z0 = 2.*nm,$/;"	v
z0	scripts/numerics/adap2D.py	/^z0 = 2.*nm,$/;"	v
z0	scripts/numerics/adap2Dpb.py	/^z0 = 2.*nm,$/;"	v
z0	scripts/numerics/adap2Dref.py	/^z0 = 2.*nm,$/;"	v
z0	scripts/numerics/adap3D.py	/^z0 = 2.*nm,$/;"	v
z0	scripts/numerics/adap3Dpb.py	/^z0 = 2.*nm,$/;"	v
z0	scripts/numerics/adap3Dref.py	/^z0 = 2.*nm,$/;"	v
z0	scripts/numerics/implicit_vs_explicit.py	/^z0 = 2.,$/;"	v
z0	scripts/plot_scripts/PMF_Profile_2D.py	/^z0 = -10.*nm$/;"	v
z0	scripts/plot_scripts/parameter_script.py	/^z0 = 10.,$/;"	v
z0	scripts/test.py	/^z0 = 4.0*nm$/;"	v
z0	scripts/test2D.py	/^z0 = 0.*nm,$/;"	v
z0	scripts/test2Dold.py	/^z0 = 7.5*nm$/;"	v
z0	scripts/test3D_GOA.py	/^z0 = -4.*nm$/;"	v
z1	scripts/pughpore/plotJ.py	/^    z1 = [z[i] for i in I]$/;"	v
z_core	nanopores/geometries/Nanowire/params_geo.py	/^z_core = h_side$/;"	v
z_h	scripts/random_walk_aHem/plot_path.py	/^z_h=np.load('z_h.npy')$/;"	v
z_h	scripts/random_walk_aHem/run.py	/^z_h=np.array([])$/;"	v
zero	scripts/howorka/largepore.py	/^zero = [0, 0, 0]$/;"	v
zero	scripts/howorka/largepore_dna.py	/^zero = [0, 0, 0]$/;"	v
zforces	nanopores/physics/pnps.py	/^    def zforces(self):$/;"	m	class:PNPS
zforces_implicit	nanopores/physics/pnps.py	/^    def zforces_implicit(self, z0, cdrag=1.):$/;"	m	class:PNPS
zigzag	nanopores/geometries/Nanowire/py4geo.py	/^def zigzag(x0, *sequence, **kw):$/;"	f
zz	scripts/howorka/HoworkaTools.py	/^zz = numpy.zeros(xx.shape)$/;"	v
zz	scripts/howorka/video.py	/^zz = numpy.zeros(xx.shape)$/;"	v
zz_indicator	nanopores/tools/errorest.py	/^def zz_indicator(v,flux=None,dx=None):$/;"	f
